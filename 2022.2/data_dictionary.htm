
          <!DOCTYPE html>
          <html>
            <head>
              <style type="text/css">
                #table { font-family:"Lucida Sans Unicode", "Lucida Grande", Sans-Serif;font-size:12px;text-align:left;border-collapse:collapse;margin-left:10%;margin-right:10%;margin-top:40px;margin-bottom:40px; }
                #table tr.field th {font-size:14px;font-weight:bold;background:#b9c9fe;border-top:4px solid #aabcfe;border-bottom:1px solid #fff;color:#039;padding:8px;}
                #table tr.field td {background:#e8edff;border-bottom:1px solid #fff;color:#669;border-top:1px solid transparent;padding:8px;}
                #table tr.field:hover td {background: #BCD4EC;}
                #table tr.fk td {background:#FFD494;border-bottom:1px solid #fff;color:#786549;border-top:1px solid transparent;padding:8px;}
                #table tr.fk:hover td {background:#FFBD5C;}
                table.pgtable_toc { background:#D3E6EA; font-family:"Lucida Sans Unicode", "Lucida Grande", Sans-Serif;font-size:12px;text-align:left;border-collapse:collapse;margin-left:10%;margin-right:10%;margin-top:40px;margin-bottom:40px; }
                table.pgtable_toc tr th { font-size:14px;font-weight:bold;background:#b9c9fe;border-top:4px solid #aabcfe;border-bottom:1px solid #fff;color:#039;padding:8px;}
                table.pgtable_toc tr td { border-bottom:1px solid #fff;color:#669;border-top:1px solid transparent;padding:8px;}
                table.pgtable_toc tr:hover td {background: #BCD4EC;}
              </style>
            </head>
            <body>
              <center><h1>Workgroups Database</h1></center>
              <h2>Introduction</h2>
              <p>
                The following "data dictionary" provides information about the tables and views in the "workgroup" PostgreSQL
                database of the Tableau Server repository.
                This database provides persistent storage for Tableau Server and is primarily intended to support that application.
              </p>
              <p>
                The purpose of most tables is described, along with the type and purpose of columns in the tables. Foreign key
                relations are noted in orange rows with links that take you from the table containing the foreign key to the
                primary key table. This is not an exhaustive description of all tables and fields in the database, but is
                provided here for those customers who want to query it for information about their Tableau Server usage.
                This information is provided with a caution that because the purpose of these tables and views is primarily to
                support Tableau Server, their structure and contents may change without warning and as a result, any custom
                views built from them may break.
              </p>
              <p class="note"><![CDATA[
                  ]]><strong>Note</strong>: All timestamps are in UTC time.
              </p>
              <h2>Contents</h2>
<h3>Tables (these are available to the "readonly" user)</h3>
<table class="pgtable_toc">
<thead><tr>
<th>Table Name</th>
<th>Description</th>
</tr></thead>
<tbody>
<tr><td><a href="#allegro.concurrency_limit_anchor">allegro.concurrency_limit</a></td><td class="pgtable_description">Run time table for concurrency limit.</td></tr>
<tr><td><a href="#allegro.concurrency_limit_config_anchor">allegro.concurrency_limit_config</a></td><td class="pgtable_description">Config of the concurrency limit.</td></tr>
<tr><td><a href="#allegro.rate_limit_anchor">allegro.rate_limit</a></td><td class="pgtable_description">Run time table for rate limit.</td></tr>
<tr><td><a href="#allegro.rate_limit_config_anchor">allegro.rate_limit_config</a></td><td class="pgtable_description">Config of the rate limit.</td></tr>
<tr><td><a href="#broadcast.broadcast_views_anchor">broadcast.broadcast_views</a></td><td class="pgtable_description">Holds the status of broadcast vizzes</td></tr>
<tr><td><a href="#broadcast.broadcast_workbooks_anchor">broadcast.broadcast_workbooks</a></td><td class="pgtable_description">Holds metadata for broadcasted vizzes on the server.</td></tr>
<tr><td><a href="#container_service.container_contents_anchor">container_service.container_contents</a></td><td class="pgtable_description">Table which stores the container contents for container service</td></tr>
<tr><td><a href="#container_service.containers_anchor">container_service.containers</a></td><td class="pgtable_description">Table which stores the containers for container service</td></tr>
<tr><td><a href="#credentials_service.credentials_anchor">credentials_service.credentials</a></td><td class="pgtable_description">This table stores credential summary, which does not include the actual credentials.</td></tr>
<tr><td><a href="#credentials_service.internal_credentials_anchor">credentials_service.internal_credentials</a></td><td class="pgtable_description">The internal_credentials table holds encrypted credentials.</td></tr>
<tr><td><a href="#explain_data.permission_migration_status_anchor">explain_data.permission_migration_status</a></td><td class="pgtable_description">Current status of the Explain Data Permission Migration background job.</td></tr>
<tr><td><a href="#explain_data.processed_workbooks_anchor">explain_data.processed_workbooks</a></td><td class="pgtable_description">Workbooks that have been processed by the Explain Data Permission Migration background job.</td></tr>
<tr><td><a href="#extensions.extensions_events_anchor">extensions.extensions_events</a></td><td class="pgtable_description">Missing description</td></tr>
<tr><td><a href="#extensions.extensions_instances_anchor">extensions.extensions_instances</a></td><td class="pgtable_description">Missing description</td></tr>
<tr><td><a href="#extensions.extensions_metadata_anchor">extensions.extensions_metadata</a></td><td class="pgtable_description">Missing description</td></tr>
<tr><td><a href="#extensions.safe_list_anchor">extensions.safe_list</a></td><td class="pgtable_description">Missing description</td></tr>
<tr><td><a href="#extensions.site_settings_anchor">extensions.site_settings</a></td><td class="pgtable_description">Missing description</td></tr>
<tr><td><a href="#floweditor.session_store_anchor">floweditor.session_store</a></td><td class="pgtable_description">Each row in the table is a floweditor user session.</td></tr>
<tr><td><a href="#hyper_service.hyper_service_capabilities_anchor">hyper_service.hyper_service_capabilities</a></td><td class="pgtable_description">The capabilities of nodes in the cluster</td></tr>
<tr><td><a href="#hyper_service.hyper_service_locks_anchor">hyper_service.hyper_service_locks</a></td><td class="pgtable_description">The database entities currently locked in the Hyper Service</td></tr>
<tr><td><a href="#hyper_service.hyper_service_migration_databases_anchor">hyper_service.hyper_service_migration_databases</a></td><td class="pgtable_description">The databases currently being migrated to new Hyper nodes</td></tr>
<tr><td><a href="#hyper_service.hyper_service_migration_workspace_database_mapping_anchor">hyper_service.hyper_service_migration_workspace_database_mapping</a></td><td class="pgtable_description">The attached workspace databases of sessions that are currently being migrated to new Hyper nodes</td></tr>
<tr><td><a href="#hyper_service.hyper_service_migration_workspace_mapping_anchor">hyper_service.hyper_service_migration_workspace_mapping</a></td><td class="pgtable_description">The workspaces of currently active session migrations</td></tr>
<tr><td><a href="#hyper_service.hyper_service_migrations_anchor">hyper_service.hyper_service_migrations</a></td><td class="pgtable_description">The currently active migrations</td></tr>
<tr><td><a href="#hyper_service.hyper_service_nodes_anchor">hyper_service.hyper_service_nodes</a></td><td class="pgtable_description">The Hyper nodes currently running in the Hyper Service</td></tr>
<tr><td><a href="#messagebus.subscriptions_anchor">messagebus.subscriptions</a></td><td class="pgtable_description">The table to hold the subscription request details to handle service recovery</td></tr>
<tr><td><a href="#nlp.datasource_usage_stats_anchor">nlp.datasource_usage_stats</a></td><td class="pgtable_description">Usage stats stored for recommendation</td></tr>
<tr><td><a href="#nlp.datasources_anchor">nlp.datasources</a></td><td class="pgtable_description">The table to hold semantic model datasource in nlp service</td></tr>
<tr><td><a href="#nlp.es_historical_configurations_anchor">nlp.es_historical_configurations</a></td><td class="pgtable_description">Elastic Search Configuration History for Tableau Server</td></tr>
<tr><td><a href="#nlp.events_anchor">nlp.events</a></td><td class="pgtable_description">Store the last event processed by nlp service</td></tr>
<tr><td><a href="#nlp.expressions_anchor">nlp.expressions</a></td><td class="pgtable_description">Versioned expressions created by user interactions</td></tr>
<tr><td><a href="#nlp.fields_anchor">nlp.fields</a></td><td class="pgtable_description">The table to hold fields of semantic model datasource in nlp service</td></tr>
<tr><td><a href="#nlp.jobs_anchor">nlp.jobs</a></td><td class="pgtable_description">Store the enqueued jobs to be processed by nlp service</td></tr>
<tr><td><a href="#nlp.links_anchor">nlp.links</a></td><td class="pgtable_description">User created links, each points to a specific LOD expression</td></tr>
<tr><td><a href="#nlp.phrase_recommendation_models_anchor">nlp.phrase_recommendation_models</a></td><td class="pgtable_description">Trained machine learning models for phrases recommendation</td></tr>
<tr><td><a href="#nlp.queries_anchor">nlp.queries</a></td><td class="pgtable_description">Queries stored for datasource analytics</td></tr>
<tr><td><a href="#nlp.recommendation_stats_anchor">nlp.recommendation_stats</a></td><td class="pgtable_description">Recommendation stats extracted from nlp usage data</td></tr>
<tr><td><a href="#nlp.visualizations_anchor">nlp.visualizations</a></td><td class="pgtable_description">visualizations stored for datasource analytics</td></tr>
<tr><td><a href="#public.api_tokens_anchor">public.api_tokens</a></td><td class="pgtable_description">Records for the api tokens</td></tr>
<tr><td><a href="#public.asset_key_marker_anchor">public.asset_key_marker</a></td><td class="pgtable_description">Records are used to flag a particular record in the asset_key_meta_data table.</td></tr>
<tr><td><a href="#public.asset_key_meta_data_anchor">public.asset_key_meta_data</a></td><td class="pgtable_description">Each record holds meta data for an asset encryption key.</td></tr>
<tr><td><a href="#public.asset_list_items_anchor">public.asset_list_items</a></td><td class="pgtable_description">Contains the individual list entries that correspond to the lists defined in the asset_lists table.</td></tr>
<tr><td><a href="#public.asset_lists_anchor">public.asset_lists</a></td><td class="pgtable_description">This table supports the creation of various types of per-user lists. The actual list contents are listed in the asset_list_items table.</td></tr>
<tr><td><a href="#public.async_jobs_anchor">public.async_jobs</a></td><td class="pgtable_description">Records information about background tasks that are run in response to some user action (as opposed to being run on some schedule).</td></tr>
<tr><td><a href="#public.async_service_request_anchor">public.async_service_request</a></td><td class="pgtable_description">Table which stores the requests for async services</td></tr>
<tr><td><a href="#public.async_service_request_execute_history_anchor">public.async_service_request_execute_history</a></td><td class="pgtable_description">Table which stores the execution history for async service request</td></tr>
<tr><td><a href="#public.authorizable_permission_sets_anchor">public.authorizable_permission_sets</a></td><td class="pgtable_description">Many-to-many mapping table between authorizables and permission sets.  An authorizable may have a permission set for every permission_set_class.</td></tr>
<tr><td><a href="#public.authorization_servers_anchor">public.authorization_servers</a></td><td class="pgtable_description">Properties of External Authorization Servers</td></tr>
<tr><td><a href="#public.background_jobs_anchor">public.background_jobs</a></td><td class="pgtable_description">Records information about background tasks that are run by a Backgrounder process. These tasks are almost always run according to some schedule, but in a few cases they may also be triggered by some user actions.</td></tr>
<tr><td><a href="#public.background_jobs_cancel_anchor">public.background_jobs_cancel</a></td><td class="pgtable_description">BG jobs for which cancellation has been requested</td></tr>
<tr><td><a href="#public.big_texts_anchor">public.big_texts</a></td><td class="pgtable_description">This table serves as a convenient place to store a big text object, if necessary. It's kind of a utility table. This table is really just used for internal purposes.</td></tr>
<tr><td><a href="#public.caching_policies_anchor">public.caching_policies</a></td><td class="pgtable_description">This table stores the caching policy configuration for workbooks for which the feature is enabled.</td></tr>
<tr><td><a href="#public.capabilities_anchor">public.capabilities</a></td><td class="pgtable_description">Holds a relatively short list of capabilities. A user can be allowed certain capabilities either through being some sort of admin, or through owning something like a workbook or a project, or via entries in the next_gen_permissions table. Capabilities are things like read, write, export_data, publish, web_authoring, etc.</td></tr>
<tr><td><a href="#public.capability_roles_anchor">public.capability_roles</a></td><td class="pgtable_description">This table serves primarily to associate roles with capabilities. A given role can have many capabilities, and a given capability can be associated with several roles.</td></tr>
<tr><td><a href="#public.collection_metrics_aggregations_anchor">public.collection_metrics_aggregations</a></td><td class="pgtable_description">Each record represents a partial aggregation of analytics for a given collection in a given time interval.  It is often necessary to sum across multiple rows to find a total for a given time interval.</td></tr>
<tr><td><a href="#public.column_assets_anchor">public.column_assets</a></td><td class="pgtable_description">Each record represents a column asset that exists on Tableau Server.</td></tr>
<tr><td><a href="#public.command_job_mappings_anchor">public.command_job_mappings</a></td><td class="pgtable_description">Each record represents a mapping between an extract command and a background job.</td></tr>
<tr><td><a href="#public.comment_attachments_anchor">public.comment_attachments</a></td><td class="pgtable_description">Attachments for comments.</td></tr>
<tr><td><a href="#public.comments_anchor">public.comments</a></td><td class="pgtable_description">Comments users made on views.</td></tr>
<tr><td><a href="#public.connected_apps_anchor">public.connected_apps</a></td><td class="pgtable_description">Properties of Connected Apps</td></tr>
<tr><td><a href="#public.content_migration_manifest_anchor">public.content_migration_manifest</a></td><td class="pgtable_description">for storing data related to a content migration</td></tr>
<tr><td><a href="#public.content_migrations_anchor">public.content_migrations</a></td><td class="pgtable_description">for storing data related to a content migration</td></tr>
<tr><td><a href="#public.content_sync_token_anchor">public.content_sync_token</a></td><td class="pgtable_description">Each record stores the checksum associated to a piece of content</td></tr>
<tr><td><a href="#public.content_usage_anchor">public.content_usage</a></td><td class="pgtable_description">Information about operations performed on Server content.</td></tr>
<tr><td><a href="#public.custom_views_metrics_aggregations_anchor">public.custom_views_metrics_aggregations</a></td><td class="pgtable_description">Each record represents a partial aggregation of analytics for a given custom view in a given time interval.  It is often necessary to sum across multiple rows to find a total for a given time interval.</td></tr>
<tr><td><a href="#public.customized_views_anchor">public.customized_views</a></td><td class="pgtable_description">When a user creates a customized view, the data that supports that goes in this table.</td></tr>
<tr><td><a href="#public.data_acceleration_schedule_anchor">public.data_acceleration_schedule</a></td><td class="pgtable_description">for storing the schedules of data acceleration backgrounder jobs</td></tr>
<tr><td><a href="#public.data_alerts_anchor">public.data_alerts</a></td><td class="pgtable_description">Each record represents an alert. An alert is a predefined data conditions on a view, and if conditions are met all alert recipients get notified.</td></tr>
<tr><td><a href="#public.data_alerts_recipients_anchor">public.data_alerts_recipients</a></td><td class="pgtable_description">Each record represents the intent of recipient to be notified if an event is triggered.</td></tr>
<tr><td><a href="#public.data_connections_anchor">public.data_connections</a></td><td class="pgtable_description">Describes various data sources that are included in either workbooks or datasources.</td></tr>
<tr><td><a href="#public.data_quality_indicators_anchor">public.data_quality_indicators</a></td><td class="pgtable_description">Table to store data quality indicators.</td></tr>
<tr><td><a href="#public.data_quality_triggers_anchor">public.data_quality_triggers</a></td><td class="pgtable_description">Table to store data quality triggers.</td></tr>
<tr><td><a href="#public.data_role_contents_association_anchor">public.data_role_contents_association</a></td><td class="pgtable_description">Represents the association between the data_role and other content types.</td></tr>
<tr><td><a href="#public.data_role_datasource_field_association_anchor">public.data_role_datasource_field_association</a></td><td class="pgtable_description">Represents the association between the data_role and the field on a datasource</td></tr>
<tr><td><a href="#public.data_roles_anchor">public.data_roles</a></td><td class="pgtable_description">Each record represents an entry of Semantics Service data role metadata.</td></tr>
<tr><td><a href="#public.data_update_job_artifacts_anchor">public.data_update_job_artifacts</a></td><td class="pgtable_description">Information about files used by data update jobs.</td></tr>
<tr><td><a href="#public.database_asset_events_anchor">public.database_asset_events</a></td><td class="pgtable_description">Used to store database_asset events stream.</td></tr>
<tr><td><a href="#public.database_assets_anchor">public.database_assets</a></td><td class="pgtable_description">Each record represents a database that exists on Tableau Server.</td></tr>
<tr><td><a href="#public.datasource_events_anchor">public.datasource_events</a></td><td class="pgtable_description">Used to store datasource events stream.</td></tr>
<tr><td><a href="#public.datasource_fields_anchor">public.datasource_fields</a></td><td class="pgtable_description">Describes datasource fields.</td></tr>
<tr><td><a href="#public.datasource_metrics_aggregations_anchor">public.datasource_metrics_aggregations</a></td><td class="pgtable_description">Each record represents a partial aggregation of analytics for a given datasource in a given time interval.  It is often necessary to sum across multiple rows to find a total for a given time interval.</td></tr>
<tr><td><a href="#public.datasource_refresh_properties_anchor">public.datasource_refresh_properties</a></td><td class="pgtable_description">Extension of datasources table for refresh properties (Online). This is 1-0/1 relationship to datasources table. It is
 a separate table since it contains Online-specific properties.</td></tr>
<tr><td><a href="#public.datasource_versions_anchor">public.datasource_versions</a></td><td class="pgtable_description">Datasource versions saved on server.</td></tr>
<tr><td><a href="#public.datasources_anchor">public.datasources</a></td><td class="pgtable_description">Records all Published datasources on server.</td></tr>
<tr><td><a href="#public.desktop_reporting_anchor">public.desktop_reporting</a></td><td class="pgtable_description">Each record represents a Tableau Desktop usage report.</td></tr>
<tr><td><a href="#public.domains_anchor">public.domains</a></td><td class="pgtable_description">Records represent either an Active Directory domain or an authenticate system.</td></tr>
<tr><td><a href="#public.draft_metadata_anchor">public.draft_metadata</a></td><td class="pgtable_description">Each record represents a workbook draft per site, per project per user.</td></tr>
<tr><td><a href="#public.edge_pool_domain_mappings_anchor">public.edge_pool_domain_mappings</a></td><td class="pgtable_description">Each record represents a resource URI managed by edge pool.</td></tr>
<tr><td><a href="#public.edge_pool_metadata_anchor">public.edge_pool_metadata</a></td><td class="pgtable_description">Each record represents an edge pool.</td></tr>
<tr><td><a href="#public.extensions_block_list_anchor">public.extensions_block_list</a></td><td class="pgtable_description">Table which stores the block list of extensions on this server</td></tr>
<tr><td><a href="#public.extensions_events_anchor">public.extensions_events</a></td><td class="pgtable_description">Table which stores the events of referenced extensions calculation service</td></tr>
<tr><td><a href="#public.extensions_instances_anchor">public.extensions_instances</a></td><td class="pgtable_description">Table which stores referenced extensions information calculated from across the workbooks.</td></tr>
<tr><td><a href="#public.extensions_metadata_anchor">public.extensions_metadata</a></td><td class="pgtable_description">Table which stores Metadata of Extensions.</td></tr>
<tr><td><a href="#public.extensions_safe_list_anchor">public.extensions_safe_list</a></td><td class="pgtable_description">Table which stores safe list of extensions that are configured for a given site.</td></tr>
<tr><td><a href="#public.extensions_site_settings_anchor">public.extensions_site_settings</a></td><td class="pgtable_description">Table which stores the site specific settings for extensions</td></tr>
<tr><td><a href="#public.external_service_connections_anchor">public.external_service_connections</a></td><td class="pgtable_description">Table which stores the site specific settings for external service connections</td></tr>
<tr><td><a href="#public.external_service_site_settings_anchor">public.external_service_site_settings</a></td><td class="pgtable_description">Table which stores the site level settings for external services</td></tr>
<tr><td><a href="#public.extract_operations_anchor">public.extract_operations</a></td><td class="pgtable_description">Each record represents an extract create operation on a Tableau workbook.</td></tr>
<tr><td><a href="#public.extract_service_commands_anchor">public.extract_service_commands</a></td><td class="pgtable_description">Table which stores the extract commands for extract service</td></tr>
<tr><td><a href="#public.extract_service_extracts_anchor">public.extract_service_extracts</a></td><td class="pgtable_description">Table which stores the extracts for extract service</td></tr>
<tr><td><a href="#public.extract_service_object_queue_anchor">public.extract_service_object_queue</a></td><td class="pgtable_description">Table which stores the object queue for extract service</td></tr>
<tr><td><a href="#public.extract_service_object_queue_element_anchor">public.extract_service_object_queue_element</a></td><td class="pgtable_description">Table which stores the object queue for extract service</td></tr>
<tr><td><a href="#public.extract_service_results_anchor">public.extract_service_results</a></td><td class="pgtable_description">Table which stores the extract results for extract service</td></tr>
<tr><td><a href="#public.extract_sessions_anchor">public.extract_sessions</a></td><td class="pgtable_description">Extracts that have active vizql sessions.</td></tr>
<tr><td><a href="#public.extracts_anchor">public.extracts</a></td><td class="pgtable_description">Each record corresponds to a directory that contains one or more extract files associated with either a workbook or datasource.</td></tr>
<tr><td><a href="#public.field_indexability_anchor">public.field_indexability</a></td><td class="pgtable_description">The user-defined NLP indexability rules for fields in datasources</td></tr>
<tr><td><a href="#public.flow_drafts_anchor">public.flow_drafts</a></td><td class="pgtable_description">Each record represents a draft for a Tableau Prep flow that exists on Tableau Server.</td></tr>
<tr><td><a href="#public.flow_events_anchor">public.flow_events</a></td><td class="pgtable_description">Each row represents an event affecting a flow</td></tr>
<tr><td><a href="#public.flow_input_steps_anchor">public.flow_input_steps</a></td><td class="pgtable_description">Each record represents an individual input step from a published Tableau Prep flow.</td></tr>
<tr><td><a href="#public.flow_models_anchor">public.flow_models</a></td><td class="pgtable_description">Each row contains model metadata for a flow</td></tr>
<tr><td><a href="#public.flow_output_step_runs_anchor">public.flow_output_step_runs</a></td><td class="pgtable_description">Each record represents a run of an output step of a flow.  See flow_runs for per-flow run history.</td></tr>
<tr><td><a href="#public.flow_output_steps_anchor">public.flow_output_steps</a></td><td class="pgtable_description">Each record represents an individual output step from a published Maestro flow.</td></tr>
<tr><td><a href="#public.flow_output_steps_data_connections_anchor">public.flow_output_steps_data_connections</a></td><td class="pgtable_description">Serves as a linking mechanism between flow output steps, data_connections, and datasources.</td></tr>
<tr><td><a href="#public.flow_output_steps_parameters_anchor">public.flow_output_steps_parameters</a></td><td class="pgtable_description">Serves as a many to many linking mechanism between flow parameters and flow output steps. An output step can require multiple parameters, and a parameter can be required by multiple output steps.</td></tr>
<tr><td><a href="#public.flow_parameter_list_domain_values_anchor">public.flow_parameter_list_domain_values</a></td><td class="pgtable_description">Each record contains a value for the domain for a list type parameter.</td></tr>
<tr><td><a href="#public.flow_parameter_list_domains_anchor">public.flow_parameter_list_domains</a></td><td class="pgtable_description">Each record contains the domain information for a list type parameter.</td></tr>
<tr><td><a href="#public.flow_parameter_range_domains_anchor">public.flow_parameter_range_domains</a></td><td class="pgtable_description">Each record contains the domain information for a range type parameter.</td></tr>
<tr><td><a href="#public.flow_parameters_anchor">public.flow_parameters</a></td><td class="pgtable_description">Each record represents a parameter for a flow on Tableau Server.</td></tr>
<tr><td><a href="#public.flow_run_errors_anchor">public.flow_run_errors</a></td><td class="pgtable_description">Each record represents an individual flow run error which has detailed information about the error</td></tr>
<tr><td><a href="#public.flow_run_spec_output_steps_anchor">public.flow_run_spec_output_steps</a></td><td class="pgtable_description">Each record represents an individual output step in a flow run specification.</td></tr>
<tr><td><a href="#public.flow_run_spec_parameters_anchor">public.flow_run_spec_parameters</a></td><td class="pgtable_description">Each record holds the override value for a parameter.</td></tr>
<tr><td><a href="#public.flow_run_specs_anchor">public.flow_run_specs</a></td><td class="pgtable_description">Each record represents an individual specification about how a Tableau Prep flow should be run</td></tr>
<tr><td><a href="#public.flow_runs_anchor">public.flow_runs</a></td><td class="pgtable_description">Each record represents a run of a flow.  See flow_output_step_runs for per-output-step run history.</td></tr>
<tr><td><a href="#public.flow_runtime_owners_anchor">public.flow_runtime_owners</a></td><td class="pgtable_description">Table to keep track of flow/flow output step owner at flow run time. Used to calculate derived permission on flow outputs.</td></tr>
<tr><td><a href="#public.flow_user_settings_anchor">public.flow_user_settings</a></td><td class="pgtable_description">Each record represents a users selected settings for a Prep flow.</td></tr>
<tr><td><a href="#public.flow_versions_anchor">public.flow_versions</a></td><td class="pgtable_description">flow versions saved on server.</td></tr>
<tr><td><a href="#public.flows_anchor">public.flows</a></td><td class="pgtable_description">Each record represents a Tableau Prep flow that exists on Tableau Server.</td></tr>
<tr><td><a href="#public.geocoding_anchor">public.geocoding</a></td><td class="pgtable_description">Information about geocoding databases.</td></tr>
<tr><td><a href="#public.global_geocoding_anchor">public.global_geocoding</a></td><td class="pgtable_description">Information about global geocoding databases.</td></tr>
<tr><td><a href="#public.group_users_anchor">public.group_users</a></td><td class="pgtable_description">Serves as a many to many linking mechanism between users and groups. A user can belong to multiple groups, and a group can contain multiple users.</td></tr>
<tr><td><a href="#public.groups_anchor">public.groups</a></td><td class="pgtable_description">A grouping of users. Can be locally created or imported from Active Directory.</td></tr>
<tr><td><a href="#public.hist_capabilities_anchor">public.hist_capabilities</a></td><td class="pgtable_description">Records the most useful information about a capability that was relevant at the time of the event (see capabilities table).</td></tr>
<tr><td><a href="#public.hist_collections_anchor">public.hist_collections</a></td><td class="pgtable_description">Records the most useful information about a collection that was relevant at the time of the event.</td></tr>
<tr><td><a href="#public.hist_column_assets_anchor">public.hist_column_assets</a></td><td class="pgtable_description">Records the most useful information about a column that was relevant at the time of the event (see column_assets table).</td></tr>
<tr><td><a href="#public.hist_comments_anchor">public.hist_comments</a></td><td class="pgtable_description">Records the most useful information about a comment that was relevant at the time of the event (see comments table).</td></tr>
<tr><td><a href="#public.hist_configs_anchor">public.hist_configs</a></td><td class="pgtable_description">Can be used to record information about configuration that was in effect at the time of the historical event.</td></tr>
<tr><td><a href="#public.hist_data_connections_anchor">public.hist_data_connections</a></td><td class="pgtable_description">Records the most useful information about a data connection that was relevant at the time of the event (see data_connections table).</td></tr>
<tr><td><a href="#public.hist_data_quality_indicators_anchor">public.hist_data_quality_indicators</a></td><td class="pgtable_description">Records the most useful information about a data quality indicator that was relevant at the time of the event (see data_quality_indicators table).</td></tr>
<tr><td><a href="#public.hist_data_roles_anchor">public.hist_data_roles</a></td><td class="pgtable_description">Records the most useful information about a data role that was relevant at the time of the event (see data_roles table).</td></tr>
<tr><td><a href="#public.hist_database_assets_anchor">public.hist_database_assets</a></td><td class="pgtable_description">Records the most useful information about a database that was relevant at the time of the event (see database_assets table).</td></tr>
<tr><td><a href="#public.hist_datasources_anchor">public.hist_datasources</a></td><td class="pgtable_description">Records the most useful information about a data source that was relevant at the time of the event (see datasources table).</td></tr>
<tr><td><a href="#public.hist_flow_drafts_anchor">public.hist_flow_drafts</a></td><td class="pgtable_description">Records the most useful information about a flow draft that was relevant at the time of the event (see flow_drafts table).</td></tr>
<tr><td><a href="#public.hist_flows_anchor">public.hist_flows</a></td><td class="pgtable_description">Records the most useful information about a flow that was relevant at the time of the event (see flows table).</td></tr>
<tr><td><a href="#public.hist_groups_anchor">public.hist_groups</a></td><td class="pgtable_description">Records the most useful information about a group that was relevant at the time of the event (see groups table).</td></tr>
<tr><td><a href="#public.hist_licensing_roles_anchor">public.hist_licensing_roles</a></td><td class="pgtable_description">Records the most useful information about a licensing role that was relevant at the time of the event (see licensing_roles table).</td></tr>
<tr><td><a href="#public.hist_metrics_anchor">public.hist_metrics</a></td><td class="pgtable_description">Records the most useful information about a metric that was relevant at the time of the event (see metrics table).</td></tr>
<tr><td><a href="#public.hist_projects_anchor">public.hist_projects</a></td><td class="pgtable_description">Records the most useful information about a project that was relevant at the time of the event (see projects table).</td></tr>
<tr><td><a href="#public.hist_published_connections_anchor">public.hist_published_connections</a></td><td class="pgtable_description">Records the most useful information about a published connection that was relevant at the time of the event (see published_connections table).</td></tr>
<tr><td><a href="#public.hist_remote_agents_anchor">public.hist_remote_agents</a></td><td class="pgtable_description">Records the most useful information about a remote agent that was relevant at the time of the event.</td></tr>
<tr><td><a href="#public.hist_schedules_anchor">public.hist_schedules</a></td><td class="pgtable_description">Records the most useful information about a schedule that was relevant at the time of the event (see schedules table).</td></tr>
<tr><td><a href="#public.hist_sites_anchor">public.hist_sites</a></td><td class="pgtable_description">Records the most useful information about a site that was relevant at the time of the event (see sites table).</td></tr>
<tr><td><a href="#public.hist_table_assets_anchor">public.hist_table_assets</a></td><td class="pgtable_description">Records the most useful information about a table that was relevant at the time of the event (see table_assets table).</td></tr>
<tr><td><a href="#public.hist_tags_anchor">public.hist_tags</a></td><td class="pgtable_description">Records the most useful information about a tag that was relevant at the time of the event (see tags table).</td></tr>
<tr><td><a href="#public.hist_tasks_anchor">public.hist_tasks</a></td><td class="pgtable_description">Records the most useful information about a task that was relevant at the time of the event (see tasks table).</td></tr>
<tr><td><a href="#public.hist_users_anchor">public.hist_users</a></td><td class="pgtable_description">Records the most useful information about a user and corresponding system_user that was relevant at the time of the event (see users and system_users tables).</td></tr>
<tr><td><a href="#public.hist_views_anchor">public.hist_views</a></td><td class="pgtable_description">Records the most useful information about a view that was relevant at the time of the event (see views table).</td></tr>
<tr><td><a href="#public.hist_workbooks_anchor">public.hist_workbooks</a></td><td class="pgtable_description">Records the most useful information about a workbook that was relevant at the time of the event (see workbooks table).</td></tr>
<tr><td><a href="#public.historical_disk_usage_anchor">public.historical_disk_usage</a></td><td class="pgtable_description">Records historical disk utilization by Tableau Server for storage monitoring.</td></tr>
<tr><td><a href="#public.historical_event_types_anchor">public.historical_event_types</a></td><td class="pgtable_description">The types of historical events which can be recorded.</td></tr>
<tr><td><a href="#public.historical_events_anchor">public.historical_events</a></td><td class="pgtable_description">This table is the heart of the cluster of tables devoted to historical event auditing. For each event, a record is created on this table. The type of event is indicated through historical_event_type_id, which links to the historical_event_types table. Other information relevant to the event is linked through some of the other id fields in this table.  Note these links go to other hist* tables, which allows the event to refer to things that might have since been deleted from the regular tables.</td></tr>
<tr><td><a href="#public.http_requests_anchor">public.http_requests</a></td><td class="pgtable_description">Each record represents a request received by Tableau Server.</td></tr>
<tr><td><a href="#public.hyper_data_update_jobs_anchor">public.hyper_data_update_jobs</a></td><td class="pgtable_description">Each record represents a data update job for a live-to-Hyper connection.</td></tr>
<tr><td><a href="#public.hyper_databases_anchor">public.hyper_databases</a></td><td class="pgtable_description">Information about Hyper databases.</td></tr>
<tr><td><a href="#public.hyper_databases_validation_anchor">public.hyper_databases_validation</a></td><td class="pgtable_description">Stores hyper databases which went through validation.</td></tr>
<tr><td><a href="#public.id__ad_identity_stores_anchor">public.id__ad_identity_stores</a></td><td class="pgtable_description">Identities for Active Directory identity stores.</td></tr>
<tr><td><a href="#public.id__identity_store_identity_states_anchor">public.id__identity_store_identity_states</a></td><td class="pgtable_description">States of identity.</td></tr>
<tr><td><a href="#public.id__identity_store_instances_anchor">public.id__identity_store_instances</a></td><td class="pgtable_description">Instances of identity stores.</td></tr>
<tr><td><a href="#public.id__identity_store_types_anchor">public.id__identity_store_types</a></td><td class="pgtable_description">Types of identity stores.</td></tr>
<tr><td><a href="#public.id__ldap_identity_stores_anchor">public.id__ldap_identity_stores</a></td><td class="pgtable_description">Identities for LDAP identity stores.</td></tr>
<tr><td><a href="#public.id__local_identity_stores_anchor">public.id__local_identity_stores</a></td><td class="pgtable_description">Identities for Local identity stores.</td></tr>
<tr><td><a href="#public.identity_based_activation_reporting_anchor">public.identity_based_activation_reporting</a></td><td class="pgtable_description">Login-based License Management (LBLM) -  NOTE: For any custom vizzes or reporting, it is recommended instead to use the View identity_based_activation_admin_view.  In this table each row contains important dates with regard to ATR Issuing and Login-based License Usage for a given User, Site, Device and Product combination.</td></tr>
<tr><td><a href="#public.identity_based_activation_user_role_change_anchor">public.identity_based_activation_user_role_change</a></td><td class="pgtable_description">Login-based License Management (LBLM) -  NOTE: For any custom vizzes or reporting, it is recommended instead to use the View identity_based_activation_admin_view.  This table tracks site role creator changes for each given user on a given site.</td></tr>
<tr><td><a href="#public.jwt_info_anchor">public.jwt_info</a></td><td class="pgtable_description">Records for the JWT token ids</td></tr>
<tr><td><a href="#public.language_prefs_anchor">public.language_prefs</a></td><td class="pgtable_description">Contains a listing of information about languages for which Tableau Server has been localized.</td></tr>
<tr><td><a href="#public.last_seen_user_notifications_anchor">public.last_seen_user_notifications</a></td><td class="pgtable_description">This table stores the last seen notification time for each user.</td></tr>
<tr><td><a href="#public.lens_content_relationships_anchor">public.lens_content_relationships</a></td><td class="pgtable_description">Represents the relationship between the lens and other content types.</td></tr>
<tr><td><a href="#public.lens_datasource_associations_anchor">public.lens_datasource_associations</a></td><td class="pgtable_description">Represents the association between the lens and the source datasources for a lens.</td></tr>
<tr><td><a href="#public.lens_fields_anchor">public.lens_fields</a></td><td class="pgtable_description">Table to store fields associated with lenses</td></tr>
<tr><td><a href="#public.lenses_anchor">public.lenses</a></td><td class="pgtable_description">Represents the table for storing lenses.</td></tr>
<tr><td><a href="#public.licensing_roles_anchor">public.licensing_roles</a></td><td class="pgtable_description">Lists the various possible licensing scenarios.  (Unlicensed, Guest, Viewer, or Interactor).</td></tr>
<tr><td><a href="#public.linked_task_actions_anchor">public.linked_task_actions</a></td><td class="pgtable_description">Stores an action for a linked task step.</td></tr>
<tr><td><a href="#public.linked_task_child_jobs_anchor">public.linked_task_child_jobs</a></td><td class="pgtable_description">A job for a child step of a linked task.</td></tr>
<tr><td><a href="#public.linked_task_jobs_anchor">public.linked_task_jobs</a></td><td class="pgtable_description">A specific run of a a linked task.</td></tr>
<tr><td><a href="#public.linked_task_steps_anchor">public.linked_task_steps</a></td><td class="pgtable_description">Stores a step for a linked task.</td></tr>
<tr><td><a href="#public.linked_task_triggers_anchor">public.linked_task_triggers</a></td><td class="pgtable_description">A trigger for a linked task. Will fire on completion on the associated task.</td></tr>
<tr><td><a href="#public.linked_tasks_anchor">public.linked_tasks</a></td><td class="pgtable_description">Stores linked tasks, which allow users to specify tasks to run after each other in sequence.</td></tr>
<tr><td><a href="#public.local_names_anchor">public.local_names</a></td><td class="pgtable_description">Contains translations of certain words or phrases that are relevant to some Tableau Server database constructs.</td></tr>
<tr><td><a href="#public.materialize_views_job_sos_directory_anchor">public.materialize_views_job_sos_directory</a></td><td class="pgtable_description">Each row in the table is a mapping of a workbook id and revision in a materialize views job to the sos directories that the job requires.</td></tr>
<tr><td><a href="#public.materialized_queries_anchor">public.materialized_queries</a></td><td class="pgtable_description">This table stores the information for materialized queries.</td></tr>
<tr><td><a href="#public.materialized_sheets_to_queries_anchor">public.materialized_sheets_to_queries</a></td><td class="pgtable_description">Enabled sheets and materialized queries are many to many relation. This table stores the mapping between sheets and materialized queries.</td></tr>
<tr><td><a href="#public.materialized_views_anchor">public.materialized_views</a></td><td class="pgtable_description">This table stores the materialized views for queries in workbooks.</td></tr>
<tr><td><a href="#public.materialized_views_bloom_filters_anchor">public.materialized_views_bloom_filters</a></td><td class="pgtable_description">This table stores the bloom filters indicating materialized sites/workbooks.</td></tr>
<tr><td><a href="#public.materialized_views_connections_anchor">public.materialized_views_connections</a></td><td class="pgtable_description">This table stores the information required to fetch materialized views files from the server where they are stored.</td></tr>
<tr><td><a href="#public.materialized_views_job_stats_anchor">public.materialized_views_job_stats</a></td><td class="pgtable_description">This table stores daily aggregated materialized views job stats.</td></tr>
<tr><td><a href="#public.materialized_views_metadata_anchor">public.materialized_views_metadata</a></td><td class="pgtable_description">This table stores the metadata for the materialized view service.</td></tr>
<tr><td><a href="#public.materialized_views_object_status_anchor">public.materialized_views_object_status</a></td><td class="pgtable_description">This table stores the materialized views state configuration for objects for which the feature is enabled.</td></tr>
<tr><td><a href="#public.materialized_views_query_store_anchor">public.materialized_views_query_store</a></td><td class="pgtable_description">for storing logical queries and their stats from the traffic</td></tr>
<tr><td><a href="#public.materialized_views_sheet_performance_anchor">public.materialized_views_sheet_performance</a></td><td class="pgtable_description">This table stores daily aggregated materialized views job stats.</td></tr>
<tr><td><a href="#public.materialized_views_sheet_status_anchor">public.materialized_views_sheet_status</a></td><td class="pgtable_description">This table stores the materialized views state configuration for worksheets for which the feature is enabled.</td></tr>
<tr><td><a href="#public.materialized_views_site_resource_limit_anchor">public.materialized_views_site_resource_limit</a></td><td class="pgtable_description">This table stores the resource limit for acceleration for each site.</td></tr>
<tr><td><a href="#public.mentions_anchor">public.mentions</a></td><td class="pgtable_description">Mentions for comments.</td></tr>
<tr><td><a href="#public.metric_metrics_aggregations_anchor">public.metric_metrics_aggregations</a></td><td class="pgtable_description">Each record represents a partial aggregation of analytics for a given metric in a given time interval.  It is often necessary to sum across multiple rows to find a total for a given time interval.</td></tr>
<tr><td><a href="#public.metrics_anchor">public.metrics</a></td><td class="pgtable_description">Each record represents a Metric.</td></tr>
<tr><td><a href="#public.metrics_definition_anchor">public.metrics_definition</a></td><td class="pgtable_description">Each record represents a metrics definition.</td></tr>
<tr><td><a href="#public.metrics_snapshot_anchor">public.metrics_snapshot</a></td><td class="pgtable_description">Each record represents a metrics snapshot.</td></tr>
<tr><td><a href="#public.metrics_snapshot_delta_anchor">public.metrics_snapshot_delta</a></td><td class="pgtable_description">Each record represents a metrics snapshot delta.</td></tr>
<tr><td><a href="#public.metrics_view_anchor">public.metrics_view</a></td><td class="pgtable_description">Each record represents a metrics view.</td></tr>
<tr><td><a href="#public.mobile_security_server_settings_anchor">public.mobile_security_server_settings</a></td><td class="pgtable_description">A key-value store for mobile secuirty server settings.</td></tr>
<tr><td><a href="#public.mobile_security_site_settings_anchor">public.mobile_security_site_settings</a></td><td class="pgtable_description">A key-value store for mobile security site settings.</td></tr>
<tr><td><a href="#public.most_recent_refreshes_anchor">public.most_recent_refreshes</a></td><td class="pgtable_description">most recent refresh data for alerts</td></tr>
<tr><td><a href="#public.most_recent_subscription_runs_anchor">public.most_recent_subscription_runs</a></td><td class="pgtable_description">most recent subscription runs data for suspend subscriptions</td></tr>
<tr><td><a href="#public.mru_list_entries_anchor">public.mru_list_entries</a></td><td class="pgtable_description">Holds most recently used list entries. The records here are linked to the lists to which they belong. Those lists are defined in the mru_lists table.</td></tr>
<tr><td><a href="#public.mru_lists_anchor">public.mru_lists</a></td><td class="pgtable_description">Most recently used lists by user. The actual list contents are in the mru_list_entries table.</td></tr>
<tr><td><a href="#public.next_gen_permissions_anchor">public.next_gen_permissions</a></td><td class="pgtable_description">This table provides a flexible means of describing which users and groups have been granted which capabilities, on which things. Be aware that permissions is a complex topic and that this table does not contain all relevant information about permissions. For example, some permissions are given, automatically, to owners of workbooks or projects.</td></tr>
<tr><td><a href="#public.nlp_suggested_questions_anchor">public.nlp_suggested_questions</a></td><td class="pgtable_description">Suggested questions</td></tr>
<tr><td><a href="#public.nlp_suggestion_groups_anchor">public.nlp_suggestion_groups</a></td><td class="pgtable_description">Suggested question groups</td></tr>
<tr><td><a href="#public.oauth_authorization_codes_anchor">public.oauth_authorization_codes</a></td><td class="pgtable_description">OAuth authorization codes</td></tr>
<tr><td><a href="#public.oauth_clients_anchor">public.oauth_clients</a></td><td class="pgtable_description">A map that register oauth CI/CS/redierctUri per site per dbclass.</td></tr>
<tr><td><a href="#public.oauth_request_tokens_anchor">public.oauth_request_tokens</a></td><td class="pgtable_description">Table of tokens used for OAuth authorization requests.</td></tr>
<tr><td><a href="#public.oauth_service_code_verifiers_anchor">public.oauth_service_code_verifiers</a></td><td class="pgtable_description">Short lived storage for the code verifier used in PKCE requests.</td></tr>
<tr><td><a href="#public.oauth_states_anchor">public.oauth_states</a></td><td class="pgtable_description">The OAuth request state, will be verified later to prevent CSRF attack.</td></tr>
<tr><td><a href="#public.password_tokens_anchor">public.password_tokens</a></td><td class="pgtable_description">Tokens issued to client through link in email which can be redeemed to change their password</td></tr>
<tr><td><a href="#public.pdf_subscription_options_anchor">public.pdf_subscription_options</a></td><td class="pgtable_description">Used to store different PDF layout options.</td></tr>
<tr><td><a href="#public.pending_search_update_items_anchor">public.pending_search_update_items</a></td><td class="pgtable_description">This table represents an item that is associated with a pending_search_update.</td></tr>
<tr><td><a href="#public.permission_reasons_anchor">public.permission_reasons</a></td><td class="pgtable_description">When calculating effective permissions in the perm_users_*_capabilities functions, this table maps the integer precedence of the effective permission rule to the varchar effective permission reason.  The integer precedence is internal to the stored procedures.  The effective permission reason is returned to callers.</td></tr>
<tr><td><a href="#public.permission_set_classes_anchor">public.permission_set_classes</a></td><td class="pgtable_description">Represents a class of permission sets.  Generally 1-to-1 with capabilities.</td></tr>
<tr><td><a href="#public.permission_set_items_anchor">public.permission_set_items</a></td><td class="pgtable_description">Represents a single next_gen_permission in a permission_set.  The columns mirror the next_gen_permissions table.</td></tr>
<tr><td><a href="#public.permission_sets_anchor">public.permission_sets</a></td><td class="pgtable_description">Represents a common set of permissions used by multiple authorizables.</td></tr>
<tr><td><a href="#public.permissions_templates_anchor">public.permissions_templates</a></td><td class="pgtable_description">This table provides a flexible means of describing which users and groups will be granted which capabilities by default, on non-overwrite publishes of workbooks and datasources. Be aware that permissions is a complex topic and that this table does not contain all relevant information about permissions. For example, some permissions are given, automatically, to owners of workbooks or projects.</td></tr>
<tr><td><a href="#public.pkce_tokens_anchor">public.pkce_tokens</a></td><td class="pgtable_description">Proof Key for Credential Exchange (RFC 7636) short-lived storage.</td></tr>
<tr><td><a href="#public.predictive_model_version_deployments_anchor">public.predictive_model_version_deployments</a></td><td class="pgtable_description">Table contains deployment timestamps associated with a particular Predictive Model Version of a Predictive Model</td></tr>
<tr><td><a href="#public.predictive_model_versions_anchor">public.predictive_model_versions</a></td><td class="pgtable_description">Table contains user-created predictive model versions associated with a predictive model</td></tr>
<tr><td><a href="#public.predictive_models_anchor">public.predictive_models</a></td><td class="pgtable_description">Table contains user-created Predictive Models</td></tr>
<tr><td><a href="#public.projects_anchor">public.projects</a></td><td class="pgtable_description">Each row of the table corresponds to a project on Tableau Server.</td></tr>
<tr><td><a href="#public.projects_contents_anchor">public.projects_contents</a></td><td class="pgtable_description">Table which stores the contents of projects</td></tr>
<tr><td><a href="#public.published_connection_revision_tables_anchor">public.published_connection_revision_tables</a></td><td class="pgtable_description">Represents a table of a revision of a published connection.</td></tr>
<tr><td><a href="#public.published_connection_revisions_anchor">public.published_connection_revisions</a></td><td class="pgtable_description">Represents a revision of a published connection.</td></tr>
<tr><td><a href="#public.published_connection_tables_anchor">public.published_connection_tables</a></td><td class="pgtable_description">Represents the published connection table content type.</td></tr>
<tr><td><a href="#public.published_connections_anchor">public.published_connections</a></td><td class="pgtable_description">Represents the published connection content type.</td></tr>
<tr><td><a href="#public.querypolicycollection_anchor">public.querypolicycollection</a></td><td class="pgtable_description">Table to store query policy collections.</td></tr>
<tr><td><a href="#public.quota_definitions_anchor">public.quota_definitions</a></td><td class="pgtable_description">Table which stores all the quota definitions for QuotaService</td></tr>
<tr><td><a href="#public.quota_limits_anchor">public.quota_limits</a></td><td class="pgtable_description">Table which stores the limits info for all quotas for QuotaService</td></tr>
<tr><td><a href="#public.quota_usage_anchor">public.quota_usage</a></td><td class="pgtable_description">Table which stores the usage info for all quotas for QuotaService</td></tr>
<tr><td><a href="#public.recommendations_dismissed_views_anchor">public.recommendations_dismissed_views</a></td><td class="pgtable_description">Views dismissed by user in context of viz recommendations</td></tr>
<tr><td><a href="#public.recycle_bin_content_types_anchor">public.recycle_bin_content_types</a></td><td class="pgtable_description">Content Type lookup table for Recycle Bin.</td></tr>
<tr><td><a href="#public.refresh_token_devices_anchor">public.refresh_token_devices</a></td><td class="pgtable_description">Devices that have been issued at least one refresh token</td></tr>
<tr><td><a href="#public.refresh_tokens_anchor">public.refresh_tokens</a></td><td class="pgtable_description">Tokens issued to clients which can be redeemed by the client for access to the server</td></tr>
<tr><td><a href="#public.remote_agents_anchor">public.remote_agents</a></td><td class="pgtable_description">Registry of remote agents (Online). Remote agents are programs installed on customer PC and executing tasks
 on a behalf of a customer. The first example of agent is Tableau Data Sync. It is running in background on
 customer desktop and performing automatic data source refreshes based on schedules defined by customers.</td></tr>
<tr><td><a href="#public.repository_data_anchor">public.repository_data</a></td><td class="pgtable_description">This table forms the link between other tables that need to store "large object" data, and the large object storage, itself.</td></tr>
<tr><td><a href="#public.resource_holder_types_anchor">public.resource_holder_types</a></td><td class="pgtable_description">Information about entities which can hold on to resources. For instance workbook is such an entity, it can reference a geocoding database and keep it alive.</td></tr>
<tr><td><a href="#public.resource_types_anchor">public.resource_types</a></td><td class="pgtable_description">Information about resources which are used by some server entities. For instance geocoding databases are such resources, a workbook can reference a geocoding database and keep it alive.</td></tr>
<tr><td><a href="#public.resource_usage_anchor">public.resource_usage</a></td><td class="pgtable_description">Information about resources by tableau server entities, for example which geocoding databases are used by which workbooks.</td></tr>
<tr><td><a href="#public.roles_anchor">public.roles</a></td><td class="pgtable_description">This table contains records corresponding to various classifications of users. It should really be viewed in conjuction with the capabilities and capability_roles tables. Taken together, these tables associate different roles with different sets of capabilities. The capabilities sets serve as templates when creating content.</td></tr>
<tr><td><a href="#public.saml_assertions_metadata_anchor">public.saml_assertions_metadata</a></td><td class="pgtable_description">Records for the saml assertions</td></tr>
<tr><td><a href="#public.schedules_anchor">public.schedules</a></td><td class="pgtable_description">Records in this table define a schedule according to which certain regular tasks may be performed (see tasks table). They also indicate the next time at which the schedule will be triggered.</td></tr>
<tr><td><a href="#public.schema_migrations_anchor">public.schema_migrations</a></td><td class="pgtable_description">This table tracks which database migrations have been applied to this database.</td></tr>
<tr><td><a href="#public.serial_collections_anchor">public.serial_collections</a></td><td class="pgtable_description">Records in this table represent groups of background jobs that should not be run simultaneously. </td></tr>
<tr><td><a href="#public.sessions_anchor">public.sessions</a></td><td class="pgtable_description">Settings associated with a user's browser session.</td></tr>
<tr><td><a href="#public.share_actions_anchor">public.share_actions</a></td><td class="pgtable_description">Table storing share actions.</td></tr>
<tr><td><a href="#public.share_contents_anchor">public.share_contents</a></td><td class="pgtable_description">Table storing shared content (view/workboook/etc).</td></tr>
<tr><td><a href="#public.share_deleted_sharers_anchor">public.share_deleted_sharers</a></td><td class="pgtable_description">Table storing deleted sharers backed up details (e.g. name). Needed because we do not cascade delete sharing action after sharer was deleted.</td></tr>
<tr><td><a href="#public.share_recipients_anchor">public.share_recipients</a></td><td class="pgtable_description">Table storing share recipients (users/groups/etc).</td></tr>
<tr><td><a href="#public.share_single_user_options_anchor">public.share_single_user_options</a></td><td class="pgtable_description">Table storing single user options on shared content (does not change the content itself).</td></tr>
<tr><td><a href="#public.sheet_images_anchor">public.sheet_images</a></td><td class="pgtable_description">Serves as a cache for all the sheet images generated by server.</td></tr>
<tr><td><a href="#public.simulations_anchor">public.simulations</a></td><td class="pgtable_description">Used to store simulation</td></tr>
<tr><td><a href="#public.site_keychains_anchor">public.site_keychains</a></td><td class="pgtable_description">This table stores keychains for site, which is used for credentials service V1</td></tr>
<tr><td><a href="#public.site_logos_anchor">public.site_logos</a></td><td class="pgtable_description">custom logo image metadata for sites</td></tr>
<tr><td><a href="#public.site_oidc_configurations_anchor">public.site_oidc_configurations</a></td><td class="pgtable_description">Defines the OpenID Connect IdP associated with a site.</td></tr>
<tr><td><a href="#public.site_roles_anchor">public.site_roles</a></td><td class="pgtable_description">Lists the various possible user site roles.</td></tr>
<tr><td><a href="#public.site_saml_configurations_anchor">public.site_saml_configurations</a></td><td class="pgtable_description">Defines the SAML IdP associated with a site.</td></tr>
<tr><td><a href="#public.site_saml_events_anchor">public.site_saml_events</a></td><td class="pgtable_description">Log table for all SAML actions.</td></tr>
<tr><td><a href="#public.site_saml_sessions_anchor">public.site_saml_sessions</a></td><td class="pgtable_description">Records the user sessions authenticated by the SiteSAML service.</td></tr>
<tr><td><a href="#public.site_saml_users_anchor">public.site_saml_users</a></td><td class="pgtable_description">Users that are allowed to use Per Site SAML authentication.</td></tr>
<tr><td><a href="#public.site_user_prefs_anchor">public.site_user_prefs</a></td><td class="pgtable_description">Site user preferences.</td></tr>
<tr><td><a href="#public.sites_anchor">public.sites</a></td><td class="pgtable_description">Each record represents a site. Each site holds its own workbooks, datasources, users, etc. Strict isolation between the contents of each site is maintained.</td></tr>
<tr><td><a href="#public.slack_version_update_anchor">public.slack_version_update</a></td><td class="pgtable_description">Table which holds flag indicating whether SlackVersionUpdate job has executed. This job is triggered manually before an upcoming Tableau Online release, if it contains new version of Slack app. The trigger will send email to admins of sites, which are connected to Slack. see TFS1302023</td></tr>
<tr><td><a href="#public.sos_blob_data_anchor">public.sos_blob_data</a></td><td class="pgtable_description">table to store sos file types as binary data</td></tr>
<tr><td><a href="#public.sos_blob_data_site_enabled_anchor">public.sos_blob_data_site_enabled</a></td><td class="pgtable_description">table with site_luid column to store sos file types as binary data</td></tr>
<tr><td><a href="#public.sos_metadata_anchor">public.sos_metadata</a></td><td class="pgtable_description">This table with site_luid column forms the link between other tables that need to store blob data, and the blob storage, itself.</td></tr>
<tr><td><a href="#public.sos_virtual_folder_entries_anchor">public.sos_virtual_folder_entries</a></td><td class="pgtable_description">Each record represents a file in a virtual folder currently tracked in Simple Object Storage.</td></tr>
<tr><td><a href="#public.sos_virtual_folders_anchor">public.sos_virtual_folders</a></td><td class="pgtable_description">Each record represents a virtual folder currently tracked in Simple Object Storage.</td></tr>
<tr><td><a href="#public.ss_custom_value_concepts_anchor">public.ss_custom_value_concepts</a></td><td class="pgtable_description">The table to hold value concepts used by semantics service</td></tr>
<tr><td><a href="#public.ss_field_concepts_anchor">public.ss_field_concepts</a></td><td class="pgtable_description">The table to hold field concepts used by semantics service</td></tr>
<tr><td><a href="#public.ss_object_concepts_anchor">public.ss_object_concepts</a></td><td class="pgtable_description">The table to hold object concepts used by semantics service</td></tr>
<tr><td><a href="#public.ss_ontologies_anchor">public.ss_ontologies</a></td><td class="pgtable_description">The table to hold ontologies used by semantics service</td></tr>
<tr><td><a href="#public.subscription_messages_anchor">public.subscription_messages</a></td><td class="pgtable_description">This table represent a subscription email message.</td></tr>
<tr><td><a href="#public.subscriptions_anchor">public.subscriptions</a></td><td class="pgtable_description">Each record represents a subscription.</td></tr>
<tr><td><a href="#public.subscriptions_customized_views_anchor">public.subscriptions_customized_views</a></td><td class="pgtable_description">This table is used to link various customized views to the subscriptions in which those customized views must be generated and emailed.</td></tr>
<tr><td><a href="#public.subscriptions_flow_metadata_anchor">public.subscriptions_flow_metadata</a></td><td class="pgtable_description">Stores subscriptions metadata, which allow users to subscribe to flow outputs.</td></tr>
<tr><td><a href="#public.subscriptions_flows_anchor">public.subscriptions_flows</a></td><td class="pgtable_description">Stores subscriptions flows, which allow users to subscribe to flow outputs.</td></tr>
<tr><td><a href="#public.subscriptions_views_anchor">public.subscriptions_views</a></td><td class="pgtable_description">This table is used to link various views to the subscriptions in which those views must be generated and emailed.</td></tr>
<tr><td><a href="#public.subscriptions_workbooks_anchor">public.subscriptions_workbooks</a></td><td class="pgtable_description">This table is used to link various workbooks to the subscriptions in which those workbooks must have views generated and emailed.</td></tr>
<tr><td><a href="#public.synonyms_anchor">public.synonyms</a></td><td class="pgtable_description">The table to hold the synonyms for fields of datasources</td></tr>
<tr><td><a href="#public.system_user_identities_anchor">public.system_user_identities</a></td><td class="pgtable_description">Identity to SystemUser mappings.</td></tr>
<tr><td><a href="#public.system_user_migration_conflicts_anchor">public.system_user_migration_conflicts</a></td><td class="pgtable_description">Conflicts when migrating system_user identities.</td></tr>
<tr><td><a href="#public.system_user_migration_conflicts_identity_data_anchor">public.system_user_migration_conflicts_identity_data</a></td><td class="pgtable_description">Identity information related to ambiguous results when migrating system_user identities.</td></tr>
<tr><td><a href="#public.system_users_anchor">public.system_users</a></td><td class="pgtable_description">Each record represents a user of the server. These records correspond to login identity. A single system_user may potentially be able to login to multiple sites. The linkage between a system_user and their allowed sites is defined through the "users" table.</td></tr>
<tr><td><a href="#public.table_asset_events_anchor">public.table_asset_events</a></td><td class="pgtable_description">Used to store table_asset events stream.</td></tr>
<tr><td><a href="#public.table_asset_sources_anchor">public.table_asset_sources</a></td><td class="pgtable_description">Used to store mappings between tables and their source.</td></tr>
<tr><td><a href="#public.table_assets_anchor">public.table_assets</a></td><td class="pgtable_description">Each record represents a table asset that exists on Tableau Server.</td></tr>
<tr><td><a href="#public.taggings_anchor">public.taggings</a></td><td class="pgtable_description">Associates tags with taggable items.</td></tr>
<tr><td><a href="#public.tags_anchor">public.tags</a></td><td class="pgtable_description">Each tag is a string value. A given tag can be associated with many taggable items in a site.</td></tr>
<tr><td><a href="#public.tasks_anchor">public.tasks</a></td><td class="pgtable_description">Serves to connect schedules with background tasks that should be run on that schedule. The schedule is defined in the schedules table, while the task is defined by type.</td></tr>
<tr><td><a href="#public.tde_files_anchor">public.tde_files</a></td><td class="pgtable_description">Information about TDE files.</td></tr>
<tr><td><a href="#public.tds_datasource_files_anchor">public.tds_datasource_files</a></td><td class="pgtable_description">The TDS files.</td></tr>
<tr><td><a href="#public.tds_datasource_model_fields_anchor">public.tds_datasource_model_fields</a></td><td class="pgtable_description">Fields of datasource models.</td></tr>
<tr><td><a href="#public.tds_datasource_models_anchor">public.tds_datasource_models</a></td><td class="pgtable_description">Model of the datasource.</td></tr>
<tr><td><a href="#public.trusted_tickets_anchor">public.trusted_tickets</a></td><td class="pgtable_description">This table lists trusted tickets that have been created.  Tickets that are redeemed are deleted once used, hence can only be used once.  Tickets that are never redeemed become invalid after the time given by "expires_at" and are eventually deleted from the table automatically.</td></tr>
<tr><td><a href="#public.usage_statistics_partition_past_anchor">public.usage_statistics_partition_past</a></td><td class="pgtable_description">Each record represents a partial aggregation of analytics for content in a given time interval. It is often necessary to sum across multiple rows to find a total for a given time interval.</td></tr>
<tr><td><a href="#public.usage_statistics_partition_today_anchor">public.usage_statistics_partition_today</a></td><td class="pgtable_description">Each record represents a partial aggregation of analytics for content in a given time interval. It is often necessary to sum across multiple rows to find a total for a given time interval.</td></tr>
<tr><td><a href="#public.user_default_customized_views_anchor">public.user_default_customized_views</a></td><td class="pgtable_description">Defines what customized view a user should see for a given view, by default.</td></tr>
<tr><td><a href="#public.user_images_anchor">public.user_images</a></td><td class="pgtable_description">Represents images for each associated system user.</td></tr>
<tr><td><a href="#public.user_notification_content_reference_list_items_anchor">public.user_notification_content_reference_list_items</a></td><td class="pgtable_description">Lists of references to other DB records in user notification content.</td></tr>
<tr><td><a href="#public.user_notification_content_references_anchor">public.user_notification_content_references</a></td><td class="pgtable_description">References to other DB records in user notification content.</td></tr>
<tr><td><a href="#public.user_notification_recipients_anchor">public.user_notification_recipients</a></td><td class="pgtable_description">Holds metadata for all user notification recipients on the server.</td></tr>
<tr><td><a href="#public.user_notifications_anchor">public.user_notifications</a></td><td class="pgtable_description">Holds metadata for all user notifications on the server.</td></tr>
<tr><td><a href="#public.user_notifications_server_settings_anchor">public.user_notifications_server_settings</a></td><td class="pgtable_description">A key-value store for user notifications server settings.</td></tr>
<tr><td><a href="#public.user_notifications_site_settings_anchor">public.user_notifications_site_settings</a></td><td class="pgtable_description">A key-value store for user notifications site settings.</td></tr>
<tr><td><a href="#public.user_notifications_user_settings_anchor">public.user_notifications_user_settings</a></td><td class="pgtable_description">A key-value store for user notifications user settings.</td></tr>
<tr><td><a href="#public.user_onboardings_anchor">public.user_onboardings</a></td><td class="pgtable_description">This table stores onboarding information for tableau features based on system user ids</td></tr>
<tr><td><a href="#public.user_prefs_anchor">public.user_prefs</a></td><td class="pgtable_description">Contains a variety of preferences for the various system users.</td></tr>
<tr><td><a href="#public.users_anchor">public.users</a></td><td class="pgtable_description">Each record links a system_users record to a site. The user's site specific settings are captured here.</td></tr>
<tr><td><a href="#public.value_synonyms_anchor">public.value_synonyms</a></td><td class="pgtable_description">The user defined synonyms associated with values of fields in datasources</td></tr>
<tr><td><a href="#public.view_metrics_aggregations_anchor">public.view_metrics_aggregations</a></td><td class="pgtable_description">Each record represents a partial aggregation of analytics for a given view in a given time interval.  It is often necessary to sum across multiple rows to find a total for a given time interval.</td></tr>
<tr><td><a href="#public.view_refreshed_timestamps_anchor">public.view_refreshed_timestamps</a></td><td class="pgtable_description">This table stores timestamps at which users click on the refresh button.</td></tr>
<tr><td><a href="#public.views_anchor">public.views</a></td><td class="pgtable_description">Each records represents a view in a workbook.</td></tr>
<tr><td><a href="#public.views_stats_anchor">public.views_stats</a></td><td class="pgtable_description">This table is used to track how many times each user has accessed different views.</td></tr>
<tr><td><a href="#public.viz_snapshots_anchor">public.viz_snapshots</a></td><td class="pgtable_description">This table represents a snapshots of viz.</td></tr>
<tr><td><a href="#public.viz_states_anchor">public.viz_states</a></td><td class="pgtable_description">This table represents a snapshot of the state of a viz.</td></tr>
<tr><td><a href="#public.webhooks_anchor">public.webhooks</a></td><td class="pgtable_description">Holds metadata for all registered webhooks on the server.</td></tr>
<tr><td><a href="#public.workbook_checksums_anchor">public.workbook_checksums</a></td><td class="pgtable_description">This table provides a set of checksums associated with a workbook which can be used to validate existence of a workbook based on its checksum.</td></tr>
<tr><td><a href="#public.workbook_events_anchor">public.workbook_events</a></td><td class="pgtable_description">Used to store workbook events stream.</td></tr>
<tr><td><a href="#public.workbook_exports_anchor">public.workbook_exports</a></td><td class="pgtable_description">Each row in the table corresponds to a cached pdf file.</td></tr>
<tr><td><a href="#public.workbook_extension_connections_anchor">public.workbook_extension_connections</a></td><td class="pgtable_description">Associate a workbook with an analytics extension connection.</td></tr>
<tr><td><a href="#public.workbook_versions_anchor">public.workbook_versions</a></td><td class="pgtable_description">Workbook versions saved on server.</td></tr>
<tr><td><a href="#public.workbooks_anchor">public.workbooks</a></td><td class="pgtable_description">Each record represents a workbook that exists on the server.</td></tr>
<tr><td><a href="#public.wps_extracts_anchor">public.wps_extracts</a></td><td class="pgtable_description">Each record represents an extract.</td></tr>
<tr><td><a href="#public.wps_workbooks_anchor">public.wps_workbooks</a></td><td class="pgtable_description">Each record represents a versioned, per-user, per-site workbook.</td></tr>
<tr><td><a href="#recommendations.connection_fields_anchor">recommendations.connection_fields</a></td><td class="pgtable_description">fields used in joins (extracted for the joins recommender)</td></tr>
<tr><td><a href="#recommendations.connection_tables_anchor">recommendations.connection_tables</a></td><td class="pgtable_description">tables used in a connection in a published or embedded data source</td></tr>
<tr><td><a href="#recommendations.connections_anchor">recommendations.connections</a></td><td class="pgtable_description">a connection used by a Datasource to connect to an underlying database or data file</td></tr>
<tr><td><a href="#recommendations.datasources_anchor">recommendations.datasources</a></td><td class="pgtable_description">stores published datasource metadata for datasource recs trainer</td></tr>
<tr><td><a href="#recommendations.fields_anchor">recommendations.fields</a></td><td class="pgtable_description">field in a data source</td></tr>
<tr><td><a href="#recommendations.join_expressions_anchor">recommendations.join_expressions</a></td><td class="pgtable_description">join expressions for TableJoinTrainer</td></tr>
<tr><td><a href="#recommendations.joins_anchor">recommendations.joins</a></td><td class="pgtable_description">stores joins in data sources for the TableJoinTrainer</td></tr>
<tr><td><a href="#recommendations.ml_association_rules_anchor">recommendations.ml_association_rules</a></td><td class="pgtable_description">the association rules used by the table recommender</td></tr>
<tr><td><a href="#recommendations.ml_factorization_models_anchor">recommendations.ml_factorization_models</a></td><td class="pgtable_description">the collaborative filter model used for data source recommendations</td></tr>
<tr><td><a href="#recommendations.ml_last_trained_anchor">recommendations.ml_last_trained</a></td><td class="pgtable_description">Track model loading and training on a per-site basis so it can be resumed if interrupted</td></tr>
<tr><td><a href="#recommendations.ml_ranked_datasource_fields_anchor">recommendations.ml_ranked_datasource_fields</a></td><td class="pgtable_description">Selected top fields per datasource and their usage statistics (for published datasources)</td></tr>
<tr><td><a href="#recommendations.ml_related_view_predictions_anchor">recommendations.ml_related_view_predictions</a></td><td class="pgtable_description">view predictions generated by the trainer</td></tr>
<tr><td><a href="#recommendations.ml_viz_recommendations_models_anchor">recommendations.ml_viz_recommendations_models</a></td><td class="pgtable_description">Viz recommendations models. Stores a model per user, site pair.</td></tr>
<tr><td><a href="#recommendations.views_json_anchor">recommendations.views_json</a></td><td class="pgtable_description">Views info stored as json</td></tr>
<tr><td><a href="#recommendations.workbooks_anchor">recommendations.workbooks</a></td><td class="pgtable_description">workbook metadata extracted for view and data source recommenders</td></tr>
<tr><td><a href="#recommendations.worksheet_fields_anchor">recommendations.worksheet_fields</a></td><td class="pgtable_description">map from extracted worksheet id to field ids</td></tr>
<tr><td><a href="#recommendations.worksheets_anchor">recommendations.worksheets</a></td><td class="pgtable_description">worksheets, used to map user access counts to datasource access in the datasource trainer</td></tr>
<tr><td><a href="#semantics.indexing_status_anchor">semantics.indexing_status</a></td><td class="pgtable_description">This table holds indexing status of field concepts.</td></tr>
<tr><td><a href="#webhooks.webhooks_anchor">webhooks.webhooks</a></td><td class="pgtable_description">Holds metadata for all registered webhooks on the server.</td></tr>
</tbody>
</table>
<h3>Views (these are available to both the "tableau" and the "readonly" users)</h3>
<table class="pgtable_toc">
<thead><tr>
<th>View Name</th>
<th>Description</th>
</tr></thead>
<tbody>
<tr><td><a href="#public._background_tasks_anchor">public._background_tasks</a></td><td class="pgtable_description">This view combines the important contents of both the background_jobs table and the async_jobs table to give an overall picture of jobs that were given to a backgrounder process.</td></tr>
<tr><td><a href="#public._comments_anchor">public._comments</a></td><td class="pgtable_description">Comments users made on views.</td></tr>
<tr><td><a href="#public._customized_views_anchor">public._customized_views</a></td><td class="pgtable_description">When a user creates a customized view, the data that supports that goes in the customized_views table, and is reflected in this view.</td></tr>
<tr><td><a href="#public._datasources_anchor">public._datasources</a></td><td class="pgtable_description">Shows all Published datasources on server, along with some associated information.</td></tr>
<tr><td><a href="#public._datasources_stats_anchor">public._datasources_stats</a></td><td class="pgtable_description">Some historical useage information about datasources.  Based on the records that exist in the historical events tables.</td></tr>
<tr><td><a href="#public._groups_anchor">public._groups</a></td><td class="pgtable_description">A grouping of users. Can be locally created or imported from Active Directory.  Reflects the contents of the groups table and associated tables.</td></tr>
<tr><td><a href="#public._http_requests_anchor">public._http_requests</a></td><td class="pgtable_description">Each record represents a request received by Tableau Server.  Reflects data in the http_requests table.</td></tr>
<tr><td><a href="#public._projects_anchor">public._projects</a></td><td class="pgtable_description">Each row of the table corresponds to a project on Tableau Server.</td></tr>
<tr><td><a href="#public._schedules_anchor">public._schedules</a></td><td class="pgtable_description">Records define a schedule according to which certain regular tasks may be performed (see tasks table). They also indicate the next time at which the schedule will be triggered.</td></tr>
<tr><td><a href="#public._sessions_anchor">public._sessions</a></td><td class="pgtable_description">Settings associated with a user's browser session.</td></tr>
<tr><td><a href="#public._sites_anchor">public._sites</a></td><td class="pgtable_description">Each record represents a site. Each site holds its own workbooks, datasources, users, etc.  Strict isolation between the contents of each site is maintained.</td></tr>
<tr><td><a href="#public._subscriptions_anchor">public._subscriptions</a></td><td class="pgtable_description">Each record provides information about subscriptions that are scheduled.  Subscriptions are a mechanism for receiving specified content by email on some schedule.</td></tr>
<tr><td><a href="#public._system_users_anchor">public._system_users</a></td><td class="pgtable_description">Each record represents a user of the server. These records correspond to login identity. A single system_user may potentially be able to login to multiple sites. The linkage between a system_user and their allowed sites is defined through the "users" table.</td></tr>
<tr><td><a href="#public._tags_anchor">public._tags</a></td><td class="pgtable_description">Each tag is a string value. A given tag can be associated with many taggable items in a site.</td></tr>
<tr><td><a href="#public._users_anchor">public._users</a></td><td class="pgtable_description">Information relating to users.</td></tr>
<tr><td><a href="#public._views_anchor">public._views</a></td><td class="pgtable_description">Each records represents a view in a workbook.</td></tr>
<tr><td><a href="#public._views_stats_anchor">public._views_stats</a></td><td class="pgtable_description">Used to track how many times each user has accessed different views.</td></tr>
<tr><td><a href="#public._workbooks_anchor">public._workbooks</a></td><td class="pgtable_description">Each record represents a workbook that exists on the server.</td></tr>
<tr><td><a href="#public.identity_based_activation_admin_view_anchor">public.identity_based_activation_admin_view</a></td><td class="pgtable_description">Login-based License Management (LBLM) -  Database view to faciliate Admin Server and Site Views for Login-based License Usage Reporting.</td></tr>
<tr><td><a href="#public.users_view_anchor">public.users_view</a></td><td class="pgtable_description">Each record corresponds to a user on the system.  The data presented is a combination of user data and data from the linked system_user.</td></tr>
</tbody>
</table>
<a name="allegro.concurrency_limit_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>allegro.concurrency_limit</dfn>:  Run time table for concurrency limit.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the table.</td><tr>
<tr class="field"><td>config_key_name</td><td>text</td><td>The key name of the config.</td><tr>
<tr class="field"><td>lease_key_name</td><td>text</td><td>The key name of the lease item.</td><tr>
<tr class="field"><td>token_count</td><td>integer</td><td>The token count of the lease item.</td><tr>
<tr class="field"><td>expire_at</td><td>timestamp without time zone</td><td>The timestamp for expiring the config.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp for creating the config.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The timestamp for updating the config.</td><tr>
</tbody>
</table>
<a name="allegro.concurrency_limit_config_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>allegro.concurrency_limit_config</dfn>:  Config of the concurrency limit.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the config.</td><tr>
<tr class="field"><td>key_name</td><td>text</td><td>The key name of the config.</td><tr>
<tr class="field"><td>capacity</td><td>integer</td><td>The capacity of the config.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp for creating the config.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The timestamp for updating the config.</td><tr>
</tbody>
</table>
<a name="allegro.rate_limit_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>allegro.rate_limit</dfn>:  Run time table for rate limit.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the table.</td><tr>
<tr class="field"><td>key_name</td><td>text</td><td>The key name of the config.</td><tr>
<tr class="field"><td>capacity</td><td>text</td><td>The capacity of the config.</td><tr>
<tr class="field"><td>last_refilled</td><td>timestamp without time zone</td><td>The last refill timstamp for the config.</td><tr>
<tr class="field"><td>available</td><td>integer</td><td>The available capacity in seconds.</td><tr>
<tr class="field"><td>overridden_capacity</td><td>integer</td><td>The overridden capacity for the keyname.</td><tr>
<tr class="field"><td>strategy</td><td>integer</td><td>The strategy for the config.</td><tr>
<tr class="field"><td>expire_at</td><td>timestamp without time zone</td><td>The timestamp for expiring the config.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp for creating the config.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The timestamp for updating the config.</td><tr>
</tbody>
</table>
<a name="allegro.rate_limit_config_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>allegro.rate_limit_config</dfn>:  Config of the rate limit.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the config.</td><tr>
<tr class="field"><td>key_name</td><td>text</td><td>The key name of the config. The format is jobtype:guid.</td><tr>
<tr class="field"><td>capacity</td><td>integer</td><td>The capacity of the config.</td><tr>
<tr class="field"><td>refill_at_minute</td><td>integer</td><td>The minute of the day to refill the config.</td><tr>
<tr class="field"><td>strategy</td><td>integer</td><td>The strategy for the config.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp for creating the config.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The timestamp for updating the config.</td><tr>
</tbody>
</table>
<a name="broadcast.broadcast_views_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>broadcast.broadcast_views</dfn>:  Holds the status of broadcast vizzes</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Sequential id</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The local site luid</td><tr>
<tr class="field"><td>view_luid</td><td>uuid</td><td>The local view luid of the broadcast</td><tr>
<tr class="field"><td>workbook_luid</td><td>uuid</td><td>The local workbook luid containing the view luid</td><tr>
<tr class="field"><td>broadcast_workbook_luid</td><td>uuid</td><td>A "foreign key" to the broadcasted workbook on the remote system</td><tr>
<tr class="field"><td>broadcast_workbook_url</td><td>text</td><td>A "foreign key" to the broadcasted workbook on the remote system; specifically the "repo url", which is different than `broadcast_url`</td><tr>
<tr class="field"><td>broadcast_view_name</td><td>character varying</td><td>The name of the view when last updated</td><tr>
<tr class="field"><td>broadcast_workbook_name</td><td>character varying</td><td>The name of the workbook when last updated</td><tr>
<tr class="field"><td>broadcast_url</td><td>text</td><td>The browsable location of the broadcast</td><tr>
</tbody>
</table>
<a name="broadcast.broadcast_workbooks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>broadcast.broadcast_workbooks</dfn>:  Holds metadata for broadcasted vizzes on the server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the broadcasted viz.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>The server workbook id of the broadcasted viz.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site id of the broadcasted viz.</td><tr>
<tr class="field"><td>view_luid</td><td>uuid</td><td>The view luid of the broadcast.</td><tr>
</tbody>
</table>
<a name="container_service.container_contents_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>container_service.container_contents</dfn>:  Table which stores the container contents for container service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from container_luid on this table to luid on table, <a href="#container_service.containers_anchor">container_service.containers</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id which uniquely identifies row in the table</td><tr>
<tr class="field"><td>content_luid</td><td>uuid</td><td>The content_luid identifies the content from a monolith that the row is indirecty associated with</td><tr>
<tr class="field"><td>content_type</td><td>character varying</td><td>The type of content being represented by the given row</td><tr>
<tr class="field"><td>container_luid</td><td>uuid</td><td>The LUID of the container</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The LUID of the site</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the content</td><tr>
<tr class="field"><td>requires_name_uniqueness</td><td>boolean</td><td>Whether a piece of content should have a unique name</td><tr>
<tr class="field"><td>size_in_bytes</td><td>bigint</td><td>The size of the content in bytes</td><tr>
</tbody>
</table>
<a name="container_service.containers_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>container_service.containers</dfn>:  Table which stores the containers for container service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id which uniquely identifies row in the table</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>An immutable identifier for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the container.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The site_luid identifies the site that the row is indirecty associated with</td><tr>
<tr class="field"><td>owner_luid</td><td>uuid</td><td>The owner_luid identifies the user owner that the row is indirecty associated with</td><tr>
<tr class="field"><td>container_type</td><td>character varying</td><td>The type of container being represented by the given row</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The last time any changes were made to this record.</td><tr>
<tr class="field"><td>storage_quota</td><td>bigint</td><td>The total (maximum allowed) storage quota of the container in bytes</td><tr>
</tbody>
</table>
<a name="credentials_service.credentials_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>credentials_service.credentials</dfn>:  This table stores credential summary, which does not include the actual credentials.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from internal_credential_id on this table to id on table, <a href="#credentials_service.internal_credentials_anchor">credentials_service.internal_credentials</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier for the credential.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The associated site luid.</td><tr>
<tr class="field"><td>owner_type</td><td>integer</td><td>The credential owner type.</td><tr>
<tr class="field"><td>owner_luid</td><td>uuid</td><td>The credential owner luid.</td><tr>
<tr class="field"><td>target_class</td><td>character varying</td><td>The dsClass this credential belongs to.</td><tr>
<tr class="field"><td>target_auth</td><td>character varying</td><td>The authenticationType of this credential.</td><tr>
<tr class="field"><td>target_endpoint</td><td>character varying</td><td>Part of this credential identifier, usually would be a Database server address.</td><tr>
<tr class="field"><td>target_port</td><td>integer</td><td>Database server port.</td><tr>
<tr class="field"><td>target_user_name</td><td>character varying</td><td>Part of this credential identifier, usually would be a Database username.</td><tr>
<tr class="field"><td>target_db</td><td>character varying</td><td>Part of this credential identifier, can be a database name/project-id.</td><tr>
<tr class="field"><td>target_user_role</td><td>character varying</td><td>Used when the credential has a "role" property such as Snowflake OAuth.</td><tr>
<tr class="field"><td>target_extra_info</td><td>text</td><td>Extra info about the target.</td><tr>
<tr class="field"><td>credential_type</td><td>integer</td><td>Type of the credential</td><tr>
<tr class="field"><td>internal_credential_id</td><td>integer</td><td>If not null, it is the id of internal_credentials.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the credential was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The latest time the credential was updated.</td><tr>
</tbody>
</table>
<a name="credentials_service.internal_credentials_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>credentials_service.internal_credentials</dfn>:  The internal_credentials table holds encrypted credentials.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the internal_credential.</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>If not null, indicate which asset_key is used to encrypt the data. This info can be get from the asset_key_metadata table.</td><tr>
<tr class="field"><td>data</td><td>character varying</td><td>The encrypted credential.</td><tr>
</tbody>
</table>
<a name="explain_data.permission_migration_status_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>explain_data.permission_migration_status</dfn>:  Current status of the Explain Data Permission Migration background job.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Unique identifier of a row.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site id of the last workbook that was processed.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>Id of the last workbook that was processed.</td><tr>
<tr class="field"><td>processing_attempt_count</td><td>integer</td><td>Number of processing attempts for the last workbook that was processed.</td><tr>
<tr class="field"><td>processing_complete</td><td>boolean</td><td>Was the workbook successfully processed?</td><tr>
</tbody>
</table>
<a name="explain_data.processed_workbooks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>explain_data.processed_workbooks</dfn>:  Workbooks that have been processed by the Explain Data Permission Migration background job.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>workbook_id</td><td>integer</td><td>Id of a workbook that was processed.</td><tr>
</tbody>
</table>
<a name="extensions.extensions_events_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>extensions.extensions_events</dfn>:  Missing description</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>workbook_luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>status</td><td>integer</td><td>Missing description</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Missing description</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Missing description</td><tr>
</tbody>
</table>
<a name="extensions.extensions_instances_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>extensions.extensions_instances</dfn>:  Missing description</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from extension_luid on this table to luid on table, <a href="#extensions.extensions_metadata_anchor">extensions.extensions_metadata</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>extension_luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>workbook_luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>view_luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>active</td><td>boolean</td><td>Missing description</td><tr>
<tr class="field"><td>count</td><td>integer</td><td>Missing description</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Missing description</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Missing description</td><tr>
</tbody>
</table>
<a name="extensions.extensions_metadata_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>extensions.extensions_metadata</dfn>:  Missing description</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>id</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>type</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>version</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>manifest_version</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>min_api_version</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>default_locale</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>name_locale_value</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>name_locale_resourceid</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>desc_locale_value</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>dec_locale_resourceid</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>author_name</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>author_email</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>author_org</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>author_website</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>url</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>icon</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>installed</td><td>boolean</td><td>Missing description</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Missing description</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Missing description</td><tr>
<tr class="field"><td>permissions</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>resources</td><td>text</td><td>Missing description</td><tr>
</tbody>
</table>
<a name="extensions.safe_list_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>extensions.safe_list</dfn>:  Missing description</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>url</td><td>text</td><td>Missing description</td><tr>
<tr class="field"><td>allow_full_data</td><td>boolean</td><td>Missing description</td><tr>
<tr class="field"><td>prompt_needed</td><td>boolean</td><td>Missing description</td><tr>
<tr class="field"><td>active</td><td>boolean</td><td>Missing description</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Missing description</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Missing description</td><tr>
</tbody>
</table>
<a name="extensions.site_settings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>extensions.site_settings</dfn>:  Missing description</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>Missing description</td><tr>
<tr class="field"><td>extensions_enabled</td><td>boolean</td><td>Missing description</td><tr>
<tr class="field"><td>default_setting</td><td>boolean</td><td>Missing description</td><tr>
<tr class="field"><td>active</td><td>boolean</td><td>Missing description</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Missing description</td><tr>
</tbody>
</table>
<a name="floweditor.session_store_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>floweditor.session_store</dfn>:  Each row in the table is a floweditor user session.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>version</td><td>integer</td><td>The version of the flow edit session schema.</td><tr>
<tr class="field"><td>sessionid</td><td>character varying</td><td>The sessionid of the flow edit user session.</td><tr>
<tr class="field"><td>draftid</td><td>character varying</td><td>The draftid of the draft for the current user session.</td><tr>
<tr class="field"><td>siteid</td><td>integer</td><td>The site id to enforce site isolation.</td><tr>
<tr class="field"><td>workgroupsessionid</td><td>character varying</td><td>The workgroupsessionid.</td><tr>
<tr class="field"><td>userid</td><td>integer</td><td>The user id.</td><tr>
<tr class="field"><td>lastaccesstime</td><td>timestamp without time zone</td><td>The timestamp when the row is last accessed.</td><tr>
<tr class="field"><td>language</td><td>character varying</td><td>The user language .</td><tr>
<tr class="field"><td>currentsessiondbname</td><td>character varying</td><td>The hyper dbname for the session .</td><tr>
<tr class="field"><td>state</td><td>character varying</td><td>State of the session. It can be Active, Expired, Reaped.</td><tr>
<tr class="field"><td>serverconfig</td><td>character varying</td><td>This is either PWA or EMPTY. Required by hyper.</td><tr>
<tr class="field"><td>useragent</td><td>character varying</td><td>The user agent. Required by hyper</td><tr>
<tr class="field"><td>noneedcachedb</td><td>boolean</td><td>The boolean to decide if cache db is required for the session.</td><tr>
<tr class="field"><td>site_luid</td><td>character varying</td><td>The LUID of the site</td><tr>
<tr class="field"><td>username</td><td>character varying</td><td>The user name.</td><tr>
<tr class="field"><td>userluid</td><td>character varying</td><td>The user luid.</td><tr>
</tbody>
</table>
<a name="hyper_service.hyper_service_capabilities_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>hyper_service.hyper_service_capabilities</dfn>:  The capabilities of nodes in the cluster</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from node_id on this table to id on table, <a href="#hyper_service.hyper_service_nodes_anchor">hyper_service.hyper_service_nodes</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>node_id</td><td>bigint</td><td>The id of the node in hyper_service_nodes with this capability</td><tr>
<tr class="field"><td>capability</td><td>character varying</td><td>The capabilities name</td><tr>
<tr class="field"><td>min_version</td><td>character varying</td><td>The Hyper Service Version for which the capability is active</td><tr>
<tr class="field"><td>max_version</td><td>character varying</td><td>The Hyper Service Version for which the capability is active</td><tr>
</tbody>
</table>
<a name="hyper_service.hyper_service_locks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>hyper_service.hyper_service_locks</dfn>:  The database entities currently locked in the Hyper Service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from node_id on this table to id on table, <a href="#hyper_service.hyper_service_nodes_anchor">hyper_service.hyper_service_nodes</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>node_id</td><td>bigint</td><td>The id of the node in hyper_service_nodes holding the lock</td><tr>
<tr class="field"><td>entity_type</td><td>integer</td><td>The entity type of the locked entity. Can be (0=Database, 1=Workspace, 2=Session)</td><tr>
<tr class="field"><td>entity_name</td><td>character varying</td><td>The name of the locked entity</td><tr>
<tr class="field"><td>access_mode</td><td>integer</td><td>The access mode of the locked entity. Can be (0=Shared, 1=Exclusive)</td><tr>
</tbody>
</table>
<a name="hyper_service.hyper_service_migration_databases_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>hyper_service.hyper_service_migration_databases</dfn>:  The databases currently being migrated to new Hyper nodes</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from entity_type, entity_name on this table to entity_type, entity_name on table, <a href="#hyper_service.hyper_service_migrations_anchor">hyper_service.hyper_service_migrations</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>entity_type</td><td>integer</td><td>The type of the entity that the database belongs to. Can be (1=Workspace, 2=Session)</td><tr>
<tr class="field"><td>entity_name</td><td>character varying</td><td>The name of the entity that the database belongs to</td><tr>
<tr class="field"><td>database_name</td><td>character varying</td><td>The name of the database</td><tr>
<tr class="field"><td>uploaded</td><td>boolean</td><td>Whether the database has been successfully uploaded</td><tr>
</tbody>
</table>
<a name="hyper_service.hyper_service_migration_workspace_database_mapping_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>hyper_service.hyper_service_migration_workspace_database_mapping</dfn>:  The attached workspace databases of sessions that are currently being migrated to new Hyper nodes</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from entity_type, session_id on this table to entity_type, entity_name on table, <a href="#hyper_service.hyper_service_migrations_anchor">hyper_service.hyper_service_migrations</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>entity_type</td><td>integer</td><td>The type of the entity that is migrated. Can only be (2=Session) in this table, required for Foreign Key</td><tr>
<tr class="field"><td>session_id</td><td>character varying</td><td>The UUIDv4 session identifier of the migrating session</td><tr>
<tr class="field"><td>workspace_database_name</td><td>character varying</td><td>The name of the attached workspace database</td><tr>
</tbody>
</table>
<a name="hyper_service.hyper_service_migration_workspace_mapping_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>hyper_service.hyper_service_migration_workspace_mapping</dfn>:  The workspaces of currently active session migrations</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from entity_type, session_id on this table to entity_type, entity_name on table, <a href="#hyper_service.hyper_service_migrations_anchor">hyper_service.hyper_service_migrations</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>entity_type</td><td>integer</td><td>The type of the entity that is migrated. Can only be (2=Session) in this table, required for Foreign Key</td><tr>
<tr class="field"><td>session_id</td><td>character varying</td><td>The UUIDv4 session identifier of the migrating session</td><tr>
<tr class="field"><td>workspace</td><td>character varying</td><td>The workspace the session belongs to</td><tr>
</tbody>
</table>
<a name="hyper_service.hyper_service_migrations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>hyper_service.hyper_service_migrations</dfn>:  The currently active migrations</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from node_id on this table to id on table, <a href="#hyper_service.hyper_service_nodes_anchor">hyper_service.hyper_service_nodes</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>entity_type</td><td>integer</td><td>The type of the entity that is migrated. Can be (1=Workspace, 2=Session)</td><tr>
<tr class="field"><td>entity_name</td><td>character varying</td><td>The name of the entity that is migrated (workspace name or UUIDv4 session identifier)</td><tr>
<tr class="field"><td>node_id</td><td>bigint</td><td>The id of the node in hyper_service_nodes that the entity is being migrated from</td><tr>
<tr class="field"><td>ready</td><td>boolean</td><td>Whether the corresponding databases have been added to hyper_service_migrations_databases</td><tr>
<tr class="field"><td>expiration_date</td><td>timestamp with time zone</td><td>The expiration date after which the migration will be cleaned up</td><tr>
<tr class="field"><td>tenant</td><td>character varying</td><td>The tenant of the entity that is migrated</td><tr>
<tr class="field"><td>resource_pool</td><td>character varying</td><td>The resource pool of the entity that is migrated</td><tr>
</tbody>
</table>
<a name="hyper_service.hyper_service_nodes_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>hyper_service.hyper_service_nodes</dfn>:  The Hyper nodes currently running in the Hyper Service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The auto-generated identifier for a node in the Hyper Service</td><tr>
<tr class="field"><td>resource_pool</td><td>character varying</td><td>The resource_pool which a node is assigned to</td><tr>
<tr class="field"><td>address</td><td>character varying</td><td>The address of the host running the Hyper process</td><tr>
<tr class="field"><td>port</td><td>integer</td><td>The port on which Hyper is listening</td><tr>
<tr class="field"><td>load</td><td>double precision</td><td>The load reported by Hyper</td><tr>
<tr class="field"><td>last_heartbeat</td><td>timestamp without time zone</td><td>The last heartbeart from this node</td><tr>
<tr class="field"><td>status</td><td>integer</td><td>The status of this node. Can be (0=Startup,1=Running, 2=DrainConnections, 3=Shutdown)</td><tr>
<tr class="field"><td>version</td><td>character varying</td><td>The Hyper version running on the node</td><tr>
<tr class="field"><td>lease_timeout</td><td>integer</td><td>The timeout value until leases get invalidated in ms</td><tr>
<tr class="field"><td>min_hyper_service_version</td><td>character varying</td><td>The minimum Hyper Service Version Number supported by the node</td><tr>
<tr class="field"><td>max_hyper_service_version</td><td>character varying</td><td>The maximum Hyper Service Version Number supported by the node</td><tr>
</tbody>
</table>
<a name="messagebus.subscriptions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>messagebus.subscriptions</dfn>:  The table to hold the subscription request details to handle service recovery</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>uuid</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>topic_name</td><td>text</td><td>The topic name for which subscriber will receive message</td><tr>
<tr class="field"><td>scaling_group_name</td><td>text</td><td>The scaling group name to which subscriber belongs</td><tr>
<tr class="field"><td>destination_service_name</td><td>text</td><td>The service name for which the response will be delivered</td><tr>
<tr class="field"><td>instance_count</td><td>integer</td><td>The instance count of the listeners for the subscription</td><tr>
</tbody>
</table>
<a name="nlp.datasource_usage_stats_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>nlp.datasource_usage_stats</dfn>:  Usage stats stored for recommendation</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_uri on this table to uri on table, <a href="#nlp.datasources_anchor">nlp.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#nlp.lenses_anchor">nlp.lenses</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>datasource_uri</td><td>text</td><td>URI of data source the usage stats belongs to</td><tr>
<tr class="field"><td>usage_stats</td><td>json</td><td>Aggregated data source usage stats</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>lens id</td><tr>
</tbody>
</table>
<a name="nlp.datasources_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>nlp.datasources</dfn>:  The table to hold semantic model datasource in nlp service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>uri</td><td>text</td><td>URI of a semantic model datasource</td><tr>
<tr class="field"><td>data</td><td>json</td><td>Serialized json struct of semantic model datasource</td><tr>
<tr class="field"><td>initialize_datasource_version_number</td><td>character varying</td><td>Version number of InitializeDatasource stage</td><tr>
<tr class="field"><td>enrich_datasource_version_number</td><td>character varying</td><td>Version number of EnrichDatasource stage</td><tr>
<tr class="field"><td>index_values_version_number</td><td>character varying</td><td>Version number of IndexValue stage</td><tr>
<tr class="field"><td>outdated</td><td>boolean</td><td>Indicates if semantic model datasource in database is outdated</td><tr>
<tr class="field"><td>analyze_datasource_version_number</td><td>character varying</td><td>Version number of AnalyzeDatasource stage</td><tr>
<tr class="field"><td>janitor_check_time</td><td>timestamp with time zone</td><td>Time when an inactive datasource was last checked to see if it is valid.</td><tr>
<tr class="field"><td>site_luid</td><td>text</td><td>site luid of the datasource</td><tr>
<tr class="field"><td>published_datasource_id</td><td>integer</td><td>published datasource id of the datasource</td><tr>
</tbody>
</table>
<a name="nlp.es_historical_configurations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>nlp.es_historical_configurations</dfn>:  Elastic Search Configuration History for Tableau Server</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>vmopts</td><td>text</td><td>Initial and Maximum heap size allocated to Elastic Search e.g. -Xmx4g -Xms4g</td><tr>
<tr class="field"><td>initial_heap_size</td><td>double precision</td><td>Initial Heap Size allocated to Elastic Search normalized to gb e.g. 4</td><tr>
<tr class="field"><td>max_heap_size</td><td>double precision</td><td>Maximum Heap Size allocated to Elastic Search normalized to gb e.g. 4</td><tr>
<tr class="field"><td>value_shard_count</td><td>integer</td><td>Number of data shards for the Elastic Search Concepts index for Ask Data e.g. 1</td><tr>
<tr class="field"><td>concept_shard_count</td><td>integer</td><td>Number of data shards for the Elastic Search Values index for Ask Data e.g. 1</td><tr>
<tr class="field"><td>system_status</td><td>text</td><td>Represents current system status, e.g. "Warning" (heap size < recommended), "info" (heap_size = recommended), "ok" (heap size > recommended)</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
</tbody>
</table>
<a name="nlp.events_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>nlp.events</dfn>:  Store the last event processed by nlp service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>last_enqueued_id</td><td>bigint</td><td>The ID of the event that is last processed by nlp service</td><tr>
<tr class="field"><td>processing_node</td><td>text</td><td>The ID of the nlp service node that is currently processing the events. If the field is empty, no nlp node is currently processing events.</td><tr>
</tbody>
</table>
<a name="nlp.expressions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>nlp.expressions</dfn>:  Versioned expressions created by user interactions</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_uri on this table to uri on table, <a href="#nlp.datasources_anchor">nlp.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#nlp.lenses_anchor">nlp.lenses</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>exp_id</td><td>text</td><td>The unique identifier for an expression</td><tr>
<tr class="field"><td>datasource_uri</td><td>text</td><td>URI of datasource the expression belongs to</td><tr>
<tr class="field"><td>version</td><td>text</td><td>Version of the expression, e.g. 20171212</td><tr>
<tr class="field"><td>expression</td><td>text</td><td>Serialized and versioned expression</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>lens id</td><tr>
</tbody>
</table>
<a name="nlp.fields_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>nlp.fields</dfn>:  The table to hold fields of semantic model datasource in nlp service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>datasource_uri</td><td>text</td><td>URI of the semantic model datasource that this field belongs to</td><tr>
<tr class="field"><td>graph_id</td><td>text</td><td>The unique identifier of the field in the context of a datasource</td><tr>
<tr class="field"><td>label</td><td>text</td><td>Display name of the field</td><tr>
<tr class="field"><td>description</td><td>text</td><td>Description of the field</td><tr>
<tr class="field"><td>parent_name</td><td>text</td><td>Name of the sheet or table that the field came from if a datasource is comprised of multiple sheets or tables</td><tr>
<tr class="field"><td>data_type</td><td>text</td><td>DataType of the field</td><tr>
<tr class="field"><td>field_type</td><td>text</td><td>FieldType of the field</td><tr>
<tr class="field"><td>value_concept</td><td>text</td><td>Semantic role of the field</td><tr>
<tr class="field"><td>field_role</td><td>text</td><td>FieldRole describes whether a field is a dimension or a measure</td><tr>
<tr class="field"><td>data_range_type</td><td>text</td><td>DataRangeType describes whether the values of the field are quantitative or discrete</td><tr>
<tr class="field"><td>bin_type</td><td>text</td><td>BinType describes type of bin that is used for group fields</td><tr>
<tr class="field"><td>default_aggregation</td><td>json</td><td>Aggregation type used to aggregate a measure when one is not explicitly defined</td><tr>
<tr class="field"><td>formula</td><td>text</td><td>Formula of a calculation field</td><tr>
<tr class="field"><td>invalid</td><td>boolean</td><td>Field marked as Invalid means a field cannot be used to produce valid queries against a data source</td><tr>
<tr class="field"><td>error</td><td>text</td><td>Error describes why the field is invalid, and should be nil for valid fields</td><tr>
<tr class="field"><td>hidden</td><td>boolean</td><td>Hidden fields may be used in command generation but should not appear in interpretations</td><tr>
<tr class="field"><td>popularity_score</td><td>integer</td><td>PopularityScore is the number of workbooks in which the field is used</td><tr>
<tr class="field"><td>parent_field_graph_id</td><td>text</td><td>ParentFieldGraphID is used for expressing field hierarchy</td><tr>
<tr class="field"><td>values_metadata</td><td>json</td><td>ValuesMetadata provides metadata about the values of a field</td><tr>
<tr class="field"><td>value_aliases</td><td>json</td><td>ValueAliases is a map of datasource values to user-defined value aliases</td><tr>
<tr class="field"><td>is_auto_generated</td><td>boolean</td><td>IsAutoGenerated boolean flag is used to identify if the field is auto-generated field</td><tr>
<tr class="field"><td>has_user_reference</td><td>boolean</td><td>HasUserReference indicates if a calculated field has formula that refers to a user</td><tr>
<tr class="field"><td>combined_field_list</td><td>ARRAY</td><td>CombinedFieldList contains the list of field names which form a combined field</td><tr>
<tr class="field"><td>user_aggregation</td><td>text</td><td>User defined aggregation type used to aggregate a measure</td><tr>
<tr class="field"><td>unsupported</td><td>boolean</td><td>Unsupported indicates if the field is not supported for NLP query</td><tr>
<tr class="field"><td>computation_in_progress</td><td>boolean</td><td>ComputationInProgress boolean flag indicates whether the field has completed all 3 stages of InitializeSemanticModel.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>formula_interpretation</td><td>character varying</td><td>FormulaInterpretation is result interpreted by ANTLR parser for the formula.</td><tr>
<tr class="field"><td>friendly_name</td><td>text</td><td>FriendlyName is the alias for this field. DEPRECATED</td><tr>
<tr class="field"><td>friendly_formula</td><td>text</td><td>FriendlyFormula describes the formula with friendly-name</td><tr>
<tr class="field"><td>group_field_parent_model</td><td>text</td><td>GroupFieldParentModel identifies whether a group field is cluster or not</td><tr>
<tr class="field"><td>default_aggregation_is_explicit</td><td>boolean</td><td>If true, the default aggregation for the field is set by user, otherwise it is inferred</td><tr>
<tr class="field"><td>matched_field_concept_uri</td><td>text</td><td>URI of a field concept that is matched to the field through semantics service matching endpoint</td><tr>
<tr class="field"><td>object_id</td><td>text</td><td>Object id of the field obtained from TDS</td><tr>
<tr class="field"><td>authoring_name_components</td><td>ARRAY</td><td>The Name Components that can be used to author a viz.</td><tr>
<tr class="field"><td>lod_exp_type</td><td>text</td><td>Identifies the lod exp type</td><tr>
<tr class="field"><td>formula_has_parameter</td><td>boolean</td><td>Identifies if a formula has reference to a parameter or not.</td><tr>
<tr class="field"><td>is_constant_formula</td><td>boolean</td><td>Identifies if the formula for the field is constant formula or not.</td><tr>
<tr class="field"><td>tableau_popularity_factor</td><td>integer</td><td>tableau popularity factor is used to calculate a fields popularity score</td><tr>
<tr class="field"><td>has_null_values</td><td>boolean</td><td>Whether the field contains null value within the indexing limit.</td><tr>
</tbody>
</table>
<a name="nlp.jobs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>nlp.jobs</dfn>:  Store the enqueued jobs to be processed by nlp service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>datasource_uri</td><td>text</td><td>URI of a semantic model datasource the job belongs to</td><tr>
<tr class="field"><td>type</td><td>text</td><td>Type of job</td><tr>
<tr class="field"><td>priority</td><td>integer</td><td>Priority of job</td><tr>
<tr class="field"><td>status</td><td>text</td><td>Status of job</td><tr>
<tr class="field"><td>stages</td><td>ARRAY</td><td>Stages of job</td><tr>
<tr class="field"><td>current_stage_index</td><td>integer</td><td>Current index of stages</td><tr>
<tr class="field"><td>should_reset</td><td>boolean</td><td>If current job needs to be reset</td><tr>
<tr class="field"><td>retry_count</td><td>integer</td><td>Number of retries that the job has attempted</td><tr>
<tr class="field"><td>next_run_after</td><td>timestamp with time zone</td><td>Job is eligible to run after this timestamp</td><tr>
<tr class="field"><td>processing_node</td><td>text</td><td>The ID of the nlp service node that is currently processing the job. If the field is empty, no nlp node is currently processing jobs.</td><tr>
<tr class="field"><td>is_user_initiated</td><td>boolean</td><td>if the job is initiated by user from UI</td><tr>
</tbody>
</table>
<a name="nlp.links_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>nlp.links</dfn>:  User created links, each points to a specific LOD expression</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_uri on this table to uri on table, <a href="#nlp.datasources_anchor">nlp.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from exp_id on this table to exp_id on table, <a href="#nlp.expressions_anchor">nlp.expressions</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#nlp.lenses_anchor">nlp.lenses</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>short_id</td><td>text</td><td>A 6-digit alphanumeric token that serves as unique identifier for a link</td><tr>
<tr class="field"><td>datasource_uri</td><td>text</td><td>URI of datasource the link belongs to</td><tr>
<tr class="field"><td>exp_id</td><td>text</td><td>The unique identifier of the referenced lod expression</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>lens id</td><tr>
</tbody>
</table>
<a name="nlp.phrase_recommendation_models_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>nlp.phrase_recommendation_models</dfn>:  Trained machine learning models for phrases recommendation</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#nlp.lenses_anchor">nlp.lenses</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from published_datasource_id on this table to id on table, <a href="#nlp.datasources_anchor">nlp.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#nlp.sites_anchor">nlp.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site on which the lens is created</td><tr>
<tr class="field"><td>published_datasource_id</td><td>integer</td><td>The id of the published datasource on the site</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>The luid for identifying the lens</td><tr>
<tr class="field"><td>model_data</td><td>json</td><td>Trained machine learning model of a lens for phraer recommendation</td><tr>
<tr class="field"><td>model_type</td><td>text</td><td>Type of the machine learning model, e.g. PowerSet Model, Phraser Model</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
</tbody>
</table>
<a name="nlp.queries_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>nlp.queries</dfn>:  Queries stored for datasource analytics</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_uri on this table to uri on table, <a href="#nlp.datasources_anchor">nlp.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#nlp.lenses_anchor">nlp.lenses</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>query</td><td>text</td><td>Raw query typed in by user</td><tr>
<tr class="field"><td>datasource_uri</td><td>text</td><td>URI of datasource the query belongs to</td><tr>
<tr class="field"><td>session_id</td><td>text</td><td>ID of session the query belongs to</td><tr>
<tr class="field"><td>guid</td><td>text</td><td>GUID is used to join nlp.queries with nlp.visualizations</td><tr>
<tr class="field"><td>interpretation_nlgs</td><td>ARRAY</td><td>List of generated interpretations(nlgs) to the raw query</td><tr>
<tr class="field"><td>selected_interpretation_index</td><td>integer</td><td>Index of the selected interpretation. -1 if query is unselected</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>ID of user who creates the query</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>lens id</td><tr>
</tbody>
</table>
<a name="nlp.recommendation_stats_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>nlp.recommendation_stats</dfn>:  Recommendation stats extracted from nlp usage data</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_uri on this table to uri on table, <a href="#nlp.datasources_anchor">nlp.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#nlp.lenses_anchor">nlp.lenses</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_month</td><td>date</td><td>The start date of month for when this row entry was created</td><tr>
<tr class="field"><td>datasource_uri</td><td>text</td><td>URI of data source the record belongs to</td><tr>
<tr class="field"><td>stat_type</td><td>text</td><td>Type of recommendation stat</td><tr>
<tr class="field"><td>keys</td><td>ARRAY</td><td>Array of keys for aggregation</td><tr>
<tr class="field"><td>data</td><td>text</td><td>Serialized stat data</td><tr>
<tr class="field"><td>count</td><td>integer</td><td>Number of occurrences within the month</td><tr>
<tr class="field"><td>data_hash</td><td>text</td><td>MD5 hash of data column</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>lens id</td><tr>
</tbody>
</table>
<a name="nlp.visualizations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>nlp.visualizations</dfn>:  visualizations stored for datasource analytics</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_uri on this table to uri on table, <a href="#nlp.datasources_anchor">nlp.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#nlp.lenses_anchor">nlp.lenses</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>expression</td><td>text</td><td>Corresponding Arklang expression</td><tr>
<tr class="field"><td>datasource_uri</td><td>text</td><td>URI of datasource the visualization belongs to</td><tr>
<tr class="field"><td>session_id</td><td>text</td><td>ID of session the visualization belongs to</td><tr>
<tr class="field"><td>guid</td><td>text</td><td>GUID is used to join nlp.queries with nlp.visualizations</td><tr>
<tr class="field"><td>interpretation_nlg</td><td>text</td><td>Interpretation(nlg) that describes Visualization content</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>ID of user who creates the visualization</td><tr>
<tr class="field"><td>referenced_field_graph_ids</td><td>ARRAY</td><td>List of field graph IDs referenced by visualization expression</td><tr>
<tr class="field"><td>viz_type</td><td>text</td><td>ShowMe viz type</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>lens id</td><tr>
</tbody>
</table>
<a name="public.api_tokens_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.api_tokens</dfn>:  Records for the api tokens</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>token_id</td><td>character varying</td><td>A unique identifier for the record.</td><tr>
<tr class="field"><td>client_name</td><td>character varying</td><td>The client name for this api token.</td><tr>
<tr class="field"><td>hashed_secret</td><td>text</td><td>The hashed_secret for this api token.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>A foreign key refrence to the user.</td><tr>
<tr class="field"><td>created_timestamp</td><td>timestamp with time zone</td><td>The time this token was created.</td><tr>
<tr class="field"><td>revoked_timestamp</td><td>timestamp with time zone</td><td>The time this token was revoked.</td><tr>
<tr class="field"><td>scope</td><td>character varying</td><td>String containing the scope name</td><tr>
</tbody>
</table>
<a name="public.asset_key_marker_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.asset_key_marker</dfn>:  Records are used to flag a particular record in the asset_key_meta_data table.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Artificial auto-incrementing integer that serves as the primary key</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>The id of the asset_key_meta_data record being marked.</td><tr>
<tr class="field"><td>marker_name</td><td>character varying</td><td>The type of marker.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this records was last updated.</td><tr>
</tbody>
</table>
<a name="public.asset_key_meta_data_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.asset_key_meta_data</dfn>:  Each record holds meta data for an asset encryption key.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Artificial auto-incrementing integer that serves as the primary key.</td><tr>
<tr class="field"><td>algorithm_name</td><td>character varying</td><td>The algorithm used in conjunction with this key.</td><tr>
<tr class="field"><td>salt</td><td>character varying</td><td>The salt used in the test string.</td><tr>
<tr class="field"><td>test_string</td><td>character varying</td><td>An encrypted version of a well-known test string</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this record was last updated.</td><tr>
</tbody>
</table>
<a name="public.asset_list_items_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.asset_list_items</dfn>:  Contains the individual list entries that correspond to the lists defined in the asset_lists table.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from asset_list_id on this table to id on table, <a href="#public.asset_lists_anchor">public.asset_lists</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record</td><tr>
<tr class="field"><td>asset_list_id</td><td>integer</td><td>A foreign key reference to the asset list to which this item belongs.</td><tr>
<tr class="field"><td>useable_type</td><td>character varying</td><td>One of "View" or "Workbook". The type of object that this item corresponds to.</td><tr>
<tr class="field"><td>useable_id</td><td>integer</td><td>Kind of an informal "polymorphic" foreign key reference to either the corresponding view or workbook as determined by the useable_type field.  Dead links might exist, where the corresponding item has been deleted.</td><tr>
<tr class="field"><td>position</td><td>integer</td><td>Controls the order in which the items are displayed.</td><tr>
<tr class="field"><td>added_timestamp</td><td>timestamp without time zone</td><td>Timestamp of when the row was added to the table. For rows that already existed, use the timestamp of the migration.</td><tr>
<tr class="field"><td>useable_luid</td><td>uuid</td><td>The luid of the useable item. Not used for favorites, but used for other list types.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the asset list item belong to.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>site luid that asset list item belongs to</td><tr>
<tr class="field"><td>suspected_as_deleted</td><td>boolean</td><td>Boolean to indicate if the content is suspected as deleted because it is missing from the content cache</td><tr>
<tr class="field"><td>timestamp_of_first_cache_absence</td><td>timestamp without time zone</td><td>Timestamp of first occurence of content not returned from content cache. Null = No absences from cache</td><tr>
</tbody>
</table>
<a name="public.asset_lists_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.asset_lists</dfn>:  This table supports the creation of various types of per-user lists. The actual list contents are listed in the asset_list_items table.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>This is what the type of list is called.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>Foreign key to the user for whom this list was defined.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Foreign key to the site to which the user belongs.</td><tr>
<tr class="field"><td>description</td><td>character varying</td><td>Description of an asset list.</td><tr>
<tr class="field"><td>visibility</td><td>character varying</td><td>Visibility of asset list, valid values are public or private.</td><tr>
<tr class="field"><td>list_type</td><td>character varying</td><td>Type of asset list, valid values are collection or favorites.</td><tr>
<tr class="field"><td>created_timestamp</td><td>timestamp without time zone</td><td>Time that asset list was created for favorites lists prior to 20.3 it will be time of this update</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this asset list was last updated.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>An identifier that is unique in combination with the site_id.</td><tr>
<tr class="field"><td>sync_token</td><td>character varying</td><td>the sync token for content exploration to make sure it has up to date collections</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>site luid that asset list belongs to</td><tr>
</tbody>
</table>
<a name="public.async_jobs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.async_jobs</dfn>:  Records information about background tasks that are run in response to some user action (as opposed to being run on some schedule).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record</td><tr>
<tr class="field"><td>job_type</td><td>character varying</td><td>The type of job being run</td><tr>
<tr class="field"><td>success</td><td>boolean</td><td>Whether or not the job succeeded. Will be true for success, and false for failure.</td><tr>
<tr class="field"><td>worker</td><td>character varying</td><td>Identifies the machine on which the job is run</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>Links to the user who triggered the running of the job.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Links to the relevant site.</td><tr>
<tr class="field"><td>notes</td><td>text</td><td>Can be used to store additional information about the running of the job.</td><tr>
<tr class="field"><td>progress</td><td>integer</td><td>Can be used to indicate percent complete for the job, but in most cases simply gets set to 100 when the job is completed</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this record was last updated.</td><tr>
<tr class="field"><td>completed_at</td><td>timestamp without time zone</td><td>When the job finished execution. When set, this should generally agree with the updated_at field.</td><tr>
<tr class="field"><td>detailed_status</td><td>text</td><td>Stores information about current progress details of the async job.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>An identifier that is unique in combination with the site_id.</td><tr>
</tbody>
</table>
<a name="public.async_service_request_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.async_service_request</dfn>:  Table which stores the requests for async services</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The id which uniquely identifies row in the table</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp for creating the request</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The timestamp for updating the request</td><tr>
<tr class="field"><td>expire_at</td><td>timestamp without time zone</td><td>The timestamp when the request should expire</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>The request luid of record in the table</td><tr>
<tr class="field"><td>request_type</td><td>character varying</td><td>The request type of record in the table</td><tr>
<tr class="field"><td>payload</td><td>text</td><td>The request payload of record in the table</td><tr>
<tr class="field"><td>state</td><td>character varying</td><td>The request state of record in the table</td><tr>
<tr class="field"><td>received_by</td><td>uuid</td><td>The request received by node LUID of record in the table</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to the site to where the requests exists.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Request site luid.</td><tr>
<tr class="field"><td>user_luid</td><td>uuid</td><td>Request owner luid.</td><tr>
</tbody>
</table>
<a name="public.async_service_request_execute_history_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.async_service_request_execute_history</dfn>:  Table which stores the execution history for async service request</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from request_id on this table to id on table, <a href="#public.async_service_request_anchor">public.async_service_request</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The id which uniquely identifies row in the table</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp for creating the execution record</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The timestamp for updating the execution record</td><tr>
<tr class="field"><td>request_id</td><td>bigint</td><td>The request id refer to async_service_request of record in the table</td><tr>
<tr class="field"><td>retry_time</td><td>integer</td><td>Request execution time of record in the table</td><tr>
<tr class="field"><td>execute_node</td><td>uuid</td><td>Request execution node luid of record in the table</td><tr>
<tr class="field"><td>state</td><td>character varying</td><td>Request execution state of record in the table</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to the site to where the execution record exists.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Execution record site luid.</td><tr>
</tbody>
</table>
<a name="public.authorizable_permission_sets_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.authorizable_permission_sets</dfn>:  Many-to-many mapping table between authorizables and permission sets.  An authorizable may have a permission set for every permission_set_class.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from permission_set_id on this table to id on table, <a href="#public.permission_sets_anchor">public.permission_sets</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>authorizable_id</td><td>integer</td><td>Refers to the id of the authorizable (e.g. workbook) depending on the value of authorizable_type.</td><tr>
<tr class="field"><td>authorizable_type</td><td>character varying</td><td>Refers to the type of the authorizable (e.g. workbook).</td><tr>
<tr class="field"><td>permission_set_id</td><td>integer</td><td>The permission set this item uses.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site id.</td><tr>
</tbody>
</table>
<a name="public.authorization_servers_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.authorization_servers</dfn>:  Properties of External Authorization Servers</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>eas_id</td><td>uuid</td><td>The identifier for the External Authorization Server</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The identifier for the site the External Authorization Server is registered with</td><tr>
<tr class="field"><td>issuer_url</td><td>character varying</td><td>The issuer URL of the External Authorization Server</td><tr>
<tr class="field"><td>jwks_uri</td><td>character varying</td><td>The JWKS URI of the External Authorization Server</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp for when the External Authorization Server registry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The timestamp for when the External Authorization Server entry was last updated$</td><tr>
<tr class="field"><td>enabled</td><td>boolean</td><td>True to enable functionality of the External Authorization Server</td><tr>
</tbody>
</table>
<a name="public.background_jobs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.background_jobs</dfn>:  Records information about background tasks that are run by a Backgrounder process. These tasks are almost always run according to some schedule, but in a few cases they may also be triggered by some user actions.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>job_type</td><td>character varying</td><td>The type of job being run. This looks a bit odd because it comes from a serialized symbol.</td><tr>
<tr class="field"><td>progress</td><td>integer</td><td>Can be used to indicate percent complete for the job, but in most cases simply gets set to 100 when the job is completed.</td><tr>
<tr class="field"><td>args</td><td>text</td><td>Used as a means of passing parameters about the background job.  This information is stored in a special serialized format, and thus is not easily readable.</td><tr>
<tr class="field"><td>notes</td><td>text</td><td>Can be used to store additional information about the running of the job.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this record was last updated</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>completed_at</td><td>timestamp without time zone</td><td>When the job finished execution. When set, this should generally agree with the updated_at field.</td><tr>
<tr class="field"><td>started_at</td><td>timestamp without time zone</td><td>When the execution of the job was started. This is not generally the same as created_at, because it may take some time before a backgrounder "notices" the newly created record and begins to process it.</td><tr>
<tr class="field"><td>job_name</td><td>character varying</td><td>A nice readable name for this type of job.</td><tr>
<tr class="field"><td>finish_code</td><td>integer</td><td>Completion status for the job. Will be 0 for success, 1 for failure, and 2 for cancelled.</td><tr>
<tr class="field"><td>priority</td><td>integer</td><td>Controls which background_jobs records are processed first. The highest priority is 0, and the lowest is 100. Integer values in between are also valid.</td><tr>
<tr class="field"><td>title</td><td>character varying</td><td>Can be used to provide some additional information about the job.</td><tr>
<tr class="field"><td>created_on_worker</td><td>character varying</td><td>Identifies the machine that created this background_jobs record.</td><tr>
<tr class="field"><td>processed_on_worker</td><td>character varying</td><td>Identifies the machine on which the job is run.</td><tr>
<tr class="field"><td>link</td><td>text</td><td>Used, for certain types of jobs, to record a relevant URL.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking." Don't set this or mess with it, it's all handled automatically.</td><tr>
<tr class="field"><td>backgrounder_id</td><td>character varying</td><td>Indicates which backgrounder process ran the job.</td><tr>
<tr class="field"><td>serial_collection_id</td><td>integer</td><td>It is possible to designate a job as part of a "serial collection," by setting its serial_collection_id. Two jobs with the same serial_collection_id cannot be processed simultaneously. Note that serial_collection_id is actually a foreign key to the serial_collections table. This is not a capability that sees much use.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Links to a site, if one is relevant, otherwise it is left NULL.</td><tr>
<tr class="field"><td>subtitle</td><td>character varying</td><td>Can be used to provide some additional information about the job.</td><tr>
<tr class="field"><td>language</td><td>character varying</td><td>The language for the job is listed here.</td><tr>
<tr class="field"><td>locale</td><td>character varying</td><td>The locale for the job is listed here.</td><tr>
<tr class="field"><td>correlation_id</td><td>integer</td><td>The ID to correlate occurrences of the same job, which is the foreign key reference to the record in the respective definition table for subscriptions (subscriptions table) and extract-refresh jobs (tasks table).</td><tr>
<tr class="field"><td>attempts_remaining</td><td>integer</td><td>Used track amount of execution attempts remaining for the job. Usually NULL for job that are attempted only once. Number greater than 0 for jobs that will be retried.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>An identifier that is unique in combination with the site_id.</td><tr>
<tr class="field"><td>job_rank</td><td>bigint</td><td>Stores the calculated ranking of the job, determines the order it will be run on</td><tr>
<tr class="field"><td>queue_id</td><td>integer</td><td>Identifier representing which virtual queue this job belongs to</td><tr>
<tr class="field"><td>overflow</td><td>boolean</td><td>Represents if the job is in overflow queue or not</td><tr>
<tr class="field"><td>promoted_at</td><td>timestamp without time zone</td><td>When the job is promoted to primary queue from overflow queue. Null for non overflow jobs</td><tr>
<tr class="field"><td>task_id</td><td>integer</td><td>Id of the task associated with the job. Explicitly not a foreign key to allow for tasks to be deleted without deleting related job records.</td><tr>
<tr class="field"><td>run_now</td><td>boolean</td><td>Indicates if the job was triggered by run now</td><tr>
<tr class="field"><td>creator_id</td><td>integer</td><td>Indicates what user id is the creator of the job</td><tr>
</tbody>
</table>
<a name="public.background_jobs_cancel_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.background_jobs_cancel</dfn>:  BG jobs for which cancellation has been requested</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from background_job_id on this table to id on table, <a href="#public.background_jobs_anchor">public.background_jobs</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the cancellation request</td><tr>
<tr class="field"><td>background_job_id</td><td>integer</td><td>The id of the job to be cancelled</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When the cancellation was requested</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When the cancellation was last updated</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>The user who requested cancellation</td><tr>
<tr class="field"><td>users_to_notify</td><td>text</td><td>CSV encoded list of IDs representing users to notify about job cancellation</td><tr>
<tr class="field"><td>cancellation_reason</td><td>character varying</td><td>User provided reason for the cancellation of the job</td><tr>
</tbody>
</table>
<a name="public.big_texts_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.big_texts</dfn>:  This table serves as a convenient place to store a big text object, if necessary. It's kind of a utility table. This table is really just used for internal purposes.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>txt</td><td>text</td><td>Holds whatever text object is desired. There is no specific designated use for this field. Any code can store a text object here for whatever purpose it wishes.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time at which this record was last changed.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the big_texts.</td><tr>
</tbody>
</table>
<a name="public.caching_policies_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.caching_policies</dfn>:  This table stores the caching policy configuration for workbooks for which the feature is enabled.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from workbook_id on this table to id on table, <a href="#public.workbooks_anchor">public.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site. This id is same as the id (primary key) of the public.sites table.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>ID of the workbook. This id is same as the id (primary key) of the public.workbooks table.</td><tr>
<tr class="field"><td>policy_detail_json</td><td>text</td><td>A JSON structure with a few fields describing the workbook caching policy.</td><tr>
</tbody>
</table>
<a name="public.capabilities_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.capabilities</dfn>:  Holds a relatively short list of capabilities. A user can be allowed certain capabilities either through being some sort of admin, or through owning something like a workbook or a project, or via entries in the next_gen_permissions table. Capabilities are things like read, write, export_data, publish, web_authoring, etc.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>This (or the id) is how the capability is referred to by code.</td><tr>
<tr class="field"><td>display_name</td><td>character varying</td><td>This is the name that may be displayed to a user.</td><tr>
<tr class="field"><td>display_order</td><td>integer</td><td>Ascending order of this value is the order in which capabilities are listed, when displayed.</td><tr>
</tbody>
</table>
<a name="public.capability_roles_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.capability_roles</dfn>:  This table serves primarily to associate roles with capabilities. A given role can have many capabilities, and a given capability can be associated with several roles.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from capability_id on this table to id on table, <a href="#public.capabilities_anchor">public.capabilities</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from role_id on this table to id on table, <a href="#public.roles_anchor">public.roles</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>capability_id</td><td>integer</td><td>Foreign key reference to the capabilities table.</td><tr>
<tr class="field"><td>role_id</td><td>integer</td><td>Foreign key reference to the roles table.</td><tr>
</tbody>
</table>
<a name="public.collection_metrics_aggregations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.collection_metrics_aggregations</dfn>:  Each record represents a partial aggregation of analytics for a given collection in a given time interval.  It is often necessary to sum across multiple rows to find a total for a given time interval.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from collection_id on this table to id on table, <a href="#public.asset_lists_anchor">public.asset_lists</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>collection_id</td><td>integer</td><td>A foreign key reference to the collection (in asset_lists table).</td><tr>
<tr class="field"><td>day_index</td><td>integer</td><td>Records what day of the month the analytics are aggregated over.  When 0, the aggregation is for the month and year as designated by month_index and year_index.</td><tr>
<tr class="field"><td>month_index</td><td>integer</td><td>Records what month of the year the analytics are aggregated over.  When 0, the aggregation is for the year as designated by year_index.</td><tr>
<tr class="field"><td>year_index</td><td>integer</td><td>Records what year the analytics are aggregated over</td><tr>
<tr class="field"><td>view_count</td><td>integer</td><td>Records the number of times a collection was viewed in the given time interval.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the collection metrics aggregation belong to.</td><tr>
</tbody>
</table>
<a name="public.column_assets_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.column_assets</dfn>:  Each record represents a column asset that exists on Tableau Server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from table_id on this table to id on table, <a href="#public.table_assets_anchor">public.table_assets</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the column asset record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the column asset.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier for the column asset.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this column asset is associated with.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>The description of the column asset.</td><tr>
<tr class="field"><td>table_id</td><td>integer</td><td>The table this column belongs to.</td><tr>
<tr class="field"><td>remote_type</td><td>character varying</td><td>The data type of the column.</td><tr>
<tr class="field"><td>is_tombstoned</td><td>boolean</td><td>Tombstoned columns are "soft deleted" because they have been grouped with other columns. They can be ungrouped to remove this</td><tr>
<tr class="field"><td>is_nullable</td><td>boolean</td><td>Nullable columns may have null values; non-nullable columns only have non-null values.</td><tr>
</tbody>
</table>
<a name="public.command_job_mappings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.command_job_mappings</dfn>:  Each record represents a mapping between an extract command and a background job.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from background_job_id on this table to id on table, <a href="#public.background_jobs_anchor">public.background_jobs</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>extract_command_luid</td><td>uuid</td><td>LUID of an extract command created by Extract Service.</td><tr>
<tr class="field"><td>background_job_id</td><td>integer</td><td>A foreign key reference to the background job that runs the extract command.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to the site where the extract command exists.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Command-job mapping creation timestamp.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Command-job mapping modified timestamp.</td><tr>
</tbody>
</table>
<a name="public.comment_attachments_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.comment_attachments</dfn>:  Attachments for comments.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from comment_id on this table to id on table, <a href="#public.comments_anchor">public.comments</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>comment_id</td><td>integer</td><td>A foreign key reference to the comment that the attachments is attached to.</td><tr>
<tr class="field"><td>attachment_type</td><td>character varying</td><td>The type of the attachment.</td><tr>
<tr class="field"><td>attachment_id</td><td>integer</td><td>The id of the attachment.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the comment attachments belong to.</td><tr>
</tbody>
</table>
<a name="public.comments_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.comments</dfn>:  Comments users made on views.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>title</td><td>text</td><td>Not used.</td><tr>
<tr class="field"><td>comment</td><td>text</td><td>Comment text.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Date when comment was created.</td><tr>
<tr class="field"><td>commentable_id</td><td>integer</td><td>Corresponding view id.</td><tr>
<tr class="field"><td>commentable_type</td><td>character varying</td><td>View.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>Id of the user who made the comment.</td><tr>
<tr class="field"><td>drawing</td><td>text</td><td>Not used.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Date when comment was last updated.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the comments belong to.</td><tr>
</tbody>
</table>
<a name="public.connected_apps_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.connected_apps</dfn>:  Properties of Connected Apps</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>name</td><td>character varying</td><td>User-friendly name for the Connected App</td><tr>
<tr class="field"><td>enabled</td><td>boolean</td><td>True to enable functionality of the Connected App</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp for when the Connected App was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The timestamp for when the Connected App was last updated</td><tr>
<tr class="field"><td>client_id</td><td>uuid</td><td>The identifier for the Connected App</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The identifier for the site the Connected App is tied to</td><tr>
<tr class="field"><td>project_luid</td><td>uuid</td><td>The UUID for the project the Connected App is granted access to; NULL to grant access to the entire site</td><tr>
<tr class="field"><td>secret_1_id</td><td>uuid</td><td>The identifier for secret #1 associated with the Connected App</td><tr>
<tr class="field"><td>secret_1_created_at</td><td>timestamp without time zone</td><td>The timestamp for when secret #1 is created</td><tr>
<tr class="field"><td>secret_2_id</td><td>uuid</td><td>The identifier for secret #2 associated with the Connected App</td><tr>
<tr class="field"><td>secret_2_created_at</td><td>timestamp without time zone</td><td>The timestamp for when secret #2 is created</td><tr>
<tr class="field"><td>domain_safelist</td><td>text</td><td>List of domains which this Connected App is allowed to embed vizzes into</td><tr>
<tr class="field"><td>unrestricted_embedding</td><td>boolean</td><td>Whether this Connected App ignores domain_safelist to allow vizzes be embeded on any domains</td><tr>
</tbody>
</table>
<a name="public.content_migration_manifest_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.content_migration_manifest</dfn>:  for storing data related to a content migration</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from content_migration_id on this table to id on table, <a href="#public.content_migrations_anchor">public.content_migrations</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>migration manifest entry id</td><tr>
<tr class="field"><td>content_migration_id</td><td>integer</td><td>content migration id</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>site id the migration is for</td><tr>
<tr class="field"><td>content_migration_content_token</td><td>uuid</td><td>Content Migration Tool generated content token</td><tr>
<tr class="field"><td>content_migration_payload_type</td><td>text</td><td>type of the payload for this entry in the content manifest</td><tr>
<tr class="field"><td>entry_expiration</td><td>timestamp without time zone</td><td>time at which this migration manifest entry can be deleted</td><tr>
<tr class="field"><td>content_payload</td><td>text</td><td>payload for this entry in the content migration manifest</td><tr>
<tr class="field"><td>is_processed</td><td>boolean</td><td>indicates if this entry has been processed and can be deleted</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>Used for encrypting data with keyfile</td><tr>
</tbody>
</table>
<a name="public.content_migrations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.content_migrations</dfn>:  for storing data related to a content migration</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>auto-generated id</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>site id the migration is for</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>site luid the migration is for</td><tr>
<tr class="field"><td>is_destination</td><td>boolean</td><td>indicates if the migration is source or destination side</td><tr>
<tr class="field"><td>public_key</td><td>text</td><td>public key for content transfer encryption</td><tr>
<tr class="field"><td>private_key</td><td>text</td><td>private key for content transfer decryption. Only used at destination</td><tr>
<tr class="field"><td>migration_expiration</td><td>timestamp without time zone</td><td>time at which the migration data can be purged</td><tr>
<tr class="field"><td>destination_site_name</td><td>text</td><td>Migration destination site name</td><tr>
<tr class="field"><td>destination_server_url</td><td>text</td><td>Migration destination server url</td><tr>
<tr class="field"><td>authorized_migration_runner_user_luid</td><td>uuid</td><td>User LUID of the authorized migration runner</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>used for encrypting data with keyfile</td><tr>
<tr class="field"><td>migration_luid</td><td>uuid</td><td>used for unique identification of content migrations</td><tr>
</tbody>
</table>
<a name="public.content_sync_token_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.content_sync_token</dfn>:  Each record stores the checksum associated to a piece of content</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Id associated to that piece of content.</td><tr>
<tr class="field"><td>content_type</td><td>character varying</td><td>The type of the content.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The associated site.</td><tr>
<tr class="field"><td>sync_token</td><td>character varying</td><td>A unique identifier for this version of the associated content.</td><tr>
</tbody>
</table>
<a name="public.content_usage_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.content_usage</dfn>:  Information about operations performed on Server content.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres. Primary key for table.</td><tr>
<tr class="field"><td>content_type</td><td>smallint</td><td>Integer relating to the type of content. 1 - workbooks, 2 - datasources, 3 - flows.</td><tr>
<tr class="field"><td>content_id</td><td>integer</td><td>Maps to the id of the workbook/datasource/flow in their respective tables.</td><tr>
<tr class="field"><td>operation_type</td><td>text</td><td>The operation performed on the content. This can be a server operation like extract refresh or a type of REST API call.</td><tr>
<tr class="field"><td>last_recorded_at</td><td>timestamp without time zone</td><td>Timestamp of when the operation was performed. It is updated no more than once a day, so the time part may be older than the actual latest usage.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site to which this content belongs.</td><tr>
</tbody>
</table>
<a name="public.custom_views_metrics_aggregations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.custom_views_metrics_aggregations</dfn>:  Each record represents a partial aggregation of analytics for a given custom view in a given time interval.  It is often necessary to sum across multiple rows to find a total for a given time interval.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from custom_view_id on this table to id on table, <a href="#public.customized_views_anchor">public.customized_views</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site where custom view exists.</td><tr>
<tr class="field"><td>custom_view_id</td><td>integer</td><td>A foreign key reference to the custom view.</td><tr>
<tr class="field"><td>day_index</td><td>integer</td><td>Records what day of the month the analytics are aggregated over. When 0, the aggregation is for the month and year as designated by month_index and year_index.</td><tr>
<tr class="field"><td>month_index</td><td>integer</td><td>Records what month of the year the analytics are aggregated over. When 0, the aggregation is for the year as designated by year_index.</td><tr>
<tr class="field"><td>year_index</td><td>integer</td><td>Records what year the analytics are aggregated over</td><tr>
<tr class="field"><td>view_count</td><td>integer</td><td>Records the number of times a custom view was viewed in a given day.</td><tr>
</tbody>
</table>
<a name="public.customized_views_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.customized_views</dfn>:  When a user creates a customized view, the data that supports that goes in this table.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from creator_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from start_view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the customized view.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>A description of the customized view. Seems not to be used commonly.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>A foreign key reference to the views table. Refers specifically to the view that this customized view is based on.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this record was last updated.</td><tr>
<tr class="field"><td>creator_id</td><td>integer</td><td>Foreign key reference to the user who created this customized view.</td><tr>
<tr class="field"><td>public</td><td>boolean</td><td>Indicates if the user elected to share his customized view.</td><tr>
<tr class="field"><td>size</td><td>integer</td><td>The number of bytes it took to describe the changes from the base view to the customized view.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key to the site that this customized view is associated with (the site of the user who created it).</td><tr>
<tr class="field"><td>repository_thumbnail_data_id</td><td>bigint</td><td>A reference to an entry in the repository_data table, which, in turn references the PostgreSQL large object that contains the thumbnail image for this customized view.</td><tr>
<tr class="field"><td>url_id</td><td>character varying</td><td>A URL compatible string derived from the name of the customized view. This must be unique when taken together with the customized view creator and the view.</td><tr>
<tr class="field"><td>start_view_id</td><td>integer</td><td>A foreign key reference to the view from which this customized view was derived.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A "locally unique" id used to identify this record for certain uses. It is generated automatically, and is nothing that a customer needs to worry about.</td><tr>
<tr class="field"><td>data_id</td><td>character varying</td><td>Unique ID used to identify the view data.</td><tr>
<tr class="field"><td>thumbnail_id</td><td>character varying</td><td>Unique ID used to identify the thumbnail.</td><tr>
<tr class="field"><td>hidden</td><td>boolean</td><td>Indicates if the custom view is hidden.</td><tr>
<tr class="field"><td>created_by_feature</td><td>integer</td><td>Feature which created customized view.</td><tr>
<tr class="field"><td>accessed_at</td><td>timestamp without time zone</td><td>Last accessed datetime for customized view. NULL: never accessed</td><tr>
<tr class="field"><td>modified_at</td><td>timestamp without time zone</td><td>Indicates the last time at which this customized view was updated.</td><tr>
</tbody>
</table>
<a name="public.data_acceleration_schedule_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.data_acceleration_schedule</dfn>:  for storing the schedules of data acceleration backgrounder jobs</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>auto-generated id</td><tr>
<tr class="field"><td>object_id</td><td>integer</td><td>workbook id, datasource or data connection id</td><tr>
<tr class="field"><td>run_next_at</td><td>timestamp without time zone</td><td>the next timestamp the backgrounder should be run</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>the timestamp of the schedule is created</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>the site id the schedule beloings to</td><tr>
</tbody>
</table>
<a name="public.data_alerts_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.data_alerts</dfn>:  Each record represents an alert. An alert is a predefined data conditions on a view, and if conditions are met all alert recipients get notified.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from creator_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from customized_view_id on this table to id on table, <a href="#public.customized_views_anchor">public.customized_views</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from workbook_id on this table to id on table, <a href="#public.workbooks_anchor">public.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>title</td><td>character varying</td><td>A string that describes the alert.</td><tr>
<tr class="field"><td>creator_id</td><td>integer</td><td>User id for user who created the alert. FK reference to users.id.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID for alert. FK reference to sites.id.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>A foreign key reference to the workbook.id.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>A foreign key reference to the view.id.</td><tr>
<tr class="field"><td>customized_view_id</td><td>integer</td><td>A foreign key reference to the customized.view.id.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>UUID for alert used in REST APIs.</td><tr>
<tr class="field"><td>data_specification</td><td>character varying</td><td>Platform-parsable blob that describes which data to track.</td><tr>
<tr class="field"><td>last_checked</td><td>timestamp without time zone</td><td>The last time at which the the alert was checked.</td><tr>
<tr class="field"><td>notification_interval_in_minutes</td><td>integer</td><td>The interval in minutes in which to send no more than one alert.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time when this row was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time when this row was last updated.</td><tr>
<tr class="field"><td>last_edited</td><td>timestamp without time zone</td><td>The time a user last edited this data alert.</td><tr>
<tr class="field"><td>suspend_state</td><td>integer</td><td>0: alert is not suspended, 1: alert was auto-suspended, 2: alert was manually suspended.</td><tr>
<tr class="field"><td>failure_count</td><td>integer</td><td>The number of consecutive times evaluating this alert failed.</td><tr>
<tr class="field"><td>device_type</td><td>integer</td><td>0: device type is default, 1: device type is desktop, 2: device type is tablet, 3: device type is phone.</td><tr>
<tr class="field"><td>public</td><td>boolean</td><td>Determines whether the alert is shared with other users</td><tr>
</tbody>
</table>
<a name="public.data_alerts_recipients_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.data_alerts_recipients</dfn>:  Each record represents the intent of recipient to be notified if an event is triggered.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from data_alert_id on this table to id on table, <a href="#public.data_alerts_anchor">public.data_alerts</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>recipient_id</td><td>integer</td><td>It references a user or group id.</td><tr>
<tr class="field"><td>data_alert_id</td><td>integer</td><td>A reference to data alert id.</td><tr>
<tr class="field"><td>recipient_type</td><td>character varying</td><td>A string that describes the recipient type, currently single user or group.</td><tr>
<tr class="field"><td>last_sent</td><td>timestamp without time zone</td><td>The last time at which the the alert was sent to the user.</td><tr>
<tr class="field"><td>last_state</td><td>boolean</td><td>Whether the condition evaluated to true or false for the user the last time it was checked.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time when this row was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time when this row was last updated.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the data alert recipient belongs to.</td><tr>
</tbody>
</table>
<a name="public.data_connections_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.data_connections</dfn>:  Describes various data sources that are included in either workbooks or datasources.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from credential_luid on this table to luid on table, <a href="#public.credentials_anchor">public.credentials</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>server</td><td>text</td><td>DNS server name to connect to.</td><tr>
<tr class="field"><td>dbclass</td><td>character varying</td><td>Type of data connection (ie mysql, postgres, sqlproxy etc).</td><tr>
<tr class="field"><td>port</td><td>integer</td><td>TCP port number of the connection (eg. 5432 for postgres).</td><tr>
<tr class="field"><td>username</td><td>text</td><td>Username to use when connecting.</td><tr>
<tr class="field"><td>password</td><td>boolean</td><td>True means password is embedded in owner (see owner_type and owner_id fields).</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>Unique identifier for this data_connection.</td><tr>
<tr class="field"><td>dbname</td><td>character varying</td><td>The database name to which the particular connection is linked.</td><tr>
<tr class="field"><td>tablename</td><td>character varying</td><td>The name of the table in the database that this connection connects to.</td><tr>
<tr class="field"><td>owner_type</td><td>character varying</td><td>One of "Datasource" or "Workbook". It is the type of object making the data connection.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The ID of the workbook or datasource that is creating the data connection.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this record was last updated.</td><tr>
<tr class="field"><td>caption</td><td>character varying</td><td>Friendly name of this connection as seen in the Desktop data pane.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to the site in which this data connection is contained.</td><tr>
<tr class="field"><td>keychain</td><td>text</td><td>Encode string in yaml format. An attribute bag that will match the embedded keychain connection this connection is associated with.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>The locally unique ID, which is intended for exposing externally by the server API. This is automatically generated.</td><tr>
<tr class="field"><td>has_extract</td><td>boolean</td><td>Indicates if the data connection is an extract.</td><tr>
<tr class="field"><td>datasource_id</td><td>integer</td><td>Reference to the Datasource that owns this data connection.</td><tr>
<tr class="field"><td>db_subclass</td><td>character varying</td><td>Subclass of the dbclass, for example, dbclass is webdata-direct, db_subclass is intuit-quickbook</td><tr>
<tr class="field"><td>authentication</td><td>character varying</td><td>When present, can be used to identify what authentication method is being used for the data connection</td><tr>
<tr class="field"><td>using_remote_query_agent</td><td>boolean</td><td>Whether the data connection needs to be proxied via a remote query agent (AKA Bridge Client)</td><tr>
<tr class="field"><td>query_tagging_enabled</td><td>boolean</td><td>Whether queries for this data connection should be tagged with information about their origin in Tableau.</td><tr>
<tr class="field"><td>credential_luid</td><td>uuid</td><td>The credential luid associated with the data connection, can be null</td><tr>
</tbody>
</table>
<a name="public.data_quality_indicators_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.data_quality_indicators</dfn>:  Table to store data quality indicators.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Auto increment primary key.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>Autogenerated luid for data quality indicator.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Id of the site where data quality indicator belongs.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>Id of user who created/updated data quality indicator.</td><tr>
<tr class="field"><td>user_display_name</td><td>character varying</td><td>Display name of user who created/updated data quality indicator.</td><tr>
<tr class="field"><td>content_id</td><td>integer</td><td>Id of content for which data quality indicator stored.</td><tr>
<tr class="field"><td>content_type</td><td>character varying</td><td>Type of content for which data quality indicator stored.</td><tr>
<tr class="field"><td>message</td><td>text</td><td>Message of data quality indicator.</td><tr>
<tr class="field"><td>data_quality_type</td><td>character varying</td><td>Type of data quality indicator.</td><tr>
<tr class="field"><td>is_active</td><td>boolean</td><td>Represents state of data quality indicator as true or false.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Timestamp when record is created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Timestamp when record is updated.</td><tr>
<tr class="field"><td>is_severe</td><td>boolean</td><td>indicates the if a data_quality_indicator is severe or not. True means severe otherwise not.</td><tr>
<tr class="field"><td>metadata</td><td>text</td><td>Metadata related to the data quality indicator</td><tr>
</tbody>
</table>
<a name="public.data_quality_triggers_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.data_quality_triggers</dfn>:  Table to store data quality triggers.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Auto increment primary key.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>Autogenerated luid for data quality trigger.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Id of the site where data quality trigger belongs.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>Id of user who created/updated data quality trigger.</td><tr>
<tr class="field"><td>user_display_name</td><td>character varying</td><td>Display name of user who created/updated data quality trigger.</td><tr>
<tr class="field"><td>content_id</td><td>integer</td><td>Id of content to which data quality trigger applies.</td><tr>
<tr class="field"><td>content_type</td><td>character varying</td><td>Type of content to which data quality trigger applies.</td><tr>
<tr class="field"><td>message</td><td>text</td><td>Message of data quality trigger.</td><tr>
<tr class="field"><td>trigger_type</td><td>character varying</td><td>Type of data quality trigger.</td><tr>
<tr class="field"><td>is_active</td><td>boolean</td><td>Indicates whether or not data quality trigger is active.</td><tr>
<tr class="field"><td>is_severe</td><td>boolean</td><td>Indicates whether or not data quality trigger is severe.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Timestamp when record is created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Timestamp when record is updated.</td><tr>
</tbody>
</table>
<a name="public.data_role_contents_association_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.data_role_contents_association</dfn>:  Represents the association between the data_role and other content types.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from data_role_id on this table to id on table, <a href="#public.data_roles_anchor">public.data_roles</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>data_role_id</td><td>integer</td><td>The data_role_id for the data_role entity.</td><tr>
<tr class="field"><td>content_type</td><td>text</td><td>Identifies the content-type which is associated with the data_role.</td><tr>
<tr class="field"><td>content_id</td><td>integer</td><td>content_id is the unique identifier for the corresponding content-type.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that the content belongs to</td><tr>
</tbody>
</table>
<a name="public.data_role_datasource_field_association_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.data_role_datasource_field_association</dfn>:  Represents the association between the data_role and the field on a datasource</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from published_datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from associator_user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site on which the datasource is published</td><tr>
<tr class="field"><td>published_datasource_id</td><td>integer</td><td>The id of the published datasource on the site</td><tr>
<tr class="field"><td>field_graph_id</td><td>text</td><td>The graph id of the field in the datasource</td><tr>
<tr class="field"><td>field_concept_key</td><td>text</td><td>field_concept_key is the unique identifier for the dataRole</td><tr>
<tr class="field"><td>associator_user_id</td><td>integer</td><td>associator_user_id is the unique identifier for the user who created the association</td><tr>
<tr class="field"><td>link_status</td><td>integer</td><td>link_status tells the current state of the association between the field and the dataRole</td><tr>
</tbody>
</table>
<a name="public.data_roles_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.data_roles</dfn>:  Each record represents an entry of Semantics Service data role metadata.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from project_id on this table to id on table, <a href="#public.projects_anchor">public.projects</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the data role metadata record.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The name of the data role.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The user id of the owner/publisher of the data role.</td><tr>
<tr class="field"><td>project_id</td><td>integer</td><td>The id of the project that this data role lives under.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this data role is associated with.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp when the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The timestamp when the record was last updated.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>The description of the data role.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>An identifier that is unique in combination with the site_id.</td><tr>
</tbody>
</table>
<a name="public.data_update_job_artifacts_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.data_update_job_artifacts</dfn>:  Information about files used by data update jobs.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres and primary key.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Id of the site to which the artifact belongs to.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>A unique generated name given to the file.</td><tr>
<tr class="field"><td>file_type</td><td>integer</td><td>The type of file represented by an int.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>Size of the file in bytes.</td><tr>
<tr class="field"><td>state</td><td>integer</td><td>State of the file in SOS. Used to help with SOS reconciliation.</td><tr>
<tr class="field"><td>job_id</td><td>integer</td><td>The ID of the Hyper Data Update job that the artifact belongs to.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Timestamp when this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Same as created_at.</td><tr>
</tbody>
</table>
<a name="public.database_asset_events_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.database_asset_events</dfn>:  Used to store database_asset events stream.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>database_asset_id</td><td>integer</td><td>database_asset ID.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID.</td><tr>
<tr class="field"><td>event_created_at</td><td>timestamp without time zone</td><td>Timestamp indicating when the record was inserted.</td><tr>
<tr class="field"><td>event_type</td><td>smallint</td><td>Event type to differentiate between insert, update, delete.</td><tr>
</tbody>
</table>
<a name="public.database_assets_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.database_assets</dfn>:  Each record represents a database that exists on Tableau Server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from certifier_user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from grouped_parent_id on this table to id on table, <a href="#public.database_assets_anchor">public.database_assets</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the database record.</td><tr>
<tr class="field"><td>connection_type</td><td>character varying</td><td>Connection type for the database record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the database.</td><tr>
<tr class="field"><td>port</td><td>integer</td><td>The name of the database port.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier for the database.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this database is associated with.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>The description of the database.</td><tr>
<tr class="field"><td>controlled_permissions_enabled</td><td>boolean</td><td>Whether controlled permissions are enabled for the database</td><tr>
<tr class="field"><td>contact_id</td><td>integer</td><td>The contact for this database.</td><tr>
<tr class="field"><td>contact_type</td><td>character varying</td><td>The contact type (user or group) for this database.</td><tr>
<tr class="field"><td>type</td><td>character varying</td><td>Type (Database, File, WebDataConnector) for the database record.</td><tr>
<tr class="field"><td>file_path</td><td>text</td><td>Path to file.</td><tr>
<tr class="field"><td>is_embedded</td><td>boolean</td><td>Whether file is embedded (e.g., packaged in a twbx/tflx) or not.</td><tr>
<tr class="field"><td>connector_url</td><td>text</td><td>The connector url for a web data connector.</td><tr>
<tr class="field"><td>host_name</td><td>text</td><td>The database server host name.</td><tr>
<tr class="field"><td>provider</td><td>character varying</td><td>Provider for a Cloud File.</td><tr>
<tr class="field"><td>file_extension</td><td>character varying</td><td>File Extension for a Cloud File.</td><tr>
<tr class="field"><td>mime_type</td><td>character varying</td><td>mime type for a Cloud File.</td><tr>
<tr class="field"><td>file_id</td><td>character varying</td><td>File Id for a Cloud File.</td><tr>
<tr class="field"><td>request_url</td><td>text</td><td>Request URL for a Cloud File.</td><tr>
<tr class="field"><td>is_certified</td><td>boolean</td><td>Whether this database is certified.</td><tr>
<tr class="field"><td>certification_note</td><td>text</td><td>Certification note for this database.</td><tr>
<tr class="field"><td>certifier_user_id</td><td>integer</td><td>Certifier user_id for this database.</td><tr>
<tr class="field"><td>certifier_details</td><td>text</td><td>Certifier details for this database.</td><tr>
<tr class="field"><td>source_type</td><td>character varying</td><td>Type of the database source, if this database is embedded.</td><tr>
<tr class="field"><td>source_id</td><td>integer</td><td>ID of the database source, if this database is embedded.</td><tr>
<tr class="field"><td>internal_identifier</td><td>text</td><td>A unique identifier for an embedded database internal to its parent content item.</td><tr>
<tr class="field"><td>extended_connection_type</td><td>character varying</td><td>optional - type of connection - some dbs require it - for example SingleNode or MultiNode for SAP HANA</td><tr>
<tr class="field"><td>service</td><td>character varying</td><td>optional - some dbs optionally have it - for example Snowflake has option roles which we store in this field</td><tr>
<tr class="field"><td>duplicate_id</td><td>integer</td><td>If not null, id of database that is a duplicate of this one.</td><tr>
<tr class="field"><td>is_tombstoned</td><td>boolean</td><td>Tombstoned databases are "soft deleted" because they have been grouped with other databases. They can be ungrouped to remove this soft deletion.</td><tr>
<tr class="field"><td>grouped_parent_id</td><td>integer</td><td>ID in database_assets table of database this tombstoned database was grouped into.</td><tr>
<tr class="field"><td>is_grouped_parent</td><td>boolean</td><td>True if this database is the result of grouping other databases.</td><tr>
<tr class="field"><td>source_disconnected_at</td><td>date</td><td>The date source was checked and was found to be disconnected from this database asset.</td><tr>
<tr class="field"><td>tombstoned_reason</td><td>character varying</td><td>The reason the database was tombstoned.</td><tr>
</tbody>
</table>
<a name="public.datasource_events_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.datasource_events</dfn>:  Used to store datasource events stream.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>datasource_id</td><td>integer</td><td>Datasource ID.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID.</td><tr>
<tr class="field"><td>event_time</td><td>timestamp without time zone</td><td>Timestamp indicating when the record was inserted.</td><tr>
<tr class="field"><td>event_type</td><td>integer</td><td>Event type to differentiate between insert, update, delete.</td><tr>
</tbody>
</table>
<a name="public.datasource_fields_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.datasource_fields</dfn>:  Describes datasource fields.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the datasource field record.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The name of the datasource field.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>The description of the datasource field.</td><tr>
<tr class="field"><td>datasource_id</td><td>integer</td><td>The id of the datasource that this field is associated with.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site id.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
</tbody>
</table>
<a name="public.datasource_metrics_aggregations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.datasource_metrics_aggregations</dfn>:  Each record represents a partial aggregation of analytics for a given datasource in a given time interval.  It is often necessary to sum across multiple rows to find a total for a given time interval.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>datasource_id</td><td>integer</td><td>A foreign key reference to the datasource.</td><tr>
<tr class="field"><td>day_index</td><td>integer</td><td>Records what day of the month the analytics are aggregated over.  When 0, the aggregation is for the month and year as designated by month_index and year_index.</td><tr>
<tr class="field"><td>month_index</td><td>integer</td><td>Records what month of the year the analytics are aggregated over.  When 0, the aggregation is for the year as designated by year_index.</td><tr>
<tr class="field"><td>year_index</td><td>integer</td><td>Records what year the analytics are aggregated over</td><tr>
<tr class="field"><td>view_count</td><td>integer</td><td>Records the number of times a datasource was viewed in the given time interval.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the datasource metrics aggregation belong to.</td><tr>
</tbody>
</table>
<a name="public.datasource_refresh_properties_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.datasource_refresh_properties</dfn>:  Extension of datasources table for refresh properties (Online). This is 1-0/1 relationship to datasources table. It is
 a separate table since it contains Online-specific properties.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from remote_agent_id on this table to id on table, <a href="#public.remote_agents_anchor">public.remote_agents</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Datasource ID from datasources table. it is 1-0/1 relationship to datasources table.</td><tr>
<tr class="field"><td>refresh_mode</td><td>character varying</td><td>Specifies the mode of datasource refresh</td><tr>
<tr class="field"><td>remote_agent_id</td><td>integer</td><td>The associated remote agent ID responsible for data source refresh.</td><tr>
<tr class="field"><td>schedules</td><td>json</td><td>Array of DatasourceRefreshSchedule objects in JSON format.</td><tr>
<tr class="field"><td>last_refresh_error_client_data</td><td>character varying</td><td>Information about the last refresh error for the purpose of reconstructing the client view of the errors.</td><tr>
<tr class="field"><td>remote_agent_reservation_id</td><td>character varying</td><td>Unique string, e.g. GUID, that represents a reservation that a remote agent has yet to claim.</td><tr>
<tr class="field"><td>expected_refresh_time</td><td>timestamp with time zone</td><td>Time at which the schedule is expected to refresh in UTC</td><tr>
<tr class="field"><td>expected_refresh_duration</td><td>integer</td><td>Time duration in seconds after which a scheduled extract refresh is expected to complete</td><tr>
<tr class="field"><td>next_check_time</td><td>timestamp with time zone</td><td>The next check time in UTC when the server checks if the linked bridge client is actively running or other interesting scenarios that might arise in the future</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that the datasource belongs to</td><tr>
</tbody>
</table>
<a name="public.datasource_versions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.datasource_versions</dfn>:  Datasource versions saved on server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id of a version. Primary key.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Reference to entury in sites table. Indicates the site to which this datasource version belongs to.</td><tr>
<tr class="field"><td>datasource_id</td><td>integer</td><td>A foreign key to the datasources table. Reference to Datasource.</td><tr>
<tr class="field"><td>publisher_id</td><td>integer</td><td>Reference to user in site users table. User who published this version. Can point to deleted user.</td><tr>
<tr class="field"><td>version_number</td><td>integer</td><td>The version number.</td><tr>
<tr class="field"><td>published_at</td><td>timestamp without time zone</td><td>The time when this version was initially published. Copied from datasource record last_updated field at the time of being overwritten.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>The size, in bytes, of this version of datasource.</td><tr>
<tr class="field"><td>content_key</td><td>character varying</td><td>Key of the datasource as string</td><tr>
<tr class="field"><td>sos_type</td><td>character varying</td><td>The SOS data type under which this version document is stored, or null if it is not stored in SOS.</td><tr>
</tbody>
</table>
<a name="public.datasources_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.datasources</dfn>:  Records all Published datasources on server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from modified_by_user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from project_id on this table to id on table, <a href="#public.projects_anchor">public.projects</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the published datasource.</td><tr>
<tr class="field"><td>repository_url</td><td>text</td><td>Uniquely identifies a datasource. More or less consists of a slightly modified name, but not totally obviously, especially in the presence of non-ASCII characters. Used in URLs meant to access this datasource.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The user ID of the owner/uploader of the datasource.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this record was last updated.</td><tr>
<tr class="field"><td>project_id</td><td>integer</td><td>The associated project ID where the datasource was published.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>The size in bytes of the datasource.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking". Don't set this or mess with it, it's all handled automatically.</td><tr>
<tr class="field"><td>state</td><td>character varying</td><td>One of "active" or NULL.</td><tr>
<tr class="field"><td>db_class</td><td>text</td><td>The origin of the data. It's often a database, but the concept is a bit more general than that. For example, "oracle" and "db2" are possibilities, but so are "excel" and "dataengine" (and many more).</td><tr>
<tr class="field"><td>db_name</td><td>text</td><td>The name of the database associated with the published datasource. But because data sources are more general than databases, in some instances, this might actually be a file path, or blank.</td><tr>
<tr class="field"><td>table_name</td><td>text</td><td>The name of the table associated with the published datasource. But, because data sources are more general than databases, this might, for example, actually refer to an Excel worksheet, or be blank.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to the site with which this datasource is associated.</td><tr>
<tr class="field"><td>revision</td><td>character varying</td><td>Increments each time a new version of the datasource is published.</td><tr>
<tr class="field"><td>embedded</td><td>text</td><td>An encrypted keychain holding any credentials stored with the datasource.</td><tr>
<tr class="field"><td>incrementable_extracts</td><td>boolean</td><td>True or false as to whether incrementable extracts are allowed for the published datasource.</td><tr>
<tr class="field"><td>refreshable_extracts</td><td>boolean</td><td>True or false as to whether refreshable extracts are avaliable for the published datasource.</td><tr>
<tr class="field"><td>data_engine_extracts</td><td>boolean</td><td>True means the data was supplied in the form of a Tableau data extract, though the original source of the data may be known to reside elsewhere.</td><tr>
<tr class="field"><td>extracts_refreshed_at</td><td>timestamp without time zone</td><td>Records the time of the last full extract refresh.</td><tr>
<tr class="field"><td>first_published_at</td><td>timestamp without time zone</td><td>When the first publication of this datasource occurred.</td><tr>
<tr class="field"><td>connectable</td><td>boolean</td><td>If this datasource was published using a release of the software where connecting to datasources through the Data Server was supported (post 7.0).</td><tr>
<tr class="field"><td>is_hierarchical</td><td>boolean</td><td>Set to true if the source is a hierarchical (cube) database.</td><tr>
<tr class="field"><td>extracts_incremented_at</td><td>timestamp without time zone</td><td>Records the time of the last incremental extract refresh.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>Unique identifier.</td><tr>
<tr class="field"><td>document_version</td><td>character varying</td><td>The internal version of the .tds file associated with this record.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>A textual description of the datasource.</td><tr>
<tr class="field"><td>content_version</td><td>integer</td><td>$Version number of the datasource. updated on each publish</td><tr>
<tr class="field"><td>parent_workbook_id</td><td>integer</td><td>Is set to null for published datasources or else references the workbook id that contains this datasource.</td><tr>
<tr class="field"><td>hidden_name</td><td>character varying</td><td>Auto-generated name for the datasource extracted from the twb/tds file.</td><tr>
<tr class="field"><td>last_published_at</td><td>timestamp without time zone</td><td>Time that the user last published this datasource to server. For datasources that were last published before this column existed, the value will be null.</td><tr>
<tr class="field"><td>data_id</td><td>character varying</td><td>Unique ID used to identify the datasource data.</td><tr>
<tr class="field"><td>reduced_data_id</td><td>character varying</td><td>Unique ID used to identify the reduced datasource data.</td><tr>
<tr class="field"><td>remote_query_agent_id</td><td>integer</td><td>If present, the agent to remote queries to.</td><tr>
<tr class="field"><td>using_remote_query_agent</td><td>boolean</td><td>Whether the queries to this data source may be proxied via a remote agent.</td><tr>
<tr class="field"><td>is_certified</td><td>boolean</td><td>Whether or not this datasource is certified.</td><tr>
<tr class="field"><td>certification_note</td><td>text</td><td>Explanation for the certification status of this datasource.</td><tr>
<tr class="field"><td>certifier_user_id</td><td>integer</td><td>The user id of the user that certified this datasource, or null if it is not certified.</td><tr>
<tr class="field"><td>certifier_details</td><td>text</td><td>A snapshot of user information that we want to retain even when the user is deleted.</td><tr>
<tr class="field"><td>extract_encryption_state</td><td>smallint</td><td>If not null, encryption state of the extracts. null or 0 - unencrypted, 1 - encrypted, 2 - pending encryption, 3 - pending decryption, 5 - pending rekey</td><tr>
<tr class="field"><td>nlp_setting</td><td>text</td><td>Setting to enable/disable nlp feature on this datasource</td><tr>
<tr class="field"><td>extract_creation_pending</td><td>smallint</td><td>null or 0 - there is not extract creation in progress, 1 - there is an extract creation in progress</td><tr>
<tr class="field"><td>parent_type</td><td>text</td><td>Indicates the parent_type of the datasource (datarole, workbook, null)</td><tr>
<tr class="field"><td>nlp_setting_new</td><td>text</td><td>Setting to specify whether a datasource should have Ask Data enabled, disabled, or set to the site default. The site default value was added in 2019.4. This column is kept in sync with the old nlp_setting column until we can deprecate nlp_setting in 2020.3</td><tr>
<tr class="field"><td>modified_by_user_id</td><td>integer</td><td>The user who last modified and published this datasource to server or saved the datasource during web edit. For datasource that were last published before this column existed, the value will be same as owner_id.</td><tr>
<tr class="field"><td>separated_data_id</td><td>character varying</td><td>Unique ID used to identify the datasource data without the tds file.</td><tr>
<tr class="field"><td>tds_luid</td><td>text</td><td>Unique ID to reference the tds file in the TDS Service.</td><tr>
<tr class="field"><td>ask_data_setting</td><td>character varying</td><td>Setting to enable/disable Ask Data feature</td><tr>
<tr class="field"><td>ask_data_indexing</td><td>character varying</td><td>Data source indexing setting for Ask Data</td><tr>
<tr class="field"><td>ask_data_curator_feedback</td><td>character varying</td><td>Setting to enable/disable Ask Data feedback to curator</td><tr>
<tr class="field"><td>separated_reduced_data_id</td><td>character varying</td><td>Unused column, should be removed next deployment</td><tr>
<tr class="field"><td>extract_storage_format</td><td>smallint</td><td>How extracts for this data source are stored. NULL means no extracts or old-style extract folder. 0 means no extracts. 1 means old-style extract folder. 2 means new-style individual Hyper and TDE files in file store.</td><tr>
<tr class="field"><td>ask_data_indexing_new</td><td>character varying</td><td>Data source indexing setting for Ask Data to use with lenses</td><tr>
</tbody>
</table>
<a name="public.desktop_reporting_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.desktop_reporting</dfn>:  Each record represents a Tableau Desktop usage report.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id of the report. Primary key.</td><tr>
<tr class="field"><td>app_version</td><td>character varying</td><td>Tableau product version.</td><tr>
<tr class="field"><td>email</td><td>character varying</td><td>Registered email address.</td><tr>
<tr class="field"><td>expiration_date</td><td>date</td><td>Expiration date of active key. NULL means permanent.</td><tr>
<tr class="field"><td>first_name</td><td>character varying</td><td>First Name.</td><tr>
<tr class="field"><td>last_name</td><td>character varying</td><td>Last Name.</td><tr>
<tr class="field"><td>computer_user_id</td><td>character varying</td><td>Computer user or login id.</td><tr>
<tr class="field"><td>host_name</td><td>character varying</td><td>Computer host name.</td><tr>
<tr class="field"><td>department</td><td>character varying</td><td>Department.</td><tr>
<tr class="field"><td>company</td><td>character varying</td><td>Company or organization.</td><tr>
<tr class="field"><td>os_version</td><td>character varying</td><td>OS version.</td><tr>
<tr class="field"><td>os_architecture</td><td>character varying</td><td>OS architecture.</td><tr>
<tr class="field"><td>registration_date</td><td>timestamp without time zone</td><td>Date active key was registered.</td><tr>
<tr class="field"><td>last_report_date</td><td>timestamp without time zone</td><td>Last report for this Desktop.</td><tr>
<tr class="field"><td>maintenance_expiration</td><td>date</td><td>Maintenance expiration of in use product key.</td><tr>
<tr class="field"><td>product_name</td><td>character varying</td><td>Product name.</td><tr>
<tr class="field"><td>edition</td><td>character varying</td><td>Tableau Desktop Edition. E.g Professional or Standard.</td><tr>
<tr class="field"><td>type</td><td>character varying</td><td>Type of key. Trial or Perpetual.</td><tr>
<tr class="field"><td>product_keys</td><td>character varying</td><td>Semicolon delimited product keys. Characters beyond 9 replaced with X.</td><tr>
<tr class="field"><td>serial_number</td><td>character varying</td><td>Computer serial number.</td><tr>
<tr class="field"><td>mac_address</td><td>character varying</td><td>Network card MAC address.</td><tr>
<tr class="field"><td>domain</td><td>character varying</td><td>Computer Active Directory domain.</td><tr>
<tr class="field"><td>unique_machine_number</td><td>character varying</td><td>Unique Machine Number.  A string uniquely identifying a computer.</td><tr>
<tr class="field"><td>action</td><td>character varying</td><td>Action: Activate, Use or Return.</td><tr>
<tr class="field"><td>action_key</td><td>character varying</td><td>Key being used activated or returned.</td><tr>
</tbody>
</table>
<a name="public.domains_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.domains</dfn>:  Records represent either an Active Directory domain or an authenticate system.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name is either "local" or the name of some Active Directory group.</td><tr>
<tr class="field"><td>short_name</td><td>character varying</td><td>An alternate shorter form of the name</td><tr>
<tr class="field"><td>active</td><td>boolean</td><td>Indicates if the domain is active or not.</td><tr>
<tr class="field"><td>family</td><td>character varying</td><td>Either local or ActiveDirectory.</td><tr>
</tbody>
</table>
<a name="public.draft_metadata_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.draft_metadata</dfn>:  Each record represents a workbook draft per site, per project per user.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>draft_luid</td><td>uuid</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Unique identifier of the site</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>User friendly name for the draft</td><tr>
<tr class="field"><td>user_luid</td><td>uuid</td><td>User luid of the owner of the workbook draft</td><tr>
<tr class="field"><td>project_luid</td><td>uuid</td><td>Unique identifier of the project where draft is saved</td><tr>
<tr class="field"><td>parent_luid</td><td>uuid</td><td>Unique identifier of the content from which the draft is created. For new draft this value will be null</td><tr>
<tr class="field"><td>parent_revision_id</td><td>character varying</td><td>Revision id for the content from which the draft is created. For new draft this value will be null</td><tr>
<tr class="field"><td>thumbnail_url</td><td>character varying</td><td>Thumbnail url for the draft</td><tr>
<tr class="field"><td>snapshot_timeline_id</td><td>character varying</td><td>Timeline id of vizqlserver snapshot</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Draft creation timestamp</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Draft modified timestamp</td><tr>
</tbody>
</table>
<a name="public.edge_pool_domain_mappings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.edge_pool_domain_mappings</dfn>:  Each record represents a resource URI managed by edge pool.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from pool_id, site_id on this table to pool_id, site_id on table, <a href="#public.edge_pool_metadata_anchor">public.edge_pool_metadata</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>pool_id</td><td>uuid</td><td>The associated edge pool within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The associated site.</td><tr>
<tr class="field"><td>domain</td><td>character varying</td><td>The fully qualified domain or domain wildcard mapped to edge pool.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created, in UTC.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated, in UTC.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Luid of the site</td><tr>
</tbody>
</table>
<a name="public.edge_pool_metadata_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.edge_pool_metadata</dfn>:  Each record represents an edge pool.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>pool_id</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The associated site.</td><tr>
<tr class="field"><td>display_name</td><td>character varying</td><td>The use-created display name.</td><tr>
<tr class="field"><td>pool_type</td><td>character varying</td><td>The type of the pool (ex: User, Default).</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created, in UTC.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated, in UTC.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Luid of the site</td><tr>
</tbody>
</table>
<a name="public.extensions_block_list_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extensions_block_list</dfn>:  Table which stores the block list of extensions on this server</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>luid</td><td>uuid</td><td>The luid which uniquely identifies the extensions blocklist row.</td><tr>
<tr class="field"><td>url</td><td>text</td><td>The url of extension which is blocked.</td><tr>
<tr class="field"><td>active</td><td>boolean</td><td>The check to see if the current entry is active or archived.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Created date for this record.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Modified date for this record.</td><tr>
</tbody>
</table>
<a name="public.extensions_events_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extensions_events</dfn>:  Table which stores the events of referenced extensions calculation service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>luid</td><td>uuid</td><td>The luid which uniquely identifies the extensions events row.</td><tr>
<tr class="field"><td>workbook_luid</td><td>uuid</td><td>The luid which uniquely identifies the workbook.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The luid which uniquely identifies the site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id which uniquely identifies the site.</td><tr>
<tr class="field"><td>status</td><td>integer</td><td>The status of the current task.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Created date for this record.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Modified date for this record.</td><tr>
</tbody>
</table>
<a name="public.extensions_instances_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extensions_instances</dfn>:  Table which stores referenced extensions information calculated from across the workbooks.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>luid</td><td>uuid</td><td>The luid which uniquely identifies the extensions instance row.</td><tr>
<tr class="field"><td>extension_luid</td><td>uuid</td><td>The luid which uniquely identifies the extension.</td><tr>
<tr class="field"><td>workbook_luid</td><td>uuid</td><td>The luid which uniquely identifies the workbook.</td><tr>
<tr class="field"><td>view_luid</td><td>uuid</td><td>The luid which uniquely identifies the view.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The luid which uniquely identifies the site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id which uniquely identifies the site.</td><tr>
<tr class="field"><td>active</td><td>boolean</td><td>The check to determine if the current entry is active or archived.</td><tr>
<tr class="field"><td>count</td><td>integer</td><td>The count of extensions in views of a given workbook</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Created date for this record.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Modified date for this record.</td><tr>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this entry.</td><tr>
</tbody>
</table>
<a name="public.extensions_metadata_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extensions_metadata</dfn>:  Table which stores Metadata of Extensions.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>luid</td><td>uuid</td><td>The luid which uniquely identifies the extensions metadata row.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The luid which identifies the site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id which identifies the site.</td><tr>
<tr class="field"><td>extension_id</td><td>text</td><td>The extension id defined in the manifest.</td><tr>
<tr class="field"><td>type</td><td>text</td><td>The type of extension.</td><tr>
<tr class="field"><td>version</td><td>text</td><td>The version of extension.</td><tr>
<tr class="field"><td>manifest_version</td><td>text</td><td>The version of the manifest of the extension.</td><tr>
<tr class="field"><td>min_api_version</td><td>text</td><td>The minimum api version needed for the extension.</td><tr>
<tr class="field"><td>default_locale</td><td>text</td><td>The default locale of the extension.</td><tr>
<tr class="field"><td>name_locale_value</td><td>text</td><td>The name of the extension.</td><tr>
<tr class="field"><td>name_locale_resourceid</td><td>text</td><td>The resource id for the name of the extension.</td><tr>
<tr class="field"><td>desc_locale_value</td><td>text</td><td>The description of the extension.</td><tr>
<tr class="field"><td>dec_locale_resourceid</td><td>text</td><td>The resource id for the description of the extension.</td><tr>
<tr class="field"><td>resources</td><td>text</td><td>The localization resources for the extension.</td><tr>
<tr class="field"><td>permissions</td><td>text</td><td>The permissions defined in the manifest of the extension.</td><tr>
<tr class="field"><td>author_name</td><td>text</td><td>The name of the author of extension.</td><tr>
<tr class="field"><td>author_email</td><td>text</td><td>The email of the author of extension.</td><tr>
<tr class="field"><td>author_org</td><td>text</td><td>The organization of the author of extension.</td><tr>
<tr class="field"><td>author_website</td><td>text</td><td>The website of the author of extension.</td><tr>
<tr class="field"><td>url</td><td>text</td><td>The url of extension.</td><tr>
<tr class="field"><td>icon</td><td>text</td><td>The icon of extension.</td><tr>
<tr class="field"><td>installed</td><td>boolean</td><td>The check to see if the extension is installed.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Created date for this record.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Modified date for this record.</td><tr>
<tr class="field"><td>id</td><td>bigint</td><td>The id of the extension from the manifest.</td><tr>
</tbody>
</table>
<a name="public.extensions_safe_list_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extensions_safe_list</dfn>:  Table which stores safe list of extensions that are configured for a given site.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The luid which uniquely identifies the site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id which uniquely identifies the site.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>The luid which uniquely identifies the extensions safe list row.</td><tr>
<tr class="field"><td>url</td><td>text</td><td>The url of the safe list extension.</td><tr>
<tr class="field"><td>allow_full_data</td><td>boolean</td><td>The full data access permission of an extension.</td><tr>
<tr class="field"><td>prompt_needed</td><td>boolean</td><td>The prompt needed setting of an extension.</td><tr>
<tr class="field"><td>active</td><td>boolean</td><td>The check to determine if the current entry is active or archived.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Created date for this record.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Modified date for this record.</td><tr>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this entry.</td><tr>
</tbody>
</table>
<a name="public.extensions_site_settings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extensions_site_settings</dfn>:  Table which stores the site specific settings for extensions</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The luid which uniquely identifies the site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id which uniquely identifies the site.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>The luid which uniquely identifies the extensions settings row.</td><tr>
<tr class="field"><td>extensions_enabled</td><td>boolean</td><td>The check to see if the extensions are enabled on the site.</td><tr>
<tr class="field"><td>default_setting</td><td>boolean</td><td>The check to see if the default settings are enable for extensions</td><tr>
<tr class="field"><td>active</td><td>boolean</td><td>The check to determine if the current entry is active or archived.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Modified date for this record.</td><tr>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this entry.</td><tr>
<tr class="field"><td>allow_sandboxed</td><td>boolean</td><td>Whether sandboxed extensions are allowed to run</td><tr>
</tbody>
</table>
<a name="public.external_service_connections_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.external_service_connections</dfn>:  Table which stores the site specific settings for external service connections</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id which uniquely identifies the connection.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>The luid which uniquely identifies the connection, for security purpose.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site_id which uniquely identifies the site.</td><tr>
<tr class="field"><td>connection_type</td><td>text</td><td>The connection_type identifies the external service type.</td><tr>
<tr class="field"><td>host</td><td>text</td><td>The host identifies host name or ip address of the external server</td><tr>
<tr class="field"><td>port</td><td>integer</td><td>The port identifies port of the external service.</td><tr>
<tr class="field"><td>is_auth_enabled</td><td>boolean</td><td>The is_auth_enabled identifies whether authentication is enabled.</td><tr>
<tr class="field"><td>username</td><td>text</td><td>The username for authentication of the external service, if is_auth_enabled.</td><tr>
<tr class="field"><td>pwd</td><td>text</td><td>The encrypted password for authentication of the external service, if is_auth_enabled.</td><tr>
<tr class="field"><td>is_ssl_enabled</td><td>boolean</td><td>The is_ssl_enabled identifies whether SSL is enabled for the external service.</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>The asset_key_id which uniquely identifies the asset key with which secrets in this row are encrypted</td><tr>
<tr class="field"><td>connection_name</td><td>character varying</td><td>unique name for the connection</td><tr>
</tbody>
</table>
<a name="public.external_service_site_settings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.external_service_site_settings</dfn>:  Table which stores the site level settings for external services</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id which uniquely identifies the site setting.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site_id which uniquely identifies the site.</td><tr>
<tr class="field"><td>extsvc_enabled</td><td>boolean</td><td>The extsvc_enabled identifies whether external service is enabled on certain site.</td><tr>
<tr class="field"><td>time_out</td><td>integer</td><td>The time_out identifies the time out value when connect to external service.</td><tr>
</tbody>
</table>
<a name="public.extract_operations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extract_operations</dfn>:  Each record represents an extract create operation on a Tableau workbook.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the extract operation record.</td><tr>
<tr class="field"><td>job_id</td><td>integer</td><td>The background job id for this opeartion.</td><tr>
<tr class="field"><td>session_id</td><td>character varying</td><td>The session identifier.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>The ID of the workbook associated with this operation. It is null when this operation is for a new workbook.</td><tr>
<tr class="field"><td>operation_data</td><td>json</td><td>The data sources to create extracts with json format.</td><tr>
<tr class="field"><td>document_data_id</td><td>character varying</td><td>The identifier for the workbook file data associated with this operation.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The user ID of the owner of the operation.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site associated with this operation.</td><tr>
<tr class="field"><td>embedded</td><td>text</td><td>An encrypted keychain holding any credentials stored with the workbook.</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>The asset encryption key used to encrypt the keychain in the embedded column.</td><tr>
<tr class="field"><td>status</td><td>integer</td><td>The status of the operation.</td><tr>
<tr class="field"><td>error_message</td><td>text</td><td>Store the error message of the operation.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this record was last updated.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>extract_id</td><td>integer</td><td>ID of the extract record used by this operation.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Version of the database record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique identifier of the extract operation.</td><tr>
</tbody>
</table>
<a name="public.extract_service_commands_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extract_service_commands</dfn>:  Table which stores the extract commands for extract service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The id which uniquely identifies row in the table</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>The luid of record in the table</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp for creating the extract command</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The timestamp for updating the extract command</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to the site to where the extract command exists.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Extract command site luid</td><tr>
<tr class="field"><td>owner_luid</td><td>uuid</td><td>Extract command owner luid</td><tr>
<tr class="field"><td>duration</td><td>bigint</td><td>Duration of extract command execution time</td><tr>
<tr class="field"><td>status</td><td>character varying</td><td>Status of extract command</td><tr>
<tr class="field"><td>message</td><td>text</td><td>Message of extract command</td><tr>
<tr class="field"><td>execute_node</td><td>uuid</td><td>Which node execute the extract command</td><tr>
<tr class="field"><td>resource_type</td><td>character varying</td><td>Extract command for what extractable resource type</td><tr>
<tr class="field"><td>operation</td><td>character varying</td><td>Extract command operation</td><tr>
<tr class="field"><td>starting_items</td><td>text</td><td>Extract command starting items</td><tr>
<tr class="field"><td>transaction_level</td><td>character varying</td><td>Extract command transaction level</td><tr>
<tr class="field"><td>extract_id</td><td>uuid</td><td>Extract command operate on extract id</td><tr>
<tr class="field"><td>result_version</td><td>integer</td><td>Extract command result version</td><tr>
<tr class="field"><td>resource_id</td><td>character varying</td><td>Extract command for which extractable resource id</td><tr>
<tr class="field"><td>caller</td><td>character varying</td><td>Which service issued the command</td><tr>
</tbody>
</table>
<a name="public.extract_service_extracts_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extract_service_extracts</dfn>:  Table which stores the extracts for extract service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The id which uniquely identifies row in the table</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>The luid of record in the table</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp for creating the extract</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The timestamp for updating the extract</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to the site to where the extracts exists.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Extract site luid.</td><tr>
<tr class="field"><td>owner_luid</td><td>uuid</td><td>Extract owner luid</td><tr>
<tr class="field"><td>latest_version</td><td>integer</td><td>Latest version of extract result for the extract</td><tr>
</tbody>
</table>
<a name="public.extract_service_object_queue_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extract_service_object_queue</dfn>:  Table which stores the object queue for extract service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The id which uniquely identifies row in the table</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp for creating the object queue</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The timestamp for updating the object queue</td><tr>
<tr class="field"><td>object_type</td><td>character varying</td><td>The object type of record in the table</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to the site to where the objects exists.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Object site luid.</td><tr>
<tr class="field"><td>object_id</td><td>character varying</td><td>The object id of record in the table</td><tr>
</tbody>
</table>
<a name="public.extract_service_object_queue_element_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extract_service_object_queue_element</dfn>:  Table which stores the object queue for extract service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from object_queue_id on this table to id on table, <a href="#public.extract_service_object_queue_anchor">public.extract_service_object_queue</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The id which uniquely identifies row in the table</td><tr>
<tr class="field"><td>payload_luid</td><td>uuid</td><td>The payload luid of record in the table</td><tr>
<tr class="field"><td>payload</td><td>text</td><td>The payload content of record in the table</td><tr>
<tr class="field"><td>sequence</td><td>integer</td><td>The element sequence in queue of record in the table</td><tr>
<tr class="field"><td>object_queue_id</td><td>bigint</td><td>The queue id of record in the table</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to the site to where the elements exists.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Element site luid.</td><tr>
</tbody>
</table>
<a name="public.extract_service_results_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extract_service_results</dfn>:  Table which stores the extract results for extract service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from command_id on this table to id on table, <a href="#public.extract_service_commands_anchor">public.extract_service_commands</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from extract_id on this table to id on table, <a href="#public.extract_service_extracts_anchor">public.extract_service_extracts</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The id which uniquely identifies row in the table</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The timestamp for creating the extract command</td><tr>
<tr class="field"><td>extract_id</td><td>bigint</td><td>A foreign key reference to the extract</td><tr>
<tr class="field"><td>command_id</td><td>bigint</td><td>A foreign key reference to the extract command</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to the site to where the extract command exists.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Extract result site luid</td><tr>
<tr class="field"><td>sos_data_id</td><td>character varying</td><td>SOS data id of extract result</td><tr>
<tr class="field"><td>version</td><td>integer</td><td>Result version of extract</td><tr>
<tr class="field"><td>relative_path</td><td>character varying</td><td>Relative path of result extract file.</td><tr>
<tr class="field"><td>file_size</td><td>bigint</td><td>Extracted file size</td><tr>
<tr class="field"><td>check_sum</td><td>character</td><td>Extracted file size</td><tr>
<tr class="field"><td>encryption_key_id</td><td>text</td><td>Encryption key id for this extract result</td><tr>
</tbody>
</table>
<a name="public.extract_sessions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extract_sessions</dfn>:  Extracts that have active vizql sessions.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>extract_id</td><td>integer</td><td>Foreign key reference to the extracts table.</td><tr>
<tr class="field"><td>session_guid</td><td>character varying</td><td>Vizql session identifier.</td><tr>
<tr class="field"><td>session_type</td><td>character varying</td><td>One of "Workbook" or "Datasource"</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Date when extract session was created.</td><tr>
<tr class="field"><td>worker_name</td><td>character varying</td><td>Worker on which extract session was created.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the extract session.</td><tr>
</tbody>
</table>
<a name="public.extracts_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.extracts</dfn>:  Each record corresponds to a directory that contains one or more extract files associated with either a workbook or datasource.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from workbook_id on this table to id on table, <a href="#public.workbooks_anchor">public.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>If the extracts are associated with a workbook, then this is a foreign key link to that workbook, otherwise it is NULL.</td><tr>
<tr class="field"><td>descriptor</td><td>character varying</td><td>The UUID that is the name of the directory where the extracts are saved.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this record was last updated.</td><tr>
<tr class="field"><td>datasource_id</td><td>integer</td><td>If the extracts are associated with a datasource, then this is a foreign key link to that datasource, otherwise it is NULL.</td><tr>
<tr class="field"><td>encryption_key_id</td><td>character varying</td><td>If not null, id of the extract encryption key (KEK) with which these extracts are encrypted.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the extract.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>Size of the extract(s) in bytes.</td><tr>
</tbody>
</table>
<a name="public.field_indexability_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.field_indexability</dfn>:  The user-defined NLP indexability rules for fields in datasources</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from published_datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site on which the datasource is published</td><tr>
<tr class="field"><td>published_datasource_id</td><td>integer</td><td>The id of the published datasource on the site</td><tr>
<tr class="field"><td>field_graph_id</td><td>text</td><td>The graph id of the field in the datasource</td><tr>
<tr class="field"><td>indexing_mode</td><td>text</td><td>The user-specified behavior for NLP to index the field</td><tr>
</tbody>
</table>
<a name="public.flow_drafts_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_drafts</dfn>:  Each record represents a draft for a Tableau Prep flow that exists on Tableau Server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from project_id on this table to id on table, <a href="#public.projects_anchor">public.projects</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the flow draft record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>An immutable identifier for the flow draft, unique within a site.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The user ID of the owner of the flow draft. The owner of the draft may differ from the owner of the flow.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>The ID of the flow associated with this draft. If null, this draft is for a new flow.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site containing this flow draft.</td><tr>
<tr class="field"><td>project_id</td><td>integer</td><td>The ID of the project containing this flow draft. Present if and only if flow ID is null. Otherwise, shares project of flow.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the flow draft. Present if and only if flow ID is null. Otherwise, shares name of flow.</td><tr>
<tr class="field"><td>document_data_id</td><td>character varying</td><td>The identifier for the .TFL(X) file data associated with this flow draft.</td><tr>
<tr class="field"><td>packaged_files_data_id</td><td>character varying</td><td>The identifier for the packaged file data associated with this flow draft.</td><tr>
<tr class="field"><td>content_version</td><td>integer</td><td>Version of the flow draft. Incremented on each update.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>last_force_updated_at</td><td>timestamp without time zone</td><td>The time the record was last forcibly updated, bypassing certain time-based update throttling.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was last updated.</td><tr>
<tr class="field"><td>document_file_size</td><td>bigint</td><td>The size of the flow draft document file in bytes.</td><tr>
<tr class="field"><td>packaged_files_size</td><td>bigint</td><td>The size of the flow draft packaged files in bytes.</td><tr>
<tr class="field"><td>flow_content_version</td><td>integer</td><td>The version of the flow to which this draft corresponds. If not associated with a flow, this value will be null.</td><tr>
<tr class="field"><td>is_virtual_draft</td><td>boolean</td><td>True if this draft is virtual, meaning no changes have been saved to it. False otherwise.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Optimistic lock version intended for internal usage only. Should not be manually set or retrieved.</td><tr>
<tr class="field"><td>encryption_key</td><td>character varying</td><td>The ID of the encryption key (KEK) with which data in this flow draft is encrypted. If the flow draft has no encryption key, this value will be null.</td><tr>
<tr class="field"><td>data_engine_extracts</td><td>boolean</td><td>True if the flow draft contains data was supplied in the form of a Tableau data extract. False otherwise.</td><tr>
<tr class="field"><td>extract_encryption_state</td><td>smallint</td><td>Encryption state of the extracts for this flow draft. null or 0 - unencrypted, 1 - encrypted, 2 - pending encryption, 3 - pending decryption, 5 - pending rekey</td><tr>
<tr class="field"><td>published_at</td><td>timestamp without time zone</td><td>The time the flow draft was last published into a flow.</td><tr>
<tr class="field"><td>last_session_id</td><td>character varying</td><td>The id of the most recent flow edit session that was created for this draft. Null indicates there are no active sesions for the draft.</td><tr>
<tr class="field"><td>hidden</td><td>boolean</td><td>Flag to indicate whether or not we the flow draft is hidden from content management system.</td><tr>
<tr class="field"><td>kind</td><td>character varying</td><td>Indicates what kind of flow draft this record represents.</td><tr>
</tbody>
</table>
<a name="public.flow_events_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_events</dfn>:  Each row represents an event affecting a flow</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key of the event</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>Foreign key to the corresponding flow</td><tr>
<tr class="field"><td>event_type</td><td>integer</td><td>Event type integer value</td><tr>
<tr class="field"><td>event_created_at</td><td>timestamp without time zone</td><td>Time of event creation</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of flow event</td><tr>
</tbody>
</table>
<a name="public.flow_input_steps_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_input_steps</dfn>:  Each record represents an individual input step from a published Tableau Prep flow.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from data_connection_id on this table to id on table, <a href="#public.data_connections_anchor">public.data_connections</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record of the input step.</td><tr>
<tr class="field"><td>step_id</td><td>character varying</td><td>Unique id for the input step, pulled from the TFL file.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the input step, pulled  from TFL.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>The FK to flows for the flow where this input step exists.</td><tr>
<tr class="field"><td>data_connection_id</td><td>integer</td><td> The FK to data_connections.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site associated with the flow where this input step exists.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier for the input step.</td><tr>
</tbody>
</table>
<a name="public.flow_models_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_models</dfn>:  Each row contains model metadata for a flow</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key of the model metadata</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>Foreign key to the corresponding flow</td><tr>
<tr class="field"><td>data_id</td><td>character varying</td><td>Data store ID of model</td><tr>
<tr class="field"><td>generated_at</td><td>timestamp without time zone</td><td>Time of model generation</td><tr>
<tr class="field"><td>stale_at</td><td>timestamp without time zone</td><td>Model expiration time</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the flow_models.</td><tr>
</tbody>
</table>
<a name="public.flow_output_step_runs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_output_step_runs</dfn>:  Each record represents a run of an output step of a flow.  See flow_runs for per-flow run history.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_output_step_id on this table to id on table, <a href="#public.flow_output_steps_anchor">public.flow_output_steps</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_run_id on this table to id on table, <a href="#public.flow_runs_anchor">public.flow_runs</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>Foreign key to the flow that was run.</td><tr>
<tr class="field"><td>flow_run_id</td><td>integer</td><td>Foreign key to the flow_runs table which gives the flow-level run history.</td><tr>
<tr class="field"><td>flow_output_step_id</td><td>integer</td><td>Foreign key to the flow_output_steps table.</td><tr>
<tr class="field"><td>started_at</td><td>timestamp without time zone</td><td>When the flow processing system began executing the execution plan associated with this output step.</td><tr>
<tr class="field"><td>completed_at</td><td>timestamp without time zone</td><td>When the flow processing system completed publishing the output of this output step.</td><tr>
<tr class="field"><td>progress</td><td>integer</td><td>Can be used to indicate percent complete for the job, but in most cases simply gets set to 100 when the job is completed.  -1 means pending.</td><tr>
<tr class="field"><td>finish_code</td><td>integer</td><td>Whether or not the job succeeded. 0 for success; 1 for failure; 2 for cancelled.</td><tr>
<tr class="field"><td>rows_produced</td><td>bigint</td><td>The count of rows produced.</td><tr>
<tr class="field"><td>notes</td><td>character varying</td><td>Can be used to store additional information about the running of the job.  Often errors.</td><tr>
<tr class="field"><td>is_incremental</td><td>boolean</td><td>Whether the run was incremental in run history</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the flow_output_step_runs.</td><tr>
</tbody>
</table>
<a name="public.flow_output_steps_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_output_steps</dfn>:  Each record represents an individual output step from a published Maestro flow.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from data_connection_id on this table to id on table, <a href="#public.data_connections_anchor">public.data_connections</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datarole_id on this table to id on table, <a href="#public.data_roles_anchor">public.data_roles</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record of the output step.</td><tr>
<tr class="field"><td>step_id</td><td>character varying</td><td>Unique id for the output step, pulled from the TFL file.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the output step from TFL.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>The FK to flows for the flow where this output step exists.</td><tr>
<tr class="field"><td>data_connection_id</td><td>integer</td><td>The FK to data_connections.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site associated with the flow where this output step exists.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier for the output step.</td><tr>
<tr class="field"><td>is_deleted</td><td>boolean</td><td>Whether this flow output step is deleted or not.</td><tr>
<tr class="field"><td>datasource_id</td><td>integer</td><td>id of associated datasource</td><tr>
<tr class="field"><td>datarole_id</td><td>integer</td><td>id of associated datarole</td><tr>
<tr class="field"><td>is_incremental_enabled</td><td>boolean</td><td>Whether to give user the option to run this output incrementally</td><tr>
<tr class="field"><td>is_incremental_default</td><td>boolean</td><td>Whether running this output incrementally is the default option.</td><tr>
<tr class="field"><td>output_operation_type</td><td>integer</td><td>Whether to create-1, append-2 or truncate-3 the output when run type is full refresh.</td><tr>
<tr class="field"><td>incremental_output_operation_type</td><td>integer</td><td>Whether to create-1, append-2 or truncate-3 the output when run type is incremental refresh.</td><tr>
<tr class="field"><td>output_name</td><td>character varying</td><td>The name of the output that the flow creates.</td><tr>
</tbody>
</table>
<a name="public.flow_output_steps_data_connections_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_output_steps_data_connections</dfn>:  Serves as a linking mechanism between flow output steps, data_connections, and datasources.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from data_connection_id on this table to id on table, <a href="#public.data_connections_anchor">public.data_connections</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_output_step_id on this table to id on table, <a href="#public.flow_output_steps_anchor">public.flow_output_steps</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the record is associated with.</td><tr>
<tr class="field"><td>flow_output_step_id</td><td>integer</td><td>The ID of the flow output step the record is associated with.</td><tr>
<tr class="field"><td>data_connection_id</td><td>integer</td><td>The ID of the data connection the record is associated with.</td><tr>
<tr class="field"><td>datasource_id</td><td>integer</td><td>The ID of the datasource the record is associated with, if exists.</td><tr>
</tbody>
</table>
<a name="public.flow_output_steps_parameters_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_output_steps_parameters</dfn>:  Serves as a many to many linking mechanism between flow parameters and flow output steps. An output step can require multiple parameters, and a parameter can be required by multiple output steps.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_output_step_id on this table to id on table, <a href="#public.flow_output_steps_anchor">public.flow_output_steps</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_parameter_id on this table to id on table, <a href="#public.flow_parameters_anchor">public.flow_parameters</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site the record is associated with.</td><tr>
<tr class="field"><td>flow_output_step_id</td><td>integer</td><td>The id of the flow output step the record is associated with.</td><tr>
<tr class="field"><td>flow_parameter_id</td><td>integer</td><td>The id of the flow parameter the record is associated with.</td><tr>
</tbody>
</table>
<a name="public.flow_parameter_list_domain_values_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_parameter_list_domain_values</dfn>:  Each record contains a value for the domain for a list type parameter.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_parameter_list_domain_id on this table to id on table, <a href="#public.flow_parameter_list_domains_anchor">public.flow_parameter_list_domains</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site this record is associated with.</td><tr>
<tr class="field"><td>flow_parameter_list_domain_id</td><td>integer</td><td>The id of the flow parameter list domain this record is associated with.</td><tr>
<tr class="field"><td>value</td><td>character varying</td><td>The list value for the domain of the list type parameter.</td><tr>
</tbody>
</table>
<a name="public.flow_parameter_list_domains_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_parameter_list_domains</dfn>:  Each record contains the domain information for a list type parameter.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_parameter_id on this table to id on table, <a href="#public.flow_parameters_anchor">public.flow_parameters</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site this record is associated with.</td><tr>
<tr class="field"><td>flow_parameter_id</td><td>integer</td><td>The id of the flow parameter this record is associated with.</td><tr>
</tbody>
</table>
<a name="public.flow_parameter_range_domains_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_parameter_range_domains</dfn>:  Each record contains the domain information for a range type parameter.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_parameter_id on this table to id on table, <a href="#public.flow_parameters_anchor">public.flow_parameters</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site this record is associated with.</td><tr>
<tr class="field"><td>flow_parameter_id</td><td>integer</td><td>The id of the flow parameter this record is associated with.</td><tr>
<tr class="field"><td>min_value</td><td>character varying</td><td>The minimum value of this parameter range domain.</td><tr>
<tr class="field"><td>max_value</td><td>character varying</td><td>The maximum value of this parameter range domain.</td><tr>
<tr class="field"><td>step_size</td><td>character varying</td><td>The step size of this parameter range domain.</td><tr>
<tr class="field"><td>date_unit</td><td>integer</td><td>The date unit of this parameter range domain, if the parameter data type is date or datettime. NULL = N/A, 0 = second, 1, = minute, 2 = hour, 3 = day, 4 = week, 5 = month, 6 = quarter, 7 = year</td><tr>
</tbody>
</table>
<a name="public.flow_parameters_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_parameters</dfn>:  Each record represents a parameter for a flow on Tableau Server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the parameter</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site this parameter is associated with.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>The id of the flow this parameter is associated with.</td><tr>
<tr class="field"><td>parameter_guid</td><td>character varying</td><td>The unique id for this parameter used in the TFL file.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name for this parameter.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>The description for this parameter.</td><tr>
<tr class="field"><td>domain_type</td><td>integer</td><td>The domain type for this parameter. 0 = all, 1 = binary, 2 = range, 3 = list.</td><tr>
<tr class="field"><td>value</td><td>character varying</td><td>The value for this parameter. Set if and only if is_required is false.</td><tr>
<tr class="field"><td>is_required</td><td>boolean</td><td>True if the parameter is required, false otherwise.</td><tr>
<tr class="field"><td>data_type</td><td>integer</td><td>The data type of this parameter. 0 = string, 1 = integer, 2 = float, 3 = date, 4 = datetime, 5 = boolean.</td><tr>
<tr class="field"><td>is_active</td><td>boolean</td><td>True if the parameter is currently referenced in the flow, false otherwise.</td><tr>
</tbody>
</table>
<a name="public.flow_run_errors_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_run_errors</dfn>:  Each record represents an individual flow run error which has detailed information about the error</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_output_step_id on this table to id on table, <a href="#public.flow_output_steps_anchor">public.flow_output_steps</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_output_step_run_id on this table to id on table, <a href="#public.flow_output_step_runs_anchor">public.flow_output_step_runs</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_run_id on this table to id on table, <a href="#public.flow_runs_anchor">public.flow_runs</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record of the flow run error.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>The FK to flows for the flow which this run error is about.</td><tr>
<tr class="field"><td>flow_output_step_id</td><td>integer</td><td>The FK to flow output steps for the output step which this run error is about.</td><tr>
<tr class="field"><td>flow_run_id</td><td>integer</td><td>The FK to flow runs for the flow run where this error got reported from.</td><tr>
<tr class="field"><td>flow_output_step_run_id</td><td>integer</td><td>The FK to flow output step runs for the flow output step run where this error got reported from.</td><tr>
<tr class="field"><td>error_type</td><td>character varying</td><td>The type of this error</td><tr>
<tr class="field"><td>object_id</td><td>character varying</td><td>The object id this error is about, could be null if the error is not about specific object but the entire flow.</td><tr>
<tr class="field"><td>object_type</td><td>character varying</td><td>The type of the object, like node or connection in the maestro doc</td><tr>
<tr class="field"><td>object_name</td><td>character varying</td><td>The name of the object according to the maestro doc, used to display name in clients</td><tr>
<tr class="field"><td>error_message_params</td><td>text</td><td>string params for the flow run error messages, formatted as yaml.</td><tr>
<tr class="field"><td>exception_class</td><td>text</td><td>the class name of the original exception of the flow run error</td><tr>
<tr class="field"><td>exception_stacktrace</td><td>text</td><td>the stacktrace of the original exception of the flow run error</td><tr>
<tr class="field"><td>flowprocessor_raw_error_message</td><td>text</td><td>the raw error message in English from flow processor, if the flow run error is originated from flow processor</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the flow_run_errors.</td><tr>
<tr class="field"><td>error_source</td><td>character varying</td><td>The Tableau Error Source for the flow run error.</td><tr>
</tbody>
</table>
<a name="public.flow_run_spec_output_steps_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_run_spec_output_steps</dfn>:  Each record represents an individual output step in a flow run specification.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_output_step_id on this table to id on table, <a href="#public.flow_output_steps_anchor">public.flow_output_steps</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_run_spec_id on this table to id on table, <a href="#public.flow_run_specs_anchor">public.flow_run_specs</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record of the flow run spec output step.</td><tr>
<tr class="field"><td>flow_run_spec_id</td><td>integer</td><td>The FK to flow_run_spec for the flow run spec which this output step belongs to.</td><tr>
<tr class="field"><td>flow_output_step_id</td><td>integer</td><td>The FK to flow_output_steps table for the flow output step which this Id refers to .</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site associated with the flow which the entire flow run spec is about.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier for the flow run spec output step.</td><tr>
<tr class="field"><td>is_incremental</td><td>boolean</td><td>Whether user chooses incremental run in scheduler</td><tr>
</tbody>
</table>
<a name="public.flow_run_spec_parameters_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_run_spec_parameters</dfn>:  Each record holds the override value for a parameter.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_parameter_id on this table to id on table, <a href="#public.flow_parameters_anchor">public.flow_parameters</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_run_spec_id on this table to id on table, <a href="#public.flow_run_specs_anchor">public.flow_run_specs</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site the record is associated with.</td><tr>
<tr class="field"><td>flow_parameter_id</td><td>integer</td><td>The id of the flow parameter the record is associated with.</td><tr>
<tr class="field"><td>flow_run_spec_id</td><td>integer</td><td>The id of the flow run spec the record is associated with.</td><tr>
<tr class="field"><td>override_value</td><td>character varying</td><td>The override value for the parameter.</td><tr>
</tbody>
</table>
<a name="public.flow_run_specs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_run_specs</dfn>:  Each record represents an individual specification about how a Tableau Prep flow should be run</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record of the flow run spec.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>The FK to flows for the flow which this run spec is about.</td><tr>
<tr class="field"><td>trigger_type</td><td>character varying</td><td>The trigger type of this flow run, currently 0 for scheduled run, 1 for ad-hoc run</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site associated with the flow which this run spec is about.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td> A unique, immutable identifier for the flow run spec.</td><tr>
<tr class="field"><td>run_all_outputs</td><td>boolean</td><td>Whether to run flow with all outputs, future outputs included</td><tr>
<tr class="field"><td>is_incremental</td><td>boolean</td><td>Whether to force all output nodes run incrementally (true) or full refresh (false) or unspecified (null).</td><tr>
</tbody>
</table>
<a name="public.flow_runs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_runs</dfn>:  Each record represents a run of a flow.  See flow_output_step_runs for per-output-step run history.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_run_spec_id on this table to id on table, <a href="#public.flow_run_specs_anchor">public.flow_run_specs</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from task_id on this table to id on table, <a href="#public.tasks_anchor">public.tasks</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>Foreign key to the flow that was run.</td><tr>
<tr class="field"><td>flow_processor_run_id</td><td>character varying</td><td>Identifier for a given run from the flow processing system.</td><tr>
<tr class="field"><td>flow_run_spec_id</td><td>integer</td><td>Identifier for the specification of a given run.</td><tr>
<tr class="field"><td>started_at</td><td>timestamp without time zone</td><td>When the flow processing system began execution.</td><tr>
<tr class="field"><td>completed_at</td><td>timestamp without time zone</td><td>When the flow processing system completed execution.</td><tr>
<tr class="field"><td>task_id</td><td>integer</td><td>Foreign key to the task that triggered this flow run (if one exists).</td><tr>
<tr class="field"><td>trigger_type</td><td>character varying</td><td>Specifies what caused this flow run to occur.  Currently 0 for scheduled run (task), 1 for ad-hoc run.</td><tr>
<tr class="field"><td>progress</td><td>integer</td><td>Can be used to indicate percent complete for the job, but in most cases simply gets set to 100 when the job is completed.  -1 means pending.</td><tr>
<tr class="field"><td>finish_code</td><td>integer</td><td>Whether or not the job succeeded. 0 for success; 1 for failure; 2 for cancelled.</td><tr>
<tr class="field"><td>notes</td><td>character varying</td><td>Can be used to store additional information about the running of the job.  Often errors.</td><tr>
<tr class="field"><td>background_job_id</td><td>integer</td><td>ID of the background job associated with this flow run</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>An immutable identifier for the flow run.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>User ID of the user who started the flow run.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the flow_runs.</td><tr>
<tr class="field"><td>attachment_sos_id</td><td>character varying</td><td>ID representing SOS token where the unprocessed attachments are stored</td><tr>
</tbody>
</table>
<a name="public.flow_runtime_owners_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_runtime_owners</dfn>:  Table to keep track of flow/flow output step owner at flow run time. Used to calculate derived permission on flow outputs.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_output_step_id on this table to id on table, <a href="#public.flow_output_steps_anchor">public.flow_output_steps</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from table_id on this table to id on table, <a href="#public.table_assets_anchor">public.table_assets</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>Flow id.</td><tr>
<tr class="field"><td>flow_output_step_id</td><td>integer</td><td>Flow output step id for this flow runtime owner.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this flow runtime owner record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this flow runtime owner record was updated.</td><tr>
<tr class="field"><td>table_id</td><td>integer</td><td>Table related to this flow runtime owner.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>Owner for this flow/table/output step.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site this flow runtime owner belongs to.</td><tr>
</tbody>
</table>
<a name="public.flow_user_settings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_user_settings</dfn>:  Each record represents a users selected settings for a Prep flow.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the flow users settings.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>The user ID of the user with the settings record for this flow.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>The ID of the flow that this user has made these settings selection.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site containing this flow and user.</td><tr>
<tr class="field"><td>embed_mode</td><td>boolean</td><td>True if the user selected to embed credentials in the flow, false if they selected to not embed credentials.</td><tr>
</tbody>
</table>
<a name="public.flow_versions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flow_versions</dfn>:  flow versions saved on server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id of a version. Primary key.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Reference to entry in sites table. Indicates the site to which this flow version belongs to.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>A foreign key to the flows table. Reference to flow.</td><tr>
<tr class="field"><td>publisher_id</td><td>integer</td><td>Reference to user in site users table. User who published this version. Can point to deleted user.</td><tr>
<tr class="field"><td>version_number</td><td>integer</td><td>The version number.</td><tr>
<tr class="field"><td>published_at</td><td>timestamp without time zone</td><td>The time when this version was initially published. Copied from flow record last_updated field at the time of being overwritten.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>The size, in bytes, of this version of flow.</td><tr>
<tr class="field"><td>content_key</td><td>character varying</td><td>Key of the flow as string</td><tr>
<tr class="field"><td>sos_type</td><td>character varying</td><td>The SOS data type under which this version document is stored, or null if it is not stored in SOS.</td><tr>
<tr class="field"><td>encryption_key_id</td><td>character varying</td><td>If not null, id of the flow version encryption key (KEK) with which data in this flow is encrypted.</td><tr>
<tr class="field"><td>data_engine_extracts</td><td>boolean</td><td>True means the data was supplied in the form of a Tableau data extract, though the original source of the data may be known to reside elsewhere.</td><tr>
<tr class="field"><td>extract_encryption_state</td><td>smallint</td><td>If not null, encryption state of the extracts. null or 0 - unencrypted, 1 - encrypted, 2 - pending encryption, 3 - pending decryption, 5 - pending rekey</td><tr>
</tbody>
</table>
<a name="public.flows_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.flows</dfn>:  Each record represents a Tableau Prep flow that exists on Tableau Server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from project_id on this table to id on table, <a href="#public.projects_anchor">public.projects</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the flow record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the published flow.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier for the flow.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The user id of the owner/publisher of the flow.</td><tr>
<tr class="field"><td>project_id</td><td>integer</td><td>The id of the project that this flow is associated with.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this flow is associated with.</td><tr>
<tr class="field"><td>data_id</td><td>character varying</td><td>The identifier for the data of the .tfl file associated with this flow.</td><tr>
<tr class="field"><td>reduced_data_id</td><td>character varying</td><td>Unique ID used to identify the flow's packaged files (removed from the .TFLX and stored separately).</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>The description of the flow.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking." Do not set this or mess with it, its all handled automatically.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>The size of the flow file in bytes</td><tr>
<tr class="field"><td>embedded</td><td>text</td><td>The encrypted keychain with credentials stored with the flow.</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>The asset encryption key used to encrypt the keychain in the embedded column.</td><tr>
<tr class="field"><td>thumbnail_id</td><td>character varying</td><td>The identifier for the thumbnail data.</td><tr>
<tr class="field"><td>last_published_at</td><td>timestamp without time zone</td><td>The last time the flow file was published.</td><tr>
<tr class="field"><td>content_version</td><td>integer</td><td>Version of the flow file, increments on each publish.</td><tr>
<tr class="field"><td>document_version</td><td>character varying</td><td>The internal version of the .tfl file associated with this record.</td><tr>
<tr class="field"><td>file_type</td><td>character varying</td><td>Whether this flow file is a tfl or tflx.</td><tr>
<tr class="field"><td>graph_image_id</td><td>character varying</td><td>Locator id for the graph image of the flow in SOS</td><tr>
<tr class="field"><td>encryption_key_id</td><td>character varying</td><td>If not null, id of the flow encryption key (KEK) with which data in this flow is encrypted.</td><tr>
<tr class="field"><td>data_engine_extracts</td><td>boolean</td><td>True means the data was supplied in the form of a Tableau data extract, though the original source of the data may be known to reside elsewhere.</td><tr>
<tr class="field"><td>extract_encryption_state</td><td>smallint</td><td>If not null, encryption state of the extracts. null or 0 - unencrypted, 1 - encrypted, 2 - pending encryption, 3 - pending decryption, 5 - pending rekey</td><tr>
<tr class="field"><td>is_deleted</td><td>boolean</td><td>When is_deleted is true then flow is deleted, no active job or user request can see it. It is considered to reside in Recycle Bin until either restored or permanently deleted.</td><tr>
<tr class="field"><td>hidden</td><td>boolean</td><td>Flag to indicate whether or not we the flow is hidden from content management system.</td><tr>
<tr class="field"><td>kind</td><td>character varying</td><td>Indicates what kind of flow this record represents.</td><tr>
</tbody>
</table>
<a name="public.geocoding_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.geocoding</dfn>:  Information about geocoding databases.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>sos_id</td><td>text</td><td>Storage ID of this database.</td><tr>
<tr class="field"><td>version</td><td>text</td><td>Version of the database.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Timestamp when this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Same as created_at.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>Size of the geocoding database.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the geocoding database belong to.</td><tr>
</tbody>
</table>
<a name="public.global_geocoding_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.global_geocoding</dfn>:  Information about global geocoding databases.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>sos_id</td><td>text</td><td>Storage ID of this database.</td><tr>
<tr class="field"><td>version</td><td>text</td><td>Version of the database.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>Size of the geocoding database.</td><tr>
<tr class="field"><td>active</td><td>boolean</td><td>Whether the database is used by the server.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Timestamp when this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Same as created_at.</td><tr>
<tr class="field"><td>storage_type</td><td>smallint</td><td>Type of the storage used, e.g. folder or hyper.</td><tr>
</tbody>
</table>
<a name="public.group_users_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.group_users</dfn>:  Serves as a many to many linking mechanism between users and groups. A user can belong to multiple groups, and a group can contain multiple users.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from group_id on this table to id on table, <a href="#public.groups_anchor">public.groups</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>group_id</td><td>integer</td><td>A foreign key reference to an entry in the groups table.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>A foreign key reference to an entry in the users table.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the group_users.</td><tr>
</tbody>
</table>
<a name="public.groups_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.groups</dfn>:  A grouping of users. Can be locally created or imported from Active Directory.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from domain_id on this table to id on table, <a href="#public.domains_anchor">public.domains</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name that was given to the group.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this record was last updated.</td><tr>
<tr class="field"><td>system</td><td>boolean</td><td>Indicates if this group was created by Tableau itself, or if it was created by user action.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>A foreign key link to the user who owns this group.</td><tr>
<tr class="field"><td>domain_id</td><td>integer</td><td>A foreign key link to the domain that corresponds to this group.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key link to the site to which this group belongs.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>An identifier that is unique in combination with the site_id.</td><tr>
<tr class="field"><td>minimum_site_role</td><td>character varying</td><td>The minimum site role given to members of the AD group</td><tr>
<tr class="field"><td>last_synchronized</td><td>timestamp without time zone</td><td>Last time that synchronization for an AD group was completed</td><tr>
<tr class="field"><td>minimum_site_role_id</td><td>integer</td><td>the id of the minimum site role of the group</td><tr>
<tr class="field"><td>grant_license_mode</td><td>character varying</td><td>When to grant a license to the users in the group. Can either by ON_SYNC or ON_LOGIN</td><tr>
</tbody>
</table>
<a name="public.hist_capabilities_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_capabilities</dfn>:  Records the most useful information about a capability that was relevant at the time of the event (see capabilities table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>capability_id</td><td>integer</td><td>A foreign key reference to an entry in the capabilities table. This could be NULL if the matching record in the capabilities table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>This (or the id) is how the capability is referred to by code.</td><tr>
<tr class="field"><td>allow</td><td>boolean</td><td>Whether or not the capability is allowed.</td><tr>
</tbody>
</table>
<a name="public.hist_collections_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_collections</dfn>:  Records the most useful information about a collection that was relevant at the time of the event.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>collection_luid</td><td>character varying</td><td>luid of the collection</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The human readable name of the collection.</td><tr>
</tbody>
</table>
<a name="public.hist_column_assets_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_column_assets</dfn>:  Records the most useful information about a column that was relevant at the time of the event (see column_assets table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>column_id</td><td>integer</td><td>A foreign key reference to an entry in the columns table. This could be NULL if the matching record in the column_assets table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the column.</td><tr>
</tbody>
</table>
<a name="public.hist_comments_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_comments</dfn>:  Records the most useful information about a comment that was relevant at the time of the event (see comments table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>comment_id</td><td>integer</td><td>A foreign key link to the primary key for the comments record. This could be NULL if the matching record in the comments table was deleted since this record was created.</td><tr>
<tr class="field"><td>comment</td><td>text</td><td>Comment text.</td><tr>
</tbody>
</table>
<a name="public.hist_configs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_configs</dfn>:  Can be used to record information about configuration that was in effect at the time of the historical event.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>key</td><td>text</td><td>A unique name for the specific configuration.</td><tr>
<tr class="field"><td>value</td><td>text</td><td>The value of the configuration.</td><tr>
</tbody>
</table>
<a name="public.hist_data_connections_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_data_connections</dfn>:  Records the most useful information about a data connection that was relevant at the time of the event (see data_connections table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>data_connection_id</td><td>integer</td><td>A foreign key reference to an entry in the data_connections table. This could be NULL if the matching record in the data_connections table was deleted since this record was created.</td><tr>
<tr class="field"><td>server</td><td>text</td><td>DNS server name to connect to.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>Unique identifier for this data_connection.</td><tr>
<tr class="field"><td>dbname</td><td>text</td><td>The database name to which the particular connection is linked.</td><tr>
<tr class="field"><td>table_name</td><td>text</td><td>The name of the table in the database that this connection connects to.</td><tr>
</tbody>
</table>
<a name="public.hist_data_quality_indicators_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_data_quality_indicators</dfn>:  Records the most useful information about a data quality indicator that was relevant at the time of the event (see data_quality_indicators table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>data_quality_indicator_id</td><td>bigint</td><td>A foreign key reference to an entry in the data quality indicators table. This could be NULL if the matching record in the data_quality_indicators table was deleted since this record was created.</td><tr>
<tr class="field"><td>data_quality_type</td><td>character varying</td><td>Type of data quality indicator.</td><tr>
<tr class="field"><td>is_active</td><td>boolean</td><td>Represents state of data quality indicator as true or false.</td><tr>
<tr class="field"><td>is_severe</td><td>boolean</td><td>Indicates whether a data quality indicator is severe or not. True means severe, otherwise false.</td><tr>
<tr class="field"><td>message</td><td>text</td><td>Message of data quality indicator.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>Id of user who created/updated data quality indicator.</td><tr>
<tr class="field"><td>user_display_name</td><td>character varying</td><td>Display name of user who created/updated data quality indicator.</td><tr>
</tbody>
</table>
<a name="public.hist_data_roles_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_data_roles</dfn>:  Records the most useful information about a data role that was relevant at the time of the event (see data_roles table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>data_role_id</td><td>integer</td><td>A foreign key reference to an entry in the data_roles table. This could be NULL if the matching record in the data_roles table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the data_role.</td><tr>
</tbody>
</table>
<a name="public.hist_database_assets_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_database_assets</dfn>:  Records the most useful information about a database that was relevant at the time of the event (see database_assets table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>database_id</td><td>integer</td><td>A foreign key reference to an entry in the databases table. This could be NULL if the matching record in the database_assets table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the database.</td><tr>
</tbody>
</table>
<a name="public.hist_datasources_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_datasources</dfn>:  Records the most useful information about a data source that was relevant at the time of the event (see datasources table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>datasource_id</td><td>integer</td><td>A foreign key reference to an entry in the datasources table. This could be NULL if the matching record in the datasources table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The name of the published datasource.</td><tr>
<tr class="field"><td>repository_url</td><td>text</td><td>Uniquely identifies a datasource. More or less consists of a slightly modified name, but not totally obviously, especially in the presence of non-ASCII characters. Used in URLs meant to access this datasource.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>The size in bytes of the datasource.</td><tr>
<tr class="field"><td>revision</td><td>text</td><td>Increments each time a new version of the datasource is published.</td><tr>
<tr class="field"><td>using_remote_query_agent</td><td>boolean</td><td>Whether this datasource is using remote query agent.</td><tr>
<tr class="field"><td>remote_query_agent_name</td><td>text</td><td>The remote query agent name used by the data source.</td><tr>
<tr class="field"><td>is_certified</td><td>boolean</td><td>Whether or not this datasource is certified.</td><tr>
<tr class="field"><td>certification_note</td><td>text</td><td>Explanation for the certification status of this datasource.</td><tr>
</tbody>
</table>
<a name="public.hist_flow_drafts_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_flow_drafts</dfn>:  Records the most useful information about a flow draft that was relevant at the time of the event (see flow_drafts table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>flow_draft_id</td><td>integer</td><td>The ID of the flow draft.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>The ID of the flow if the flow draft is associated with a flow, NULL otherwise.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the flow draft.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>The number of bytes used in storing the flow draft information.</td><tr>
</tbody>
</table>
<a name="public.hist_flows_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_flows</dfn>:  Records the most useful information about a flow that was relevant at the time of the event (see flows table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>A foreign key reference to an entry in the flows table. This could be NULL if the matching record in the flows table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the flow.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>The number of bytes used in storing the flow information.</td><tr>
<tr class="field"><td>content_version</td><td>character varying</td><td>Version of the flow file, increments by 1 on each publish.</td><tr>
</tbody>
</table>
<a name="public.hist_groups_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_groups</dfn>:  Records the most useful information about a group that was relevant at the time of the event (see groups table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>group_id</td><td>integer</td><td>A foreign key reference to an entry in the groups table. This could be NULL if the matching record in the groups table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The name that was given to the group.</td><tr>
<tr class="field"><td>domain_name</td><td>text</td><td>The name is either "local" or the name of some Active Directory group.</td><tr>
</tbody>
</table>
<a name="public.hist_licensing_roles_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_licensing_roles</dfn>:  Records the most useful information about a licensing role that was relevant at the time of the event (see licensing_roles table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>licensing_role_id</td><td>integer</td><td>A foreign key reference to an entry in the licensing_roles table. This could be NULL if the matching record in the licensing_roles table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The name of the licensing role.</td><tr>
</tbody>
</table>
<a name="public.hist_metrics_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_metrics</dfn>:  Records the most useful information about a metric that was relevant at the time of the event (see metrics table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>metric_id</td><td>integer</td><td>A foreign key reference to an entry in the metrics table. This could be NULL if the matching record in the metrics table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the metric.</td><tr>
</tbody>
</table>
<a name="public.hist_projects_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_projects</dfn>:  Records the most useful information about a project that was relevant at the time of the event (see projects table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>project_id</td><td>integer</td><td>A foreign key reference to an entry in the projects table. This could be NULL if the matching record in the projects table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The name of the project.</td><tr>
</tbody>
</table>
<a name="public.hist_published_connections_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_published_connections</dfn>:  Records the most useful information about a published connection that was relevant at the time of the event (see published_connections table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>published_connection_id</td><td>integer</td><td>A foreign key reference to an entry in the published_connections table. This could be NULL if the matching record in the published_connections table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The name of the published connection.</td><tr>
</tbody>
</table>
<a name="public.hist_remote_agents_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_remote_agents</dfn>:  Records the most useful information about a remote agent that was relevant at the time of the event.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>remote_agent_id</td><td>integer</td><td>A reference to an entry in the remote_agents table. This could be NULL if the matching record in the datasources table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The value of remote_agents.name at the time of the event.</td><tr>
</tbody>
</table>
<a name="public.hist_schedules_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_schedules</dfn>:  Records the most useful information about a schedule that was relevant at the time of the event (see schedules table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from schedule_id on this table to id on table, <a href="#public.schedules_anchor">public.schedules</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>schedule_id</td><td>integer</td><td>A foreign key reference to an entry in the schedules table. This could be NULL if the matching record in the schedules table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>A schedule can be given a name, which is stored here.</td><tr>
<tr class="field"><td>schedule_type</td><td>integer</td><td>One of 0 (Hourly), 1 (Daily), 2 (Weekly), 3 (Monthly).</td><tr>
<tr class="field"><td>priority</td><td>integer</td><td>Priority can range from 1 to 100, with lower values corresponding to higher priority.</td><tr>
<tr class="field"><td>scheduled_action</td><td>integer</td><td>Used to classify schedules into one of two categories: 0 (Extract related) 1 (Subscription related)</td><tr>
<tr class="field"><td>is_serial</td><td>boolean</td><td>Set to true if the schedule must be run serially with other jobs in the same serial collection.</td><tr>
<tr class="field"><td>day_of_week_mask</td><td>integer</td><td>Indicates which day of the week this schedule will run. The information is encoded in the given integer. To interpret it, convert the integer to binary. The days of the week correspond to Sunday : 1, Monday : 10, Tuesday : 100, Wednesday : 1000, Thursday : 10000, Friday : 100000, Saturday : 1000000.</td><tr>
<tr class="field"><td>day_of_month_mask</td><td>integer</td><td>Indicates which day of the month this schedule will run. The information is encoded in the given integer. To interpret it, convert the integer to binary. The days of the month correspond to 1st : 1, 2nd: 10, 3rd: 100, 4th: 1000, 5th: 10000, etc.</td><tr>
<tr class="field"><td>start_at_minute</td><td>integer</td><td>The minute following the start of the designated time period implied by the schedule_type. For example, for a daily schedule, this would be number of minutes past midnight at the start of the day. For hourly, it would be the number of minutes past the beginning of the hour.</td><tr>
<tr class="field"><td>minute_interval</td><td>integer</td><td>Once the schedule triggers, it will retrigger at this interval during the time period implied by the schedule_type or until end_at_minute, or end_schedule_at.</td><tr>
<tr class="field"><td>end_at_minute</td><td>integer</td><td>The minute following the start of the designated time period implied schedule_type, at which the schedule should stop triggering.</td><tr>
<tr class="field"><td>end_schedule_at</td><td>timestamp without time zone</td><td>Used to indicate a point in time, after which the schedule should never trigger.</td><tr>
</tbody>
</table>
<a name="public.hist_sites_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_sites</dfn>:  Records the most useful information about a site that was relevant at the time of the event (see sites table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to an entry in the sites table. This could be NULL if the matching record in the sites table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The name of the site.</td><tr>
<tr class="field"><td>url_namespace</td><td>text</td><td>String used in the construction of URLs that target this site.</td><tr>
</tbody>
</table>
<a name="public.hist_table_assets_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_table_assets</dfn>:  Records the most useful information about a table that was relevant at the time of the event (see table_assets table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>table_id</td><td>integer</td><td>A foreign key reference to an entry in the tables table. This could be NULL if the matching record in the table_assets table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the table.</td><tr>
</tbody>
</table>
<a name="public.hist_tags_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_tags</dfn>:  Records the most useful information about a tag that was relevant at the time of the event (see tags table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>tag_id</td><td>integer</td><td>A foreign key reference to an entry in the tags table. This could be NULL if the matching record in the tags table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The value of the tag.</td><tr>
</tbody>
</table>
<a name="public.hist_tasks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_tasks</dfn>:  Records the most useful information about a task that was relevant at the time of the event (see tasks table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>task_id</td><td>integer</td><td>A foreign key reference to an entry in the tasks table. This could be NULL if the matching record in the tasks table was deleted since this record was created.</td><tr>
<tr class="field"><td>type</td><td>text</td><td>Identifies the specific type of task that this is. This is how the system identifies what code to execute when this task is to be run.</td><tr>
<tr class="field"><td>priority</td><td>integer</td><td>An integer where 0 is the highest priority and 10 is the default priority. Other values can be set if desired). Higher priority jobs should be processed earlier.</td><tr>
<tr class="field"><td>state</td><td>integer</td><td>State of the task. 0 - active, 1 - suspended, 2 - disabled.</td><tr>
</tbody>
</table>
<a name="public.hist_users_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_users</dfn>:  Records the most useful information about a user and corresponding system_user that was relevant at the time of the event (see users and system_users tables).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from hist_licensing_role_id on this table to id on table, <a href="#public.hist_licensing_roles_anchor">public.hist_licensing_roles</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>A foreign key reference to an entry in the users table. This could be NULL if the matching record in the users table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The username of the user.</td><tr>
<tr class="field"><td>domain_name</td><td>text</td><td>The name is either "local" or the name of some Active Directory group.</td><tr>
<tr class="field"><td>email</td><td>text</td><td>The email of the user.</td><tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>A foreign key reference to the system user that this user is identified with. This could be NULL if the matching record in the system_users table was deleted since this record was created.</td><tr>
<tr class="field"><td>system_admin_level</td><td>integer</td><td>Indicates if the user is a system administrator. 10 : system admin, 0 : not a system admin</td><tr>
<tr class="field"><td>hist_licensing_role_id</td><td>integer</td><td>A foreign key reference to the licensing_role_id column for a record in the hist_licensing_roles table.</td><tr>
<tr class="field"><td>site_admin_level</td><td>integer</td><td>Indicates if this user is a site admin. 5 : site admin, 0 : not site admin.</td><tr>
<tr class="field"><td>publisher_tristate</td><td>integer</td><td>Deprecated. Column will be removed in a future release.</td><tr>
<tr class="field"><td>site_role_id</td><td>integer</td><td>The ID of the site role for this user. The mapping is described in the comment for the column users.site_role_id.</td><tr>
</tbody>
</table>
<a name="public.hist_views_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_views</dfn>:  Records the most useful information about a view that was relevant at the time of the event (see views table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>A foreign key reference to an entry in the views table. This could be NULL if the matching record in the views table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The name of the view.</td><tr>
<tr class="field"><td>repository_url</td><td>text</td><td>Uniquely identifies a view. More or less composed of workbook and sheet names, but not totally obviously, especially in the presence of non-ASCII characters. Used in URLs meant to access this view.</td><tr>
<tr class="field"><td>revision</td><td>text</td><td>Starts with 1.0 and increments by 0.1 with each republication.</td><tr>
</tbody>
</table>
<a name="public.hist_workbooks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hist_workbooks</dfn>:  Records the most useful information about a workbook that was relevant at the time of the event (see workbooks table).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>A foreign key reference to an entry in the workbooks table. This could be NULL if the matching record in the workbooks table was deleted since this record was created.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The name of the workbook.</td><tr>
<tr class="field"><td>repository_url</td><td>text</td><td>A unique name for the workbook, derived from the ASCII characters in the name, which can be used in URLs to refer to this workbook.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>The number of bytes used in storing the workbook information.</td><tr>
<tr class="field"><td>revision</td><td>text</td><td>Starts with 1.0 and increments by 0.1 with each republication.</td><tr>
</tbody>
</table>
<a name="public.historical_disk_usage_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.historical_disk_usage</dfn>:  Records historical disk utilization by Tableau Server for storage monitoring.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>worker_id</td><td>character varying</td><td>Hostname of the worker the resource exists on.</td><tr>
<tr class="field"><td>resource_type</td><td>integer</td><td>Type of resource being monitored. 0 (Entire disk).</td><tr>
<tr class="field"><td>path</td><td>character varying</td><td>Disk path of the monitored resource.</td><tr>
<tr class="field"><td>total_space_bytes</td><td>bigint</td><td>Total disk size in bytes.</td><tr>
<tr class="field"><td>used_space_bytes</td><td>bigint</td><td>Disk space used by the resource in bytes.</td><tr>
<tr class="field"><td>state</td><td>integer</td><td>Free space state of the disk. One of 1 (Normal), 2 (Warning), 3 (Critical).</td><tr>
<tr class="field"><td>record_timestamp</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
</tbody>
</table>
<a name="public.historical_event_types_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.historical_event_types</dfn>:  The types of historical events which can be recorded.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>type_id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The name of the specific event that occurred.</td><tr>
<tr class="field"><td>action_type</td><td>text</td><td>Events are grouped together into action types, such as Create, Access, Update and Delete.</td><tr>
</tbody>
</table>
<a name="public.historical_events_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.historical_events</dfn>:  This table is the heart of the cluster of tables devoted to historical event auditing. For each event, a record is created on this table. The type of event is indicated through historical_event_type_id, which links to the historical_event_types table. Other information relevant to the event is linked through some of the other id fields in this table.  Note these links go to other hist* tables, which allows the event to refer to things that might have since been deleted from the regular tables.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from historical_event_type_id on this table to type_id on table, <a href="#public.historical_event_types_anchor">public.historical_event_types</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>historical_event_type_id</td><td>integer</td><td>A foreign key reference to an entry in the historical_event_types table.</td><tr>
<tr class="field"><td>worker</td><td>text</td><td>The name or IP address of the worker where the event occurred.</td><tr>
<tr class="field"><td>is_failure</td><td>boolean</td><td>Indicates if the event was an attempted action that failed.  May not be implemented across all events.</td><tr>
<tr class="field"><td>details</td><td>text</td><td>Detail text about the event.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Datetime that the event was recorded.</td><tr>
<tr class="field"><td>hist_actor_user_id</td><td>integer</td><td>A reference to the primary key id column for the record in the hist_users table of the user who initiated the event.</td><tr>
<tr class="field"><td>hist_target_user_id</td><td>integer</td><td>A reference to the primary key id column for the record in the hist_users table of the user who was the target of the event.</td><tr>
<tr class="field"><td>hist_actor_site_id</td><td>integer</td><td>A reference to the primary key id column for the record in the hist_sites table where the event was initiated.</td><tr>
<tr class="field"><td>hist_target_site_id</td><td>integer</td><td>A reference to the primary key id column for the record in the hist_sites table which was the target of the event.</td><tr>
<tr class="field"><td>hist_project_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_projects table.</td><tr>
<tr class="field"><td>hist_workbook_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_workbooks table.</td><tr>
<tr class="field"><td>hist_view_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_views table.</td><tr>
<tr class="field"><td>hist_datasource_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_datasources table.</td><tr>
<tr class="field"><td>hist_comment_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_comments table.</td><tr>
<tr class="field"><td>hist_tag_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_tags table.</td><tr>
<tr class="field"><td>hist_group_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_groups table.</td><tr>
<tr class="field"><td>hist_licensing_role_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_licensing_roles table.</td><tr>
<tr class="field"><td>hist_schedule_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_schedules table.</td><tr>
<tr class="field"><td>hist_task_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_tasks table.</td><tr>
<tr class="field"><td>hist_data_connection_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_data_connections table.</td><tr>
<tr class="field"><td>hist_config_id</td><td>integer</td><td>A foreign key reference to the config_id column for a record in the hist_configs table.</td><tr>
<tr class="field"><td>hist_capability_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_capabilities table.</td><tr>
<tr class="field"><td>hist_remote_agent_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_remote_agents table.</td><tr>
<tr class="field"><td>hist_flow_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_flows table.</td><tr>
<tr class="field"><td>hist_data_role_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_data_roles table.</td><tr>
<tr class="field"><td>hist_database_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_database_assets table.</td><tr>
<tr class="field"><td>hist_table_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_table_assets table.</td><tr>
<tr class="field"><td>hist_column_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_column_assets table.</td><tr>
<tr class="field"><td>hist_metric_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_metrics table.</td><tr>
<tr class="field"><td>hist_published_connection_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_published_connections table.</td><tr>
<tr class="field"><td>hist_collection_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_collections table.</td><tr>
<tr class="field"><td>hist_flow_draft_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_flow_drafts table.</td><tr>
<tr class="field"><td>hist_data_quality_indicator_id</td><td>integer</td><td>A reference to the primary key id column for a record in the hist_data_quality_indicators table.</td><tr>
</tbody>
</table>
<a name="public.http_requests_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.http_requests</dfn>:  Each record represents a request received by Tableau Server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for this table.</td><tr>
<tr class="field"><td>controller</td><td>character varying</td><td>The part of the application that received the request.</td><tr>
<tr class="field"><td>action</td><td>character varying</td><td>The action requested.</td><tr>
<tr class="field"><td>http_referer</td><td>character varying</td><td>The referrer.</td><tr>
<tr class="field"><td>http_user_agent</td><td>character varying</td><td>The agent string supplied by the client.</td><tr>
<tr class="field"><td>http_request_uri</td><td>text</td><td>The requested URI.</td><tr>
<tr class="field"><td>remote_ip</td><td>character varying</td><td>The client's IP address (from the perspective of the server).</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>session_id</td><td>character varying</td><td>The session with which the request is associated.</td><tr>
<tr class="field"><td>completed_at</td><td>timestamp without time zone</td><td>When the request was completed.</td><tr>
<tr class="field"><td>port</td><td>integer</td><td>The port on which the request was received.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>The user associated with the request.</td><tr>
<tr class="field"><td>worker</td><td>character varying</td><td>Which worker machine received the request.</td><tr>
<tr class="field"><td>status</td><td>integer</td><td>The status returned to the client.</td><tr>
<tr class="field"><td>user_cookie</td><td>character varying</td><td>The user cookie provided in the request.</td><tr>
<tr class="field"><td>user_ip</td><td>character varying</td><td>The IP address of the originator of the request.</td><tr>
<tr class="field"><td>vizql_session</td><td>text</td><td>The vizql session associated with this request.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site associated with the request.</td><tr>
<tr class="field"><td>currentsheet</td><td>character varying</td><td>Which sheet was being viewed.</td><tr>
<tr class="field"><td>flags_used</td><td>bigint</td><td>Integer representing the bitmap of feature flags used in the request.</td><tr>
</tbody>
</table>
<a name="public.hyper_data_update_jobs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hyper_data_update_jobs</dfn>:  Each record represents a data update job for a live-to-Hyper connection.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the data update job record.</td><tr>
<tr class="field"><td>job_id</td><td>integer</td><td>The background job id for the job.</td><tr>
<tr class="field"><td>object_id</td><td>integer</td><td>The ID of the parent workbook/datasource of the Hyper connection.</td><tr>
<tr class="field"><td>object_type</td><td>text</td><td>A string representing the type of object.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site associated with the job.</td><tr>
<tr class="field"><td>status</td><td>integer</td><td>The status of the operation.</td><tr>
<tr class="field"><td>sos_data_id</td><td>text</td><td>The identifier for the job data associated with the update.</td><tr>
<tr class="field"><td>job_data</td><td>json</td><td>Data needed to perform the update stored in a json format.</td><tr>
<tr class="field"><td>error_message</td><td>text</td><td>The error message associated with the job to be returned to the user.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was last updated.</td><tr>
<tr class="field"><td>request_id</td><td>text</td><td>The unique ID for the job provided by the user. This maps 1 to 1 to the backgrounder job.</td><tr>
</tbody>
</table>
<a name="public.hyper_databases_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hyper_databases</dfn>:  Information about Hyper databases.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Id of the site to which the database belongs.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>Unique name of the database.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>Size of the database in bytes.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Timestamp when this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Same as created_at.</td><tr>
<tr class="field"><td>kind</td><td>smallint</td><td>Kind of the database. 0 means extract, 1 means geocoding.</td><tr>
<tr class="field"><td>encryption_key_id</td><td>character varying</td><td>If not null, id of the encryption key with which this database is encrypted.</td><tr>
</tbody>
</table>
<a name="public.hyper_databases_validation_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.hyper_databases_validation</dfn>:  Stores hyper databases which went through validation.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from id on this table to id on table, <a href="#public.hyper_databases_anchor">public.hyper_databases</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Id of the hyper database.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Id of the site to which database belongs.</td><tr>
<tr class="field"><td>date</td><td>date</td><td>Date of the last validation.</td><tr>
<tr class="field"><td>hyper_version</td><td>character varying</td><td>Version of the hyper engine.</td><tr>
<tr class="field"><td>elapsed_time</td><td>integer</td><td>Time it took to validate in ms.</td><tr>
<tr class="field"><td>corrupted</td><td>boolean</td><td>If the file was determined to be corrupted during validation.</td><tr>
<tr class="field"><td>error_code</td><td>character varying</td><td>The error code returned by the validation statement.</td><tr>
</tbody>
</table>
<a name="public.id__ad_identity_stores_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.id__ad_identity_stores</dfn>:  Identities for Active Directory identity stores.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from instance_id on this table to id on table, <a href="#public.id__identity_store_instances_anchor">public.id__identity_store_instances</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from state_id on this table to id on table, <a href="#public.id__identity_store_identity_states_anchor">public.id__identity_store_identity_states</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>identity_uuid</td><td>uuid</td><td>Uuid of identity.</td><tr>
<tr class="field"><td>instance_id</td><td>integer</td><td>Instance identifier for identity store.</td><tr>
<tr class="field"><td>security_id</td><td>character varying</td><td>SID of identity in Active Directory.</td><tr>
<tr class="field"><td>sam_account_name</td><td>character varying</td><td>sAMAccountName of identity in Active Directory.</td><tr>
<tr class="field"><td>fqdn</td><td>character varying</td><td>Fully qualified domain name of Active Directory domain.</td><tr>
<tr class="field"><td>upn</td><td>character varying</td><td>userPrincipalName of identity in Active Directory.</td><tr>
<tr class="field"><td>external_id</td><td>character varying</td><td>Optional external identifier for identity.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Creation time of record.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last updated time of record.</td><tr>
<tr class="field"><td>guid</td><td>uuid</td><td>GUID of identity in Active Directory.</td><tr>
<tr class="field"><td>state_id</td><td>smallint</td><td>Foreign key for state of identity</td><tr>
</tbody>
</table>
<a name="public.id__identity_store_identity_states_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.id__identity_store_identity_states</dfn>:  States of identity.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>smallint</td><td>Primary key for identity store state.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>Name of the state, ACTIVE/STALE</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Creation time of record.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last updated time of record.</td><tr>
</tbody>
</table>
<a name="public.id__identity_store_instances_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.id__identity_store_instances</dfn>:  Instances of identity stores.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from type_id on this table to id on table, <a href="#public.id__identity_store_types_anchor">public.id__identity_store_types</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for identity store instance.</td><tr>
<tr class="field"><td>type_id</td><td>smallint</td><td>Foreign key for type of identity store instance.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>Machine consumable name for identity store instance.</td><tr>
<tr class="field"><td>display_name</td><td>character varying</td><td>Human consumable name for identity store instance.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Creation time of record.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last updated time of record.</td><tr>
</tbody>
</table>
<a name="public.id__identity_store_types_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.id__identity_store_types</dfn>:  Types of identity stores.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>smallint</td><td>Primary key for identity store type.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>Machine consumable name for identity store type.</td><tr>
<tr class="field"><td>display_name</td><td>character varying</td><td>Human consumable name for identity store type.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Creation time of record.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last updated time of record.</td><tr>
</tbody>
</table>
<a name="public.id__ldap_identity_stores_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.id__ldap_identity_stores</dfn>:  Identities for LDAP identity stores.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from instance_id on this table to id on table, <a href="#public.id__identity_store_instances_anchor">public.id__identity_store_instances</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from state_id on this table to id on table, <a href="#public.id__identity_store_identity_states_anchor">public.id__identity_store_identity_states</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>identity_uuid</td><td>uuid</td><td>Uuid of identity.</td><tr>
<tr class="field"><td>instance_id</td><td>integer</td><td>Instance identifier for identity store.</td><tr>
<tr class="field"><td>entry_uuid</td><td>uuid</td><td>EntryUUID of identity in LDAP.</td><tr>
<tr class="field"><td>distinguished_name</td><td>character varying</td><td>Normalized distinguished name of identity in LDAP.</td><tr>
<tr class="field"><td>external_id</td><td>character varying</td><td>Optional external identifier for identity.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Creation time of record.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last updated time of record.</td><tr>
<tr class="field"><td>username</td><td>character varying</td><td>Username for this identity.</td><tr>
<tr class="field"><td>state_id</td><td>smallint</td><td>Foreign key for state of identity</td><tr>
</tbody>
</table>
<a name="public.id__local_identity_stores_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.id__local_identity_stores</dfn>:  Identities for Local identity stores.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from instance_id on this table to id on table, <a href="#public.id__identity_store_instances_anchor">public.id__identity_store_instances</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>identity_uuid</td><td>uuid</td><td>Uuid of identity.</td><tr>
<tr class="field"><td>instance_id</td><td>integer</td><td>Instance identifier for identity store.</td><tr>
<tr class="field"><td>username</td><td>character varying</td><td>Username for identity.</td><tr>
<tr class="field"><td>protected_password</td><td>character varying</td><td>Protected password for identity.</td><tr>
<tr class="field"><td>protected_password_bad_format</td><td>boolean</td><td>Set to true if protected password format unrecognized.</td><tr>
<tr class="field"><td>failed_login_attempts</td><td>integer</td><td>Integer that represents the number of failed attempts since the last successful login.</td><tr>
<tr class="field"><td>last_failed_login</td><td>timestamp without time zone</td><td>Date that represents the last time the user had an unsuccessful login.</td><tr>
<tr class="field"><td>force_password_update</td><td>boolean</td><td>Boolean that represents if we want to force a password reset on the user the next time it tries to log in.</td><tr>
<tr class="field"><td>last_password_update</td><td>timestamp without time zone</td><td>Date that represents the last time the user updated the password to the current value.</td><tr>
<tr class="field"><td>external_id</td><td>character varying</td><td>Optional external identifier for identity.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Creation time of record.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last updated time of record.</td><tr>
</tbody>
</table>
<a name="public.identity_based_activation_reporting_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.identity_based_activation_reporting</dfn>:  Login-based License Management (LBLM) -  NOTE: For any custom vizzes or reporting, it is recommended instead to use the View identity_based_activation_admin_view.  In this table each row contains important dates with regard to ATR Issuing and Login-based License Usage for a given User, Site, Device and Product combination.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary Key generated by PostgreSQL.</td><tr>
<tr class="field"><td>iba_user_id</td><td>character varying</td><td>Generated Id for user for IBA Reporting</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>(foreign key) Holds the primary key of the sites table.  Allows site filtering to work on Admin Views.</td><tr>
<tr class="field"><td>device_fingerprint</td><td>character varying</td><td>Uniquely identifies device. Built/generated from umn.</td><tr>
<tr class="field"><td>product_type</td><td>character varying</td><td>Product being used at the client level.</td><tr>
<tr class="field"><td>host_name</td><td>character varying</td><td>Computer host name.</td><tr>
<tr class="field"><td>product_version</td><td>character varying</td><td>application/product version being used at the client level.</td><tr>
<tr class="field"><td>registration_first_name</td><td>character varying</td><td>Registered user first name</td><tr>
<tr class="field"><td>registration_last_name</td><td>character varying</td><td>Registered user last name</td><tr>
<tr class="field"><td>registration_email</td><td>character varying</td><td>Registered user email address</td><tr>
<tr class="field"><td>registration_date</td><td>timestamp without time zone</td><td>Date active key was registered.</td><tr>
<tr class="field"><td>client_user_name</td><td>character varying</td><td>Login/User name from the client level.</td><tr>
<tr class="field"><td>atr_expiration_date</td><td>timestamp without time zone</td><td>Expiration date of active key.  This date will remain NULL until first reporting event is sent.</td><tr>
<tr class="field"><td>hardware_serial_number</td><td>character varying</td><td>Uniquely identifies company's hardware asset.</td><tr>
<tr class="field"><td>registration_custom_field</td><td>character varying</td><td>custom field from registration</td><tr>
<tr class="field"><td>machine_os</td><td>character varying</td><td>os_architecture</td><tr>
<tr class="field"><td>virtual_machine</td><td>boolean</td><td>is the machine virtual</td><tr>
<tr class="field"><td>atr_chain_id</td><td>character varying</td><td>ATR Chain Id</td><tr>
<tr class="field"><td>domain_information</td><td>character varying</td><td>Computer Active Directory domain.</td><tr>
<tr class="field"><td>date_atr_issued</td><td>timestamp without time zone</td><td>The date-time the ATR was successfully issued by the ATR Service. This gets filled in when the Server successfully receives an ATR from the ATR Service, but before the Server returns the ATR to Desktop.</td><tr>
<tr class="field"><td>date_atr_failed</td><td>timestamp without time zone</td><td>date-time the last time an ATR request returned from from the ATR Service UNSUCCESSFULLY-(FAILED) for this user, device, product and site.</td><tr>
<tr class="field"><td>date_activated</td><td>timestamp without time zone</td><td>date-time is set upon first activation by the client (e.g. Tableau Desktop), after which it is never updated. The intent of this field is to allow the admin to understand when a user first began utilizing their Tableau license.</td><tr>
<tr class="field"><td>date_last_used</td><td>timestamp without time zone</td><td>date-time the last time the user used this product from this device for this site. NOTE: 1) The server used for activation will be updated, even if the user works and publishes on a different server. 2) This field is updated every time Desktop activates with LBLM and also every time an LBLM reporting event is sent.</td><tr>
<tr class="field"><td>date_last_updated</td><td>timestamp without time zone</td><td>This field is updated anytime any of date_atr_issued, date_atr_failed, date_activated, date_last_used is updated. This field makes it easy to determine when the user last attempted any action against a given productType, device, site combination.</td><tr>
<tr class="field"><td>server_user_name</td><td>character varying</td><td>Full user friendly name on the server level.</td><tr>
<tr class="field"><td>server_email</td><td>character varying</td><td>Email for user on the server level.</td><tr>
<tr class="field"><td>site_luid</td><td>character varying</td><td>Holds the site luid from the sites table.</td><tr>
<tr class="field"><td>user_role</td><td>character varying</td><td>DEPRECATED - Please use user_role in the VIEW identity_based_activation_admin_view instead.  This column is no longer updated and will be deleted. </td><tr>
</tbody>
</table>
<a name="public.identity_based_activation_user_role_change_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.identity_based_activation_user_role_change</dfn>:  Login-based License Management (LBLM) -  NOTE: For any custom vizzes or reporting, it is recommended instead to use the View identity_based_activation_admin_view.  This table tracks site role creator changes for each given user on a given site.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>site_id</td><td>integer</td><td>The site ID of the User represented in this row.</td><tr>
<tr class="field"><td>user_luid</td><td>character varying</td><td>Unique ID for user from users table.</td><tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>Foreign Key to System User table.</td><tr>
<tr class="field"><td>system_user_name</td><td>character varying</td><td>Name of the user across all sites.  Populated from system_users table.</td><tr>
<tr class="field"><td>date_creator_role_assigned</td><td>timestamp without time zone</td><td>Datetime user was assigned from a non-creator role to a creator role -- triggered from the users table.</td><tr>
<tr class="field"><td>date_creator_role_unassigned</td><td>timestamp without time zone</td><td>Datetime user was unassigned from a creator role to a non-creator role -- triggered from the users table.</td><tr>
<tr class="field"><td>site_role_id</td><td>integer</td><td>Foreign key to site_roles table to allow access to site_roles display_name.</td><tr>
</tbody>
</table>
<a name="public.jwt_info_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.jwt_info</dfn>:  Records for the JWT token ids</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>jwt_id</td><td>character varying</td><td>JWT id (jti).</td><tr>
<tr class="field"><td>issuer</td><td>character varying</td><td>Issuer of the JWT</td><tr>
<tr class="field"><td>expires_at</td><td>timestamp without time zone</td><td>The time JWT expires.</td><tr>
</tbody>
</table>
<a name="public.language_prefs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.language_prefs</dfn>:  Contains a listing of information about languages for which Tableau Server has been localized.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>language_id</td><td>character varying</td><td>A unique ASCII string identifier for the language.</td><tr>
<tr class="field"><td>display_name</td><td>character varying</td><td>The name of the language (in the language, itself).</td><tr>
<tr class="field"><td>display_order</td><td>integer</td><td>Governs the order in which these languages will appear when listed in the user interface.</td><tr>
<tr class="field"><td>help_link</td><td>text</td><td>Used in constructing help links, so that help can be presented in the appropriate language.</td><tr>
<tr class="field"><td>locale_id</td><td>character varying</td><td>A unique identifying string that corresponds to a locale with this language.</td><tr>
</tbody>
</table>
<a name="public.last_seen_user_notifications_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.last_seen_user_notifications</dfn>:  This table stores the last seen notification time for each user.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the last seen notification entry.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>Identifier for the user.</td><tr>
<tr class="field"><td>last_seen_notification_time</td><td>timestamp without time zone</td><td>The latest created_at timestamp of the notifications that have already been seen by the user.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Identifier for the site that the user belongs to.</td><tr>
</tbody>
</table>
<a name="public.lens_content_relationships_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.lens_content_relationships</dfn>:  Represents the relationship between the lens and other content types.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#public.lenses_anchor">public.lenses</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>The id for identifying the lens entity.</td><tr>
<tr class="field"><td>content_type</td><td>text</td><td>Content types that are associated with the lens.</td><tr>
<tr class="field"><td>content_id</td><td>integer</td><td>content_id is the unique identifier for the corresponding content-type.</td><tr>
</tbody>
</table>
<a name="public.lens_datasource_associations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.lens_datasource_associations</dfn>:  Represents the association between the lens and the source datasources for a lens.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#public.lenses_anchor">public.lenses</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from published_datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>The luid for identifying the lens.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site on which the lens is created</td><tr>
<tr class="field"><td>published_datasource_id</td><td>integer</td><td>The id of the published datasource on the site</td><tr>
</tbody>
</table>
<a name="public.lens_fields_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.lens_fields</dfn>:  Table to store fields associated with lenses</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#public.lenses_anchor">public.lenses</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from published_datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>The id for identifying the lens.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site on which the lens is created</td><tr>
<tr class="field"><td>published_datasource_id</td><td>integer</td><td>The id of the datasource to which the field belong</td><tr>
<tr class="field"><td>graph_id</td><td>text</td><td>The unique graph id of the field</td><tr>
<tr class="field"><td>status</td><td>text</td><td>Status indicator of the field. For example Displayed, Hidden etc</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>Timestamp at which the record was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>Timestamp at which the record was updated</td><tr>
<tr class="field"><td>custom_label</td><td>text</td><td>user defined label for the field</td><tr>
<tr class="field"><td>custom_description</td><td>text</td><td>description of the lens field</td><tr>
<tr class="field"><td>nlp_popularity_factor</td><td>integer</td><td>nlp popularity factor is used to calculate a fields popularity score</td><tr>
</tbody>
</table>
<a name="public.lenses_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.lenses</dfn>:  Represents the table for storing lenses.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from project_id on this table to id on table, <a href="#public.projects_anchor">public.projects</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Id is the primary key for the record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>luid for uniquely identifying a record within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site id this lens is created in.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The owner id identifies the current owner of the lens.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>Timestamp at which the record was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>Timestamp when the record was last updated at.</td><tr>
<tr class="field"><td>index_version_number</td><td>text</td><td>Index version number at which the lens is indexed to.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>name of the lens</td><tr>
<tr class="field"><td>description</td><td>text</td><td>description of the lens</td><tr>
<tr class="field"><td>project_id</td><td>integer</td><td>project to which the lens belong</td><tr>
<tr class="field"><td>repository_url</td><td>text</td><td>The repository url for lens.</td><tr>
<tr class="field"><td>error_code</td><td>text</td><td>error code for the lens.</td><tr>
<tr class="field"><td>outdated</td><td>boolean</td><td>outdated status of the lens. If outdated is true, lens needs to be reindexed</td><tr>
<tr class="field"><td>last_indexed_time</td><td>timestamp with time zone</td><td>time stamp when lens was last indexed.</td><tr>
<tr class="field"><td>is_default_lens</td><td>boolean</td><td>Indicates if the lens is default lens or not.</td><tr>
<tr class="field"><td>is_feedback_enabled</td><td>boolean</td><td>feedback to lens author setting</td><tr>
<tr class="field"><td>site_luid</td><td>text</td><td>site luid of the lens</td><tr>
</tbody>
</table>
<a name="public.licensing_roles_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.licensing_roles</dfn>:  Lists the various possible licensing scenarios.  (Unlicensed, Guest, Viewer, or Interactor).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the licensing role.</td><tr>
<tr class="field"><td>rank</td><td>integer</td><td>Used to provide an order of increasing rights.</td><tr>
<tr class="field"><td>licensing_roles_count</td><td>integer</td><td>Count of used licensing roles.</td><tr>
</tbody>
</table>
<a name="public.linked_task_actions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.linked_task_actions</dfn>:  Stores an action for a linked task step.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from linked_task_step_id on this table to id on table, <a href="#public.linked_task_steps_anchor">public.linked_task_steps</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this record is associated with.</td><tr>
<tr class="field"><td>linked_task_step_id</td><td>integer</td><td>The id of the task step that this record is associated with.</td><tr>
<tr class="field"><td>action_type</td><td>character varying</td><td>The type of this action.</td><tr>
<tr class="field"><td>run_condition</td><td>character varying</td><td>Under what condition should this action run.</td><tr>
<tr class="field"><td>content_type</td><td>character varying</td><td>The type of content of this action.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
</tbody>
</table>
<a name="public.linked_task_child_jobs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.linked_task_child_jobs</dfn>:  A job for a child step of a linked task.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from linked_task_job_id on this table to id on table, <a href="#public.linked_task_jobs_anchor">public.linked_task_jobs</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from linked_task_step_id on this table to id on table, <a href="#public.linked_task_steps_anchor">public.linked_task_steps</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from linked_task_id on this table to id on table, <a href="#public.linked_tasks_anchor">public.linked_tasks</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this record is associated with.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
<tr class="field"><td>linked_task_id</td><td>integer</td><td>The linked task this child job belongs to.</td><tr>
<tr class="field"><td>linked_task_job_id</td><td>integer</td><td>The parent linked task job this child job belongs to.</td><tr>
<tr class="field"><td>background_job_id</td><td>integer</td><td>The background job this linked task job is associated with.</td><tr>
<tr class="field"><td>linked_task_step_id</td><td>integer</td><td>The step of the linked task this child job is associated with.</td><tr>
<tr class="field"><td>completed_at</td><td>timestamp without time zone</td><td>The time the linked task child job completed.</td><tr>
<tr class="field"><td>finish_code</td><td>integer</td><td>Finish code of this linked task job. 0=Success, 1=Failure, 2=Cancelled</td><tr>
<tr class="field"><td>started_at</td><td>timestamp without time zone</td><td>The time the linked task child job started.</td><tr>
</tbody>
</table>
<a name="public.linked_task_jobs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.linked_task_jobs</dfn>:  A specific run of a a linked task.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from linked_task_id on this table to id on table, <a href="#public.linked_tasks_anchor">public.linked_tasks</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this record is associated with.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
<tr class="field"><td>completed_at</td><td>timestamp without time zone</td><td>The time the linked task job completed.</td><tr>
<tr class="field"><td>linked_task_id</td><td>integer</td><td>The linked task this job belongs to.</td><tr>
<tr class="field"><td>finish_code</td><td>integer</td><td>Finish code of this linked task job. 0 = Success, 1 = Failure</td><tr>
<tr class="field"><td>current_step_id</td><td>integer</td><td>The step number of the linked task this job is on.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>Id of the user who created this linked task job.</td><tr>
<tr class="field"><td>started_at</td><td>timestamp without time zone</td><td>The time the linked task job started.</td><tr>
</tbody>
</table>
<a name="public.linked_task_steps_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.linked_task_steps</dfn>:  Stores a step for a linked task.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from linked_task_id on this table to id on table, <a href="#public.linked_tasks_anchor">public.linked_tasks</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from task_id on this table to id on table, <a href="#public.tasks_anchor">public.tasks</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this record is associated with.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
<tr class="field"><td>linked_task_id</td><td>integer</td><td>Linked task this step belongs to.</td><tr>
<tr class="field"><td>task_id</td><td>integer</td><td>Task for this linked task step.</td><tr>
<tr class="field"><td>step_number</td><td>integer</td><td>Which number in this sequence this step is.</td><tr>
<tr class="field"><td>stop_downstream_on_failure</td><td>boolean</td><td>Whether failure of this step should stop downstream processing.</td><tr>
<tr class="field"><td>content_type</td><td>character varying</td><td>The content type for the linked task step</td><tr>
<tr class="field"><td>content_id</td><td>integer</td><td>The content id for the linked task step</td><tr>
</tbody>
</table>
<a name="public.linked_task_triggers_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.linked_task_triggers</dfn>:  A trigger for a linked task. Will fire on completion on the associated task.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from linked_task_id on this table to id on table, <a href="#public.linked_tasks_anchor">public.linked_tasks</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from task_id on this table to id on table, <a href="#public.tasks_anchor">public.tasks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this record is associated with.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
<tr class="field"><td>task_id</td><td>integer</td><td>The task this trigger is associated with.</td><tr>
<tr class="field"><td>linked_task_id</td><td>integer</td><td>The linked task this trigger is associated with.</td><tr>
</tbody>
</table>
<a name="public.linked_tasks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.linked_tasks</dfn>:  Stores linked tasks, which allow users to specify tasks to run after each other in sequence.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from creator_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this record is associated with.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
<tr class="field"><td>creator_id</td><td>integer</td><td>User id who created this linked task.</td><tr>
</tbody>
</table>
<a name="public.local_names_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.local_names</dfn>:  Contains translations of certain words or phrases that are relevant to some Tableau Server database constructs.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>language_id</td><td>character varying</td><td>Abbreviation for a particular language.</td><tr>
<tr class="field"><td>obj_name</td><td>character varying</td><td>A string that uniquly represents the object to be translated.  This name, by convention, is very similar, if not identical to the name field for English.</td><tr>
<tr class="field"><td>obj_type</td><td>character varying</td><td>The type of the object. For example, "Project" or "Site".</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>How to call this object in the specified language, as given by language_id.</td><tr>
</tbody>
</table>
<a name="public.materialize_views_job_sos_directory_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialize_views_job_sos_directory</dfn>:  Each row in the table is a mapping of a workbook id and revision in a materialize views job to the sos directories that the job requires.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>ID of the workbook whose query results in this materialized view. This id is same as the id (primary key) of the public.workbooks table in the database.</td><tr>
<tr class="field"><td>workbook_revision</td><td>text</td><td>Revision of the workbook whose id is the workbook_id column.</td><tr>
<tr class="field"><td>materialized_query_directory_sos_id</td><td>text</td><td>id of the directory in sos that contains the queries that are materialized.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the materialize_views_job_sos_directory.</td><tr>
<tr class="field"><td>background_job_luid</td><td>uuid</td><td>The luid of the background job that created the sos directory to store its materialized-views related files.</td><tr>
<tr class="field"><td>saved_at</td><td>timestamp without time zone</td><td>The timestamp when the sos id is inserted to the table.</td><tr>
</tbody>
</table>
<a name="public.materialized_queries_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialized_queries</dfn>:  This table stores the information for materialized queries.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from hyper_database_id on this table to id on table, <a href="#public.hyper_databases_anchor">public.hyper_databases</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>materialized_view_indexing_key</td><td>text</td><td>Indexing key of materialized views.</td><tr>
<tr class="field"><td>logical_query_xml</td><td>text</td><td>Logical query in XML format of the materialized query.</td><tr>
<tr class="field"><td>metadata_xml</td><td>text</td><td>Metadata in XML format of the materialized query.</td><tr>
<tr class="field"><td>serialized_source_connection_attributes</td><td>text</td><td>Serialized connection attributes of the materialized query datasource.</td><tr>
<tr class="field"><td>serialized_mv_connection_attributes</td><td>text</td><td>Serialized connection attributes of the materialized view.</td><tr>
<tr class="field"><td>materialized_view_table_name</td><td>text</td><td>Name of the table storing materialized view of the query.</td><tr>
<tr class="field"><td>source_relation_xml</td><td>text</td><td>Datasource relation XML of the materialized query.</td><tr>
<tr class="field"><td>query_execution_timestamp</td><td>timestamp without time zone</td><td>The timestamp right before the query is executed.</td><tr>
<tr class="field"><td>materialization_job_created_at</td><td>timestamp without time zone</td><td>The timestamp when the materialization job is created.</td><tr>
<tr class="field"><td>materialized_view_expiration_time</td><td>timestamp without time zone</td><td>The timestamp at which the view is considered obsolete and becomes a candidate for removal by background job ReapExpiredMaterializedViews.</td><tr>
<tr class="field"><td>encryption_key_id</td><td>text</td><td>Encryption key id of the materialized view when the materialized view is encrypted, null otherwise.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site. This id is same as the id (primary key) of the public.sites table.</td><tr>
<tr class="field"><td>materialized_view_sos_id</td><td>text</td><td>ID of the directory in sos that contains the materialized view.</td><tr>
<tr class="field"><td>hyper_database_id</td><td>integer</td><td>A foreign key to hyper_databases.id</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>the workbook_id for which this materialized query is for</td><tr>
</tbody>
</table>
<a name="public.materialized_sheets_to_queries_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialized_sheets_to_queries</dfn>:  Enabled sheets and materialized queries are many to many relation. This table stores the mapping between sheets and materialized queries.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from materialized_query_id on this table to id on table, <a href="#public.materialized_queries_anchor">public.materialized_queries</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>ID of the worksheet. This id is same as the id (primary key) of the public.views table.</td><tr>
<tr class="field"><td>materialized_query_id</td><td>integer</td><td>ID of the materialized query. This id is the same as the id (primary key) of the public.materialized_queries table.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site. This id is same as the id (primary key) of the public.sites table.</td><tr>
</tbody>
</table>
<a name="public.materialized_views_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialized_views</dfn>:  This table stores the materialized views for queries in workbooks.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from materialized_view_connection_id on this table to id on table, <a href="#public.materialized_views_connections_anchor">public.materialized_views_connections</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>ID of the workbook whose query results in this materialized view. This id is same as the id (primary key) of the public.workbooks table in the database.</td><tr>
<tr class="field"><td>workbook_revision</td><td>text</td><td>Revision of the workbook whose id is the workbook_id column.</td><tr>
<tr class="field"><td>materialized_query_file_name</td><td>text</td><td>Name of the file that stores the materialized query in sos.</td><tr>
<tr class="field"><td>table_name</td><td>text</td><td>Name of the table storing the materialized view of the query.</td><tr>
<tr class="field"><td>materialized_query_directory_sos_id</td><td>text</td><td>id of the directory in sos that contains the queries that are materialized.</td><tr>
<tr class="field"><td>materialized_view_connection_id</td><td>integer</td><td>ID (foreign key from materialized view connection table) of the connection that stores the materialized view</td><tr>
<tr class="field"><td>materialized_view_expiration_time</td><td>timestamp without time zone</td><td>Timestamp at which the view is considered obsolete and becomes a candidate for removal by MaterializedViewService.garbageCollector.</td><tr>
<tr class="field"><td>elapsed_query_seconds</td><td>real</td><td>Total elapsed time (in seconds) for the query.</td><tr>
<tr class="field"><td>materialized_query_result_size_lower_bound_bytes</td><td>bigint</td><td>materialized query result size without indrect referenced values(such as string).</td><tr>
<tr class="field"><td>materialized_query_result_size_upper_bound_bytes</td><td>bigint</td><td>materialized query result size with indrect referened values (such as string).</td><tr>
<tr class="field"><td>materialization_job_created_at</td><td>timestamp without time zone</td><td>Stores the timestamp at which the materialization job was created</td><tr>
<tr class="field"><td>query_view_bitmap</td><td>bytea</td><td>Bitmap to store a mapping of all the views that use the query</td><tr>
<tr class="field"><td>query_hash</td><td>numeric</td><td>unsigned 64 bit hash of the materialized logical query.</td><tr>
<tr class="field"><td>query_hash_string</td><td>character varying</td><td>string representation of hash of the materialized logical query.</td><tr>
<tr class="field"><td>query_execution_timestamp</td><td>timestamp without time zone</td><td>Timestamp when query is executed in a materialization job.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the materialized_views.</td><tr>
</tbody>
</table>
<a name="public.materialized_views_bloom_filters_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialized_views_bloom_filters</dfn>:  This table stores the bloom filters indicating materialized sites/workbooks.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>bloom_filter_type</td><td>smallint</td><td>Type of this bloom filter</td><tr>
<tr class="field"><td>update_timestamp</td><td>timestamp without time zone</td><td>Timestamp when the bloomfilter is updated.</td><tr>
<tr class="field"><td>serialized_bloom_filter</td><td>bytea</td><td>Serialized bloom filters.</td><tr>
<tr class="field"><td>stale</td><td>boolean</td><td>Flag to indicate whether or not we need to rebuild the bloom filter.</td><tr>
</tbody>
</table>
<a name="public.materialized_views_connections_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialized_views_connections</dfn>:  This table stores the information required to fetch materialized views files from the server where they are stored.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the table.</td><tr>
<tr class="field"><td>materialized_views_directory_sos_id</td><td>text</td><td>Id of the sos directory in which the materialized views are contained.</td><tr>
<tr class="field"><td>datasource_name</td><td>text</td><td>Name of the data source against which we run the query to generate the materialized view.</td><tr>
<tr class="field"><td>serialized_source_connection_attributes</td><td>text</td><td>Serialized connection attributes for the source datasource connection from which the materialized views are created.</td><tr>
<tr class="field"><td>serialized_materialized_view_connection_attributes</td><td>text</td><td>Serialized connection attributes to connect to the datasource storing the materialized views.</td><tr>
<tr class="field"><td>logical_query_cache_key_xml</td><td>text</td><td>XML containing the datasource columns that is used for generating the cache key for logical query cache.  This is known as relationXML in parts of the code.</td><tr>
<tr class="field"><td>encryption_key_id</td><td>character varying</td><td>If not null, the ID of materialized views encryption key (KEK).</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>If not null, ID of the site, is same as (not fkey of) the id (primary key) of the public.sites table.</td><tr>
</tbody>
</table>
<a name="public.materialized_views_job_stats_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialized_views_job_stats</dfn>:  This table stores daily aggregated materialized views job stats.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site. This id is same as the id (primary key) of the public.sites table.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>ID of the view. This id is same as the id (primary key) of the public.views table.</td><tr>
<tr class="field"><td>completed_at_day</td><td>timestamp without time zone</td><td>A timestamp truncated at the day.</td><tr>
<tr class="field"><td>job_count</td><td>integer</td><td>the number of materialized views jobs during the day.</td><tr>
<tr class="field"><td>job_total_run_time_sec</td><td>double precision</td><td>the total run time of materialized views jobs during the day.</td><tr>
<tr class="field"><td>job_failure_count</td><td>integer</td><td>the total job failure count for the view on a given day</td><tr>
</tbody>
</table>
<a name="public.materialized_views_metadata_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialized_views_metadata</dfn>:  This table stores the metadata for the materialized view service.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>key</td><td>character varying</td><td>The key name of the metadata</td><tr>
<tr class="field"><td>value</td><td>character varying</td><td>The value of the metadata</td><tr>
</tbody>
</table>
<a name="public.materialized_views_object_status_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialized_views_object_status</dfn>:  This table stores the materialized views state configuration for objects for which the feature is enabled.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from object_id on this table to id on table, <a href="#public.workbooks_anchor">public.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site. This id is same as the id (primary key) of the public.sites table.</td><tr>
<tr class="field"><td>object_id</td><td>integer</td><td>ID of the object (workbook or flow).</td><tr>
<tr class="field"><td>state</td><td>smallint</td><td>A small int representing the current state of the materialized views for the site (and workbook if it is not null).</td><tr>
<tr class="field"><td>change_timestamp</td><td>timestamp without time zone</td><td>Timestamp of the last change made to the record.</td><tr>
<tr class="field"><td>id</td><td>integer</td><td>auto generated integer primary key.</td><tr>
<tr class="field"><td>sheet_stats</td><td>character varying</td><td>the stats of materialized views for worksheets.</td><tr>
</tbody>
</table>
<a name="public.materialized_views_query_store_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialized_views_query_store</dfn>:  for storing logical queries and their stats from the traffic</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>auto-generated id</td><tr>
<tr class="field"><td>workbook_luid</td><td>text</td><td>the workbook luid for the query, it is not a foreign key to workbooks.luid</td><tr>
<tr class="field"><td>logical_query_xml</td><td>text</td><td>serialized logical query tree</td><tr>
<tr class="field"><td>metadata</td><td>text</td><td>serialized metadata</td><tr>
<tr class="field"><td>connection_info</td><td>text</td><td>serialized connection info</td><tr>
<tr class="field"><td>count</td><td>integer</td><td>how many times the query was excuted</td><tr>
<tr class="field"><td>cache_hit_count</td><td>integer</td><td>how many times the query hit on cache</td><tr>
<tr class="field"><td>bootstrap_query_count</td><td>integer</td><td>how many times the query was used in bootstraps</td><tr>
<tr class="field"><td>sum_prebuffered_bytes</td><td>integer</td><td>cumulative prebuffered bytes of query results</td><tr>
<tr class="field"><td>sum_elapsed_in_sec</td><td>double precision</td><td>cumulative elapsed time in seconds of query execution</td><tr>
<tr class="field"><td>sheet_luids</td><td>text</td><td>sheet luids for which this query has been executed</td><tr>
<tr class="field"><td>saved_at</td><td>timestamp without time zone</td><td>the time when this record is saved to the table</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>the site id for which the query is executed</td><tr>
<tr class="field"><td>hash_index</td><td>text</td><td>the hash string that makes sure a unique query is saved once an hour</td><tr>
<tr class="field"><td>user_luids</td><td>text</td><td>user luids in CSV if query is user specific</td><tr>
</tbody>
</table>
<a name="public.materialized_views_sheet_performance_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialized_views_sheet_performance</dfn>:  This table stores daily aggregated materialized views job stats.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from workbook_id on this table to id on table, <a href="#public.workbooks_anchor">public.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site. This id is same as the id (primary key) of the public.sites table.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>ID of the site. This id is same as the id (primary key) of the public.workbooks table.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>ID of the view. This id is same as the id (primary key) of the public.views table.</td><tr>
<tr class="field"><td>day_timestamp</td><td>timestamp without time zone</td><td>A timestamp truncated at the day.</td><tr>
<tr class="field"><td>total_load_time_in_seconds</td><td>double precision</td><td>the total bootstrap time for the view on a given day</td><tr>
<tr class="field"><td>load_count</td><td>integer</td><td>the number of visits to the view.</td><tr>
<tr class="field"><td>materialized_status</td><td>smallint</td><td>an integer showing if the view is loaded with or without materialized views</td><tr>
<tr class="field"><td>total_query_batch_time_in_seconds</td><td>double precision</td><td>the total query batch time for the view on a given day</td><tr>
<tr class="field"><td>query_batch_count</td><td>integer</td><td>the number of query batch events for a view on a given day</td><tr>
</tbody>
</table>
<a name="public.materialized_views_sheet_status_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialized_views_sheet_status</dfn>:  This table stores the materialized views state configuration for worksheets for which the feature is enabled.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from workbook_id on this table to id on table, <a href="#public.workbooks_anchor">public.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site. This id is same as the id (primary key) of the public.sites table.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>ID of the workbook. This id is same as the id (primary key) of the public.workbooks table.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>ID of the worksheet. This id is same as  the id (primary key) of the public.views table.</td><tr>
<tr class="field"><td>state</td><td>smallint</td><td>A small int representing the current state of the materialized views for the worksheet.</td><tr>
<tr class="field"><td>change_timestamp</td><td>timestamp without time zone</td><td>Timestamp of the last change made to the record.</td><tr>
<tr class="field"><td>sheet_stats</td><td>text</td><td>the stats of materialized views for the worksheet.</td><tr>
<tr class="field"><td>estimated_disk_usage_bytes</td><td>bigint</td><td>An estimate of materialized views size for this sheet when the state of the sheet is Materialized.</td><tr>
<tr class="field"><td>state_change_reason</td><td>character varying</td><td>the reason for changing to current state</td><tr>
<tr class="field"><td>last_enabled_timestamp</td><td>timestamp without time zone</td><td>the last enabled timestamp of the view</td><tr>
</tbody>
</table>
<a name="public.materialized_views_site_resource_limit_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.materialized_views_site_resource_limit</dfn>:  This table stores the resource limit for acceleration for each site.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site. This id is same as the id (primary key) of the public.sites table.</td><tr>
<tr class="field"><td>views_limit</td><td>integer</td><td>This is the max number of views allowed for acceleration for a site.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Timestamp of the last change made to the record.</td><tr>
<tr class="field"><td>auto_suspend_failures_limit</td><td>integer</td><td>the total job failure count limit for the view</td><tr>
<tr class="field"><td>auto_suspend_failures_limit_time_period</td><td>character varying</td><td>the span over which the failures limit of a view has to be considered for auto suspension</td><tr>
<tr class="field"><td>auto_suspend_acceleration_improvement_threshold</td><td>double precision</td><td>the acceleration improvement threshold for the view</td><tr>
<tr class="field"><td>auto_suspend_views_limit</td><td>integer</td><td>the total views limit for the view</td><tr>
<tr class="field"><td>auto_suspend_views_limit_time_period</td><td>character varying</td><td>the total views limit time period whic has to be considered for auto suspension</td><tr>
</tbody>
</table>
<a name="public.mentions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.mentions</dfn>:  Mentions for comments.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from comment_id on this table to id on table, <a href="#public.comments_anchor">public.comments</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>comment_id</td><td>integer</td><td>A foreign key reference to the comment that the mention is attached to.</td><tr>
<tr class="field"><td>target_type</td><td>character varying</td><td>The type of the mention target.</td><tr>
<tr class="field"><td>target_id</td><td>integer</td><td>The id of the target.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the mentions belong to.</td><tr>
<tr class="field"><td>mention_id</td><td>integer</td><td>The ID used to map the @{id} in the comment text to the user in the corresponding mentions row.</td><tr>
</tbody>
</table>
<a name="public.metric_metrics_aggregations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.metric_metrics_aggregations</dfn>:  Each record represents a partial aggregation of analytics for a given metric in a given time interval.  It is often necessary to sum across multiple rows to find a total for a given time interval.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from metric_id on this table to id on table, <a href="#public.metrics_anchor">public.metrics</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>metric_id</td><td>integer</td><td>A foreign key reference to the metric.</td><tr>
<tr class="field"><td>day_index</td><td>integer</td><td>Records what day of the month the analytics are aggregated over.  When 0, the aggregation is for the month and year as designated by month_index and year_index.</td><tr>
<tr class="field"><td>month_index</td><td>integer</td><td>Records what month of the year the analytics are aggregated over.  When 0, the aggregation is for the year as designated by year_index.</td><tr>
<tr class="field"><td>year_index</td><td>integer</td><td>Records what year the analytics are aggregated over</td><tr>
<tr class="field"><td>view_count</td><td>integer</td><td>Records the number of times a metric was viewed in the given time interval.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the metric metrics aggregation belong to.</td><tr>
</tbody>
</table>
<a name="public.metrics_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.metrics</dfn>:  Each record represents a Metric.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from customized_view_id on this table to id on table, <a href="#public.customized_views_anchor">public.customized_views</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from dataalert_id on this table to id on table, <a href="#public.data_alerts_anchor">public.data_alerts</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from project_id on this table to id on table, <a href="#public.projects_anchor">public.projects</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from workbook_id on this table to id on table, <a href="#public.workbooks_anchor">public.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>A descriptive name.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The last publisher.</td><tr>
<tr class="field"><td>project_id</td><td>integer</td><td>The associated project.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The associated site.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created, in UTC.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>A user-supplied description.</td><tr>
<tr class="field"><td>embedded</td><td>text</td><td>The encrypted keychain with credentials.</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>The asset encryption key used to encrypt the keychain in the embedded column.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
<tr class="field"><td>datasource_id</td><td>integer</td><td>The datasource from which the metric queries its data.</td><tr>
<tr class="field"><td>dataalert_id</td><td>integer</td><td>The data alert from which the metric queries its data.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>The workbook from which the metric queries its data.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>The view within the workbook specified by workbook_id.</td><tr>
<tr class="field"><td>last_scheduled_at</td><td>timestamp without time zone</td><td>The last time a refresh for this Metric was scheduled</td><tr>
<tr class="field"><td>last_refreshed_at</td><td>timestamp without time zone</td><td>The last time a Metric's data was refreshed successfully</td><tr>
<tr class="field"><td>incomplete_refresh_attempts</td><td>integer</td><td>The amount of incomplete attempts to refresh this Metric</td><tr>
<tr class="field"><td>customized_view_id</td><td>integer</td><td>The ID of the customized view the metric was created on.</td><tr>
<tr class="field"><td>suspend_state</td><td>integer</td><td>0: metric is not suspended, 1: metric was auto-suspended, 2: metric was manually suspended.</td><tr>
<tr class="field"><td>connected_view_path</td><td>character varying</td><td>The connected view path for the metric</td><tr>
<tr class="field"><td>connected_view_name</td><td>character varying</td><td>The connected view name for the metric</td><tr>
</tbody>
</table>
<a name="public.metrics_definition_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.metrics_definition</dfn>:  Each record represents a metrics definition.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>uuid</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>metric_luid</td><td>uuid</td><td>Metric unique identifier</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>An identifier which is unique to the site</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Timestamp when this metric definition is created</td><tr>
<tr class="field"><td>metric_definition</td><td>bytea</td><td>Definition of the metric</td><tr>
</tbody>
</table>
<a name="public.metrics_snapshot_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.metrics_snapshot</dfn>:  Each record represents a metrics snapshot.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from metric_view_id on this table to id on table, <a href="#public.metrics_view_anchor">public.metrics_view</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>uuid</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>metric_view_id</td><td>uuid</td><td>An identifier for metric view</td><tr>
<tr class="field"><td>client_timestamp</td><td>timestamp without time zone</td><td>Timestamp when this metric snapshot is created on client</td><tr>
<tr class="field"><td>server_timestamp</td><td>timestamp without time zone</td><td>Timestamp when this metric snapshot is created on server</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>An identifier which is unique to the site</td><tr>
</tbody>
</table>
<a name="public.metrics_snapshot_delta_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.metrics_snapshot_delta</dfn>:  Each record represents a metrics snapshot delta.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from metric_view_id on this table to id on table, <a href="#public.metrics_view_anchor">public.metrics_view</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>uuid</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>metric_view_id</td><td>uuid</td><td>An identifier for metric snapshot</td><tr>
<tr class="field"><td>delta_timestamp</td><td>timestamp without time zone</td><td>Timestamp when this metric snapshot delta is created</td><tr>
<tr class="field"><td>process_key</td><td>character varying</td><td>Process Key for this metric snapshot delta</td><tr>
<tr class="field"><td>data</td><td>bytea</td><td>Data for metric snapshot delta</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>An identifier which is unique to the site</td><tr>
</tbody>
</table>
<a name="public.metrics_view_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.metrics_view</dfn>:  Each record represents a metrics view.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>uuid</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>metric_luid</td><td>uuid</td><td>An identifier which is unique to the metric definition</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>An identifier which is unique to the site</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>Name of the metric view</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Timestamp when this metric view is created</td><tr>
<tr class="field"><td>columns</td><td>bytea</td><td>Metrics columns blob</td><tr>
</tbody>
</table>
<a name="public.mobile_security_server_settings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.mobile_security_server_settings</dfn>:  A key-value store for mobile secuirty server settings.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key.</td><tr>
<tr class="field"><td>key</td><td>text</td><td>String key for the setting.</td><tr>
<tr class="field"><td>value</td><td>text</td><td>String value for the setting. Can be parsed into other formats by clients.</td><tr>
</tbody>
</table>
<a name="public.mobile_security_site_settings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.mobile_security_site_settings</dfn>:  A key-value store for mobile security site settings.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site id that setting applies to.</td><tr>
<tr class="field"><td>key</td><td>text</td><td>String key for the setting.</td><tr>
<tr class="field"><td>value</td><td>text</td><td>String value for the setting. Can be parsed into other formats by clients.</td><tr>
</tbody>
</table>
<a name="public.most_recent_refreshes_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.most_recent_refreshes</dfn>:  most recent refresh data for alerts</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>historical_event_type_id</td><td>integer</td><td>historical event type of the refresh</td><tr>
<tr class="field"><td>worker</td><td>text</td><td>worker executing refresh</td><tr>
<tr class="field"><td>duration_in_ms</td><td>integer</td><td>duration of refresh</td><tr>
<tr class="field"><td>details</td><td>text</td><td>details of refresh</td><tr>
<tr class="field"><td>task_id</td><td>integer</td><td>task id</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>site id</td><tr>
<tr class="field"><td>data_connection_id</td><td>integer</td><td>data connection id</td><tr>
<tr class="field"><td>is_failure</td><td>boolean</td><td>whether or not refresh failed</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>when refresh occurred</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>workbook being refreshed</td><tr>
<tr class="field"><td>datasource_id</td><td>integer</td><td>datasource being refreshed</td><tr>
<tr class="field"><td>has_retry_job</td><td>boolean</td><td>Indicator for refresh job in background job table, if there is pending/running refresh job, the value is true.</td><tr>
</tbody>
</table>
<a name="public.most_recent_subscription_runs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.most_recent_subscription_runs</dfn>:  most recent subscription runs data for suspend subscriptions</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from subscription_id on this table to id on table, <a href="#public.subscriptions_anchor">public.subscriptions</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>subscription_id</td><td>integer</td><td>subscription id</td><tr>
<tr class="field"><td>details</td><td>text</td><td>details of subscription run in plain text</td><tr>
<tr class="field"><td>completed_at</td><td>timestamp without time zone</td><td>The time at which the subscription job was last completed and this record was last updated or created</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the subscription belongs to.</td><tr>
</tbody>
</table>
<a name="public.mru_list_entries_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.mru_list_entries</dfn>:  Holds most recently used list entries. The records here are linked to the lists to which they belong. Those lists are defined in the mru_lists table.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from mru_list_id on this table to id on table, <a href="#public.mru_lists_anchor">public.mru_lists</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>mru_list_id</td><td>integer</td><td>A foreign key reference to the mru_list record to which this item belongs.</td><tr>
<tr class="field"><td>useable_id</td><td>integer</td><td>A kind of "polymorphic" foreign key reference. It contains the id of the item to which this entry refers. Look for it in the table indicated by the useable_type field.</td><tr>
<tr class="field"><td>useable_type</td><td>character varying</td><td>One of "User" "View" "Project" "Workbook" or "Tag". Indicates the type of item that this is.</td><tr>
<tr class="field"><td>position</td><td>integer</td><td>When the items are shown in order, this field defines that order.</td><tr>
<tr class="field"><td>used_at</td><td>timestamp without time zone</td><td>The last time at which the item referred to by this entry was accessed.</td><tr>
<tr class="field"><td>usedobj_name</td><td>text</td><td>The name of the item referred to by this entry.</td><tr>
<tr class="field"><td>usedobj_url</td><td>text</td><td>A URL-like identifier for the item referred to by this entry.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the MRU list entry belong to.</td><tr>
</tbody>
</table>
<a name="public.mru_lists_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.mru_lists</dfn>:  Most recently used lists by user. The actual list contents are in the mru_list_entries table.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>A foreign key reference to the user who is associated with this list.</td><tr>
<tr class="field"><td>list_type</td><td>character varying</td><td>One of "users" "views" "projects" "workbooks" or "tags".</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the MRU list belong to.</td><tr>
</tbody>
</table>
<a name="public.next_gen_permissions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.next_gen_permissions</dfn>:  This table provides a flexible means of describing which users and groups have been granted which capabilities, on which things. Be aware that permissions is a complex topic and that this table does not contain all relevant information about permissions. For example, some permissions are given, automatically, to owners of workbooks or projects.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from capability_id on this table to id on table, <a href="#public.capabilities_anchor">public.capabilities</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>authorizable_type</td><td>character varying</td><td>Describes the type of thing for which permissions are being specified. Must be one of "Project" "Workbook" "Datasource" "View" or "NamedResource".</td><tr>
<tr class="field"><td>authorizable_id</td><td>integer</td><td>The id value of the thing for which permissions are being specified. So, for example, if authorizable_type were "Workbook" then authorizable_id would correspond to the id value of the workbook in question. </td><tr>
<tr class="field"><td>grantee_id</td><td>integer</td><td>Refers to either the id of the "users" table or the id of the "groups" table depending on the value of grantee_type.</td><tr>
<tr class="field"><td>grantee_type</td><td>character varying</td><td>Permissions can be assigned to either users or groups, and this tells you which. Entry must be one of "User" or "Group".</td><tr>
<tr class="field"><td>capability_id</td><td>integer</td><td>Indicates which capability is to be granted or denied by this record. It is a foreign key link to the capabilities table where the corresponding record describes the nature of the capability in question.</td><tr>
<tr class="field"><td>permission</td><td>integer</td><td>An integer from 1 to 4 that combines whether the permission is applied to a user or to a group (which can also be seen from grantee_type) as well as whether this is granting or denying the capability. The meaning of the values is: 1: grant to group, 2: deny to group, 3: grant to user, 4: deny to user. Ascending order corresponds to increasing precedence. For example, a capability denied to a group (2) can be overriden by the same capability granted specifically to a user in that group (3).</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the permissions belong to.</td><tr>
</tbody>
</table>
<a name="public.nlp_suggested_questions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.nlp_suggested_questions</dfn>:  Suggested questions</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#public.lenses_anchor">public.lenses</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from parent_group_id on this table to id on table, <a href="#public.nlp_suggestion_groups_anchor">public.nlp_suggestion_groups</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from published_datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>expression</td><td>text</td><td>Serialized and versioned expression</td><tr>
<tr class="field"><td>parent_group_luid</td><td>text</td><td>LUID of the question's parent group</td><tr>
<tr class="field"><td>sort_order</td><td>integer</td><td>The position at which the question should be displayed within its parent group</td><tr>
<tr class="field"><td>luid</td><td>text</td><td>The unique identifier for this row to be referenced by application code</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of datasource the question belongs to</td><tr>
<tr class="field"><td>published_datasource_id</td><td>integer</td><td>Datasource ID of datasource the question belongs to</td><tr>
<tr class="field"><td>interpretation_nlg</td><td>text</td><td>Human readable text of the suggested question</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>colloquial_alias</td><td>text</td><td>User-defined colloquial alias of a suggested question</td><tr>
<tr class="field"><td>parent_group_id</td><td>integer</td><td>ID of the parent suggestion group a question belongs to</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>id of the lens for which the suggestion is applicable</td><tr>
</tbody>
</table>
<a name="public.nlp_suggestion_groups_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.nlp_suggestion_groups</dfn>:  Suggested question groups</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#public.lenses_anchor">public.lenses</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from published_datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>group_name</td><td>text</td><td>Name of the group of suggested questions</td><tr>
<tr class="field"><td>description</td><td>text</td><td>Description of the group of suggested questions</td><tr>
<tr class="field"><td>sort_order</td><td>integer</td><td>The position at which the group should be displayed relative to other groups</td><tr>
<tr class="field"><td>luid</td><td>text</td><td>The unique identifier for this row to be referenced by application code</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of datasource the suggestion group belongs to</td><tr>
<tr class="field"><td>published_datasource_id</td><td>integer</td><td>Datasource ID of datasource the suggestion group belongs to</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>id of the lens for which the suggestion group is applicable</td><tr>
</tbody>
</table>
<a name="public.oauth_authorization_codes_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.oauth_authorization_codes</dfn>:  OAuth authorization codes</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Id of this oauth authorizations code row</td><tr>
<tr class="field"><td>uuid</td><td>uuid</td><td>UUID of an oauth authorization code</td><tr>
<tr class="field"><td>expires_at</td><td>timestamp with time zone</td><td>Expiration of the authorization code</td><tr>
</tbody>
</table>
<a name="public.oauth_clients_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.oauth_clients</dfn>:  A map that register oauth CI/CS/redierctUri per site per dbclass.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site where the oauth client applies to</td><tr>
<tr class="field"><td>db_class</td><td>character varying</td><td>The database class name this oauth client is used for.</td><tr>
<tr class="field"><td>instance_url</td><td>character varying</td><td>The instanceUrl for this oauth client, only used for oauth class supports multiple domain such as Snowflake. Can be null.</td><tr>
<tr class="field"><td>client_id</td><td>character varying</td><td>The clientId for this oauth client.</td><tr>
<tr class="field"><td>client_secret</td><td>text</td><td>The clientSecret for this oauth client.</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>The asset_key_id which cleintSecret is encrypted with.</td><tr>
<tr class="field"><td>redirect_uri</td><td>character varying</td><td>The redirectUri for this oauth client.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time when this oauthClient was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time when this oauthClient was updated at.</td><tr>
<tr class="field"><td>oauth_config_id</td><td>character varying</td><td>The oauth config id for this registered oauth client, can be null</td><tr>
</tbody>
</table>
<a name="public.oauth_request_tokens_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.oauth_request_tokens</dfn>:  Table of tokens used for OAuth authorization requests.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>entry_db_class</td><td>character varying</td><td>The connection class of the connection to which the token will belong.</td><tr>
<tr class="field"><td>entry_db_subclass</td><td>character varying</td><td>The connection subclass of the connection to which the token will belong</td><tr>
<tr class="field"><td>request_token</td><td>text</td><td>The request token which can be exchanged for an access token along with the request token secret.</td><tr>
<tr class="field"><td>request_token_secret_encrypted</td><td>text</td><td>The encrypted request token secret which can be exchanged for an access token along with the request token</td><tr>
<tr class="field"><td>is_used</td><td>boolean</td><td>Whether or not the request token/request token secret were exchanged for an access token or not.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was last updated.</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>ID of key used to encrypt the token secret.</td><tr>
</tbody>
</table>
<a name="public.oauth_service_code_verifiers_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.oauth_service_code_verifiers</dfn>:  Short lived storage for the code verifier used in PKCE requests.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier for the code verifier.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site where the code_verifier was created at</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>User on the site requesting to authenticate with the code verifier.</td><tr>
<tr class="field"><td>db_class</td><td>character varying</td><td>The database class name this code_verifier is used for.</td><tr>
<tr class="field"><td>code_verifier</td><td>character varying</td><td>The authorization code verifier.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time when this code_verifier was created.</td><tr>
<tr class="field"><td>expires_at</td><td>timestamp without time zone</td><td>The time when this code_verifier expires, defalt per spec 1 min.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time when this code_verifier was updated at.</td><tr>
</tbody>
</table>
<a name="public.oauth_states_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.oauth_states</dfn>:  The OAuth request state, will be verified later to prevent CSRF attack.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from session_id on this table to session_id on table, <a href="#public.sessions_anchor">public.sessions</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>session_id</td><td>character varying</td><td>Id of the workgroup session. This id is same as the session_id (primary key) of the public.sessions table.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site where the OAuth state was created at.</td><tr>
<tr class="field"><td>state</td><td>text</td><td>OAuth state associated with the workgroup session and site</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the OAuth state was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The latest time the OAuth state was updated.</td><tr>
</tbody>
</table>
<a name="public.password_tokens_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.password_tokens</dfn>:  Tokens issued to client through link in email which can be redeemed to change their password</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from system_user_id on this table to id on table, <a href="#public.system_users_anchor">public.system_users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key identifier for row</td><tr>
<tr class="field"><td>guid</td><td>uuid</td><td>Unique identifier for token</td><tr>
<tr class="field"><td>salt</td><td>character varying</td><td>The salt is used to hash the password</td><tr>
<tr class="field"><td>hashed_secret</td><td>character varying</td><td>Secret portion of token thats been hashed</td><tr>
<tr class="field"><td>expires_at</td><td>timestamp without time zone</td><td>When the token becomes expired</td><tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>Reference to system user that requested the token</td><tr>
</tbody>
</table>
<a name="public.pdf_subscription_options_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.pdf_subscription_options</dfn>:  Used to store different PDF layout options.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from subscription_id on this table to id on table, <a href="#public.subscriptions_anchor">public.subscriptions</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>pdf_page_size_option</td><td>character varying</td><td>Type of page size such as A4, letter etc </td><tr>
<tr class="field"><td>pdf_page_orientation</td><td>character varying</td><td>Orientation in which page should be rendered.</td><tr>
<tr class="field"><td>subscription_id</td><td>integer</td><td>ID of the subscription with these attachments options.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site to which this entry belongs.</td><tr>
</tbody>
</table>
<a name="public.pending_search_update_items_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.pending_search_update_items</dfn>:  This table represents an item that is associated with a pending_search_update.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from pending_search_update_id on this table to id on table, <a href="#public.pending_search_updates_anchor">public.pending_search_updates</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the pending search update item.</td><tr>
<tr class="field"><td>pending_search_update_id</td><td>integer</td><td>Primary key id for pending search update associated with the item.</td><tr>
<tr class="field"><td>item_id</td><td>integer</td><td>Primary key for the item. The type of the item is determined by the pending search update.</td><tr>
</tbody>
</table>
<a name="public.permission_reasons_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.permission_reasons</dfn>:  When calculating effective permissions in the perm_users_*_capabilities functions, this table maps the integer precedence of the effective permission rule to the varchar effective permission reason.  The integer precedence is internal to the stored procedures.  The effective permission reason is returned to callers.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>precedence</td><td>integer</td><td>The integer precedence of an effective permission rule.  Higher value means higher precedence.  Used in the perm_users_*_capabilities functions.</td><tr>
<tr class="field"><td>reason</td><td>character varying</td><td>The external identifier for an effective permission rule.  Returned by the perm_users_*_capabilities functions.</td><tr>
</tbody>
</table>
<a name="public.permission_set_classes_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.permission_set_classes</dfn>:  Represents a class of permission sets.  Generally 1-to-1 with capabilities.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the permission set class record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the permission set class.</td><tr>
</tbody>
</table>
<a name="public.permission_set_items_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.permission_set_items</dfn>:  Represents a single next_gen_permission in a permission_set.  The columns mirror the next_gen_permissions table.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from capability_id on this table to id on table, <a href="#public.capabilities_anchor">public.capabilities</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from permission_set_id on this table to id on table, <a href="#public.permission_sets_anchor">public.permission_sets</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>grantee_id</td><td>integer</td><td>Refers to either the id of the "users" table or the id of the "groups" table depending on the value of grantee_type.</td><tr>
<tr class="field"><td>grantee_type</td><td>character varying</td><td>Permissions can be assigned to either users or groups, and this tells you which. Entry must be one of "User" or "Group".</td><tr>
<tr class="field"><td>capability_id</td><td>integer</td><td>Indicates which capability is to be granted or denied by this record. It is a foreign key link to the capabilities table where the corresponding record describes the nature of the capability in question.</td><tr>
<tr class="field"><td>permission</td><td>integer</td><td>An integer from 1 to 4 that combines whether the permission is applied to a user or to a group (which can also be seen from grantee_type) as well as whether this is granting or denying the capability. The meaning of the values is: 1: grant to group, 2: deny to group, 3: grant to user, 4: deny to user. Ascending order corresponds to increasing precedence. For example, a capability denied to a group (2) can be overriden by the same capability granted specifically to a user in that group (3).</td><tr>
<tr class="field"><td>permission_set_id</td><td>integer</td><td>The permission set this item is a part of.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site.</td><tr>
</tbody>
</table>
<a name="public.permission_sets_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.permission_sets</dfn>:  Represents a common set of permissions used by multiple authorizables.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from permission_set_class_id on this table to id on table, <a href="#public.permission_set_classes_anchor">public.permission_set_classes</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the permission set record.</td><tr>
<tr class="field"><td>permission_set_class_id</td><td>integer</td><td>The permission set class.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site id.</td><tr>
<tr class="field"><td>delete_if_unreferenced_after</td><td>timestamp without time zone</td><td>The earliest time it is safe to delete this permission_set if it is unreferenced by authorizable_permission_sets</td><tr>
<tr class="field"><td>permission_set_key</td><td>character varying</td><td>Hashcode representation of permission set class and grantees list capabilities.</td><tr>
</tbody>
</table>
<a name="public.permissions_templates_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.permissions_templates</dfn>:  This table provides a flexible means of describing which users and groups will be granted which capabilities by default, on non-overwrite publishes of workbooks and datasources. Be aware that permissions is a complex topic and that this table does not contain all relevant information about permissions. For example, some permissions are given, automatically, to owners of workbooks or projects.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from capability_id on this table to id on table, <a href="#public.capabilities_anchor">public.capabilities</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>template_type</td><td>character varying</td><td>Determines whether the permission template applies to workbooks or datasource.  Value must be "Workbook" or "Datasource".</td><tr>
<tr class="field"><td>grantee_id</td><td>integer</td><td>Refers to either the id of the "users" table or the id of the "groups" table depending on the value of grantee_type.</td><tr>
<tr class="field"><td>grantee_type</td><td>character varying</td><td>Permissions can be assigned to either users or groups, and this tells you which. Entry must be one of "User" or "Group".</td><tr>
<tr class="field"><td>capability_id</td><td>integer</td><td>Indicates which capability is to be granted or denied by this record. It is a foreign key link to the capabilities table where the corresponding record describes the nature of the capability in question.</td><tr>
<tr class="field"><td>permission</td><td>integer</td><td>An integer from 1 to 4 that combines whether the permission is applied to a user or to a group (which can also be seen from grantee_type) as well as whether this is granting or denying the capability. The meaning of the values is: 1: grant to group, 2: deny to group, 3: grant to user, 4: deny to user. Ascending order corresponds to increasing precedence. For example, a capability denied to a group (2) can be overridden by the same capability granted specifically to a user in that group (3).</td><tr>
<tr class="field"><td>container_type</td><td>text</td><td>Type of container for which this permission template applies, possbile value are Database and Project.</td><tr>
<tr class="field"><td>container_id</td><td>integer</td><td>Identifies the container for which this permission template applies.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the permission templates belong to.</td><tr>
</tbody>
</table>
<a name="public.pkce_tokens_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.pkce_tokens</dfn>:  Proof Key for Credential Exchange (RFC 7636) short-lived storage.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>A foreign key reference to the user.</td><tr>
<tr class="field"><td>authorization_code</td><td>bytea</td><td>The authorization code (RFC 7636).</td><tr>
<tr class="field"><td>code_challenge</td><td>bytea</td><td>The code challenge (RFC 7636).</td><tr>
<tr class="field"><td>code_challenge_method</td><td>character varying</td><td>The code challenge method (RFC 7636).</td><tr>
<tr class="field"><td>expires_at</td><td>timestamp with time zone</td><td>The time when this token expires.</td><tr>
<tr class="field"><td>redeemed_at</td><td>timestamp with time zone</td><td>The time when this token was redeemed.</td><tr>
</tbody>
</table>
<a name="public.predictive_model_version_deployments_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.predictive_model_version_deployments</dfn>:  Table contains deployment timestamps associated with a particular Predictive Model Version of a Predictive Model</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from predictive_model_version_id on this table to id on table, <a href="#public.predictive_model_versions_anchor">public.predictive_model_versions</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Generated id for predictive_model_version_deployments table primary key</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site where the parent Predictive Model was created at</td><tr>
<tr class="field"><td>predictive_model_version_id</td><td>integer</td><td>Predictive Model Version that the deployment is associated with</td><tr>
<tr class="field"><td>deployed_at</td><td>timestamp without time zone</td><td>Time when a Predictive Model Version was deployed</td><tr>
<tr class="field"><td>undeployed_at</td><td>timestamp without time zone</td><td>Time when a Predictive Model Version was undeployed</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>First time created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last time updated</td><tr>
</tbody>
</table>
<a name="public.predictive_model_versions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.predictive_model_versions</dfn>:  Table contains user-created predictive model versions associated with a predictive model</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_id on this table to id on table, <a href="#public.flows_anchor">public.flows</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from predictive_model_id on this table to id on table, <a href="#public.predictive_models_anchor">public.predictive_models</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from trainer_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_last_changed_objective_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Generated id for predictive_model_versions table primary key</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>Generated unique UUID for the predictive model</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site where predictive model version was created</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>Name of the predictive model version</td><tr>
<tr class="field"><td>description</td><td>text</td><td>Description of the predictive model version</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Latest version in record, used for optimistic locking</td><tr>
<tr class="field"><td>trainer_id</td><td>integer</td><td>User id of the person who trained the predictive model version</td><tr>
<tr class="field"><td>user_last_changed_objective_id</td><td>integer</td><td>User id of the person who last changed an objective in the predictive model version</td><tr>
<tr class="field"><td>predictive_model_id</td><td>integer</td><td>Foreign key to predictive_models.id</td><tr>
<tr class="field"><td>version_number</td><td>character varying</td><td>The numeric version of the predictive model version</td><tr>
<tr class="field"><td>trained_at</td><td>timestamp without time zone</td><td>Time that the predictive model version was trained, if any</td><tr>
<tr class="field"><td>flow_id</td><td>integer</td><td>Id of the Prep flow</td><tr>
<tr class="field"><td>objective_target_field</td><td>character varying</td><td>User-chosen target field for their model version</td><tr>
<tr class="field"><td>objective_target_field_type</td><td>character varying</td><td>The datatype of the user-chosen target field</td><tr>
<tr class="field"><td>objective_goal</td><td>character varying</td><td>User-chosen optimization goal for their model version</td><tr>
<tr class="field"><td>objective_algorithm</td><td>integer</td><td>User-chosen algorithm for their model version represented as an integer id</td><tr>
<tr class="field"><td>einstein_dataset_id</td><td>character varying</td><td>Id of the Einstein dataset</td><tr>
<tr class="field"><td>einstein_dataset_version_id</td><td>character varying</td><td>Id of the Einstein dataset version</td><tr>
<tr class="field"><td>einstein_story_id</td><td>character varying</td><td>Id of the Einstein story</td><tr>
<tr class="field"><td>einstein_run_id</td><td>character varying</td><td>Id of the Einstein training run</td><tr>
<tr class="field"><td>einstein_model_id</td><td>character varying</td><td>Id of the Einstein trained model</td><tr>
<tr class="field"><td>einstein_prediction_definition_id</td><td>character varying</td><td>Id of the Einstein prediction definition</td><tr>
<tr class="field"><td>einstein_deployed_model_id</td><td>character varying</td><td>Id of the Einstein deployed model</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>First time created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last time updated</td><tr>
</tbody>
</table>
<a name="public.predictive_models_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.predictive_models</dfn>:  Table contains user-created Predictive Models</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Generated id for predictive_models table primary key</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>Generated unique UUID for the predictive model</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site where predictive model was created at</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>User who owns the predictive model</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>Name of the predictive model</td><tr>
<tr class="field"><td>description</td><td>text</td><td>Description of the predictive model</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>First time created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last time updated</td><tr>
</tbody>
</table>
<a name="public.projects_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.projects</dfn>:  Each row of the table corresponds to a project on Tableau Server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from controlling_permissions_project_id on this table to id on table, <a href="#public.projects_anchor">public.projects</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from parent_project_id on this table to id on table, <a href="#public.projects_anchor">public.projects</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the project.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The id of the user who owns this project.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time at which this record was last changed.</td><tr>
<tr class="field"><td>state</td><td>character varying</td><td>If this is anything other than "active" then the project is inactive.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>A textual description of the project.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site which contains this project.</td><tr>
<tr class="field"><td>special</td><td>integer</td><td>Has a value of 1 if this is a special system-created project (like the default project). Otherwise it is NULL.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>The locally unique ID, which is intended for exposing externally by the server API. This is automatically generated.</td><tr>
<tr class="field"><td>controlled_permissions_enabled</td><td>boolean</td><td>Indicates whether permissions on workbooks, views, and data sources are controlled at the project level.</td><tr>
<tr class="field"><td>parent_project_id</td><td>integer</td><td>Id of the parent project. NULL for top-level projects.</td><tr>
<tr class="field"><td>admin_insights_enabled</td><td>boolean</td><td>Indicates if project is a Admin Insights project</td><tr>
<tr class="field"><td>nested_projects_permissions_included</td><td>boolean</td><td>Indicates whether nested projects should be included when permissions are controlled or not controlled at the project level. Associated with controlled_permissions_enabled column</td><tr>
<tr class="field"><td>controlling_permissions_project_id</td><td>integer</td><td>The id of the ancestor project that is controlling the permissions for this project.</td><tr>
<tr class="field"><td>lower_name</td><td>character varying</td><td>generated column that is the projects name lower cased to be used in indices</td><tr>
</tbody>
</table>
<a name="public.projects_contents_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.projects_contents</dfn>:  Table which stores the contents of projects</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from project_id on this table to id on table, <a href="#public.projects_anchor">public.projects</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id which uniquely identifies row in the table</td><tr>
<tr class="field"><td>project_id</td><td>integer</td><td>The project_id which identifies the project that the row is associated with</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site_id which identifies the site that the row is associated with</td><tr>
<tr class="field"><td>content_id</td><td>integer</td><td>The id of the content being stored in the project denoted by project_id. With content_type uniquely identifies a piece of content.</td><tr>
<tr class="field"><td>content_type</td><td>character varying</td><td>The type of content being represented by the given row. Together with content_id uniquely identifies a piece of content</td><tr>
</tbody>
</table>
<a name="public.published_connection_revision_tables_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.published_connection_revision_tables</dfn>:  Represents a table of a revision of a published connection.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from revision_id on this table to id on table, <a href="#public.published_connection_revisions_anchor">public.published_connection_revisions</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The associated site.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking."</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Time when created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last time when updated.</td><tr>
<tr class="field"><td>revision_id</td><td>integer</td><td>The associated revision.</td><tr>
<tr class="field"><td>published_connection_table_luid</td><td>uuid</td><td>The associated published connection table luid.</td><tr>
<tr class="field"><td>revisable_properties</td><td>jsonb</td><td>Properties revisable by Tableau users.</td><tr>
<tr class="field"><td>system_properties</td><td>jsonb</td><td>Misc metadata maintained by the system.</td><tr>
</tbody>
</table>
<a name="public.published_connection_revisions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.published_connection_revisions</dfn>:  Represents a revision of a published connection.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from published_connection_id on this table to id on table, <a href="#public.published_connections_anchor">public.published_connections</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The associated site.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The associated user that owns this.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking."</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Time when created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last time when updated.</td><tr>
<tr class="field"><td>revision_type</td><td>integer</td><td>Type of revision: 0=draft, 1=active, 2=historical.</td><tr>
<tr class="field"><td>published_connection_id</td><td>integer</td><td>The associated published connection.</td><tr>
<tr class="field"><td>secured_connection_attributes</td><td>jsonb</td><td>Connection attributes requiring encryption</td><tr>
<tr class="field"><td>revisable_properties</td><td>jsonb</td><td>Properties revisable by Tableau users.</td><tr>
<tr class="field"><td>system_properties</td><td>jsonb</td><td>Misc metadata maintained by the system.</td><tr>
<tr class="field"><td>revisable_properties_updated_at</td><td>timestamp without time zone</td><td>Last time revisable properties of this or child entities were updated.</td><tr>
<tr class="field"><td>revisable_properties_version</td><td>integer</td><td>Monotonically increasing number that increments every time the revisable properties of this or child entities are updated.</td><tr>
<tr class="field"><td>published_at</td><td>timestamp without time zone</td><td>Timestamp this revision is published at.</td><tr>
<tr class="field"><td>version_number</td><td>integer</td><td>Incrementing version number for published and historical revisions.</td><tr>
</tbody>
</table>
<a name="public.published_connection_tables_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.published_connection_tables</dfn>:  Represents the published connection table content type.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from published_connection_id on this table to id on table, <a href="#public.published_connections_anchor">public.published_connections</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The associated site.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the published connection table.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>The description of the published connection table.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking."</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Time when created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last time when updated.</td><tr>
<tr class="field"><td>published_connection_id</td><td>integer</td><td>The associated published connection.</td><tr>
</tbody>
</table>
<a name="public.published_connections_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.published_connections</dfn>:  Represents the published connection content type.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from project_id on this table to id on table, <a href="#public.projects_anchor">public.projects</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The associated site.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The associated user that owns this.</td><tr>
<tr class="field"><td>project_id</td><td>integer</td><td>The associated project.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the published connection.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>The description of the published connection.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking."</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Time when created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last time when updated.</td><tr>
<tr class="field"><td>activated</td><td>boolean</td><td>Whether or not this published connection was ever made available for consumption.</td><tr>
</tbody>
</table>
<a name="public.querypolicycollection_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.querypolicycollection</dfn>:  Table to store query policy collections.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Auto increment primary key.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>UUID of the policy collection.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>UUID of the site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site Id to link to public.sites.</td><tr>
<tr class="field"><td>payload</td><td>text</td><td>JSON blob representing the policy collection</td><tr>
<tr class="field"><td>update_version</td><td>integer</td><td>Field to facilitate optimistic concurrency check</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>UTC time of record creation.</td><tr>
<tr class="field"><td>created_by</td><td>uuid</td><td>Identity of record creator.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>UTC time that the record was updated last.</td><tr>
<tr class="field"><td>updated_by</td><td>uuid</td><td>Identity of a user who updated the record last.</td><tr>
<tr class="field"><td>is_published</td><td>boolean</td><td>Indicates if the policy collection has been published.</td><tr>
</tbody>
</table>
<a name="public.quota_definitions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.quota_definitions</dfn>:  Table which stores all the quota definitions for QuotaService</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id (pk) which uniquely identifies row in the table</td><tr>
<tr class="field"><td>namespace</td><td>character varying</td><td>The namespace that the quota definition belongs to</td><tr>
<tr class="field"><td>quota_name</td><td>character varying</td><td>The name of the quota</td><tr>
</tbody>
</table>
<a name="public.quota_limits_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.quota_limits</dfn>:  Table which stores the limits info for all quotas for QuotaService</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from quota_definition_id on this table to id on table, <a href="#public.quota_definitions_anchor">public.quota_definitions</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id (pk) which uniquely identifies row in the table</td><tr>
<tr class="field"><td>quota_definition_id</td><td>integer</td><td>The quota_definition_id identifies a quota definition</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The luid of the site</td><tr>
<tr class="field"><td>limit_value</td><td>bigint</td><td>The quota limit value</td><tr>
<tr class="field"><td>last_updated</td><td>timestamp without time zone</td><td>The timestamp when the limit_value was set</td><tr>
</tbody>
</table>
<a name="public.quota_usage_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.quota_usage</dfn>:  Table which stores the usage info for all quotas for QuotaService</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from quota_definition_id on this table to id on table, <a href="#public.quota_definitions_anchor">public.quota_definitions</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id (pk) which uniquely identifies row in the table</td><tr>
<tr class="field"><td>quota_definition_id</td><td>integer</td><td>The quota_definition_id identifies a quota definition</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The luid of the site</td><tr>
<tr class="field"><td>item_luid</td><td>uuid</td><td>The luid of the item that uses the quota</td><tr>
<tr class="field"><td>usage_value</td><td>bigint</td><td>The quota usage value for the item</td><tr>
<tr class="field"><td>last_updated</td><td>timestamp without time zone</td><td>The timestamp when the usage_value was computed</td><tr>
</tbody>
</table>
<a name="public.recommendations_dismissed_views_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.recommendations_dismissed_views</dfn>:  Views dismissed by user in context of viz recommendations</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site Id associated with this dismissed view</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>User Id of user that dismissed the view</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>View Id that was dismissed by user</td><tr>
<tr class="field"><td>dismissed_at</td><td>timestamp without time zone</td><td>Time in Utc when the view was dismissed by user</td><tr>
</tbody>
</table>
<a name="public.recycle_bin_content_types_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.recycle_bin_content_types</dfn>:  Content Type lookup table for Recycle Bin.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto incremented primary key.</td><tr>
<tr class="field"><td>content_type</td><td>character varying</td><td>Content type of the object in Recycle Bin.</td><tr>
<tr class="field"><td>sos_type</td><td>character varying</td><td>SOS Type for thumbnails of this content type</td><tr>
</tbody>
</table>
<a name="public.refresh_token_devices_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.refresh_token_devices</dfn>:  Devices that have been issued at least one refresh token</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key identifier</td><tr>
<tr class="field"><td>device_id</td><td>character varying</td><td>Unique identifier of the device. Must be unique across all instances of the same installations of client applications. This is expected to stay the same through the lifetime of the application.</td><tr>
<tr class="field"><td>device_name</td><td>character varying</td><td>Friendly name of the device to be displayed</td><tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>Reference to the system user the token is issued to</td><tr>
<tr class="field"><td>last_used_at</td><td>timestamp without time zone</td><td>The last time the device redeemed the refresh token.</td><tr>
</tbody>
</table>
<a name="public.refresh_tokens_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.refresh_tokens</dfn>:  Tokens issued to clients which can be redeemed by the client for access to the server</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from refresh_token_device_id on this table to id on table, <a href="#public.refresh_token_devices_anchor">public.refresh_token_devices</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key identifier</td><tr>
<tr class="field"><td>guid</td><td>uuid</td><td>Unique identifer of the refresh token</td><tr>
<tr class="field"><td>client_id</td><td>character varying</td><td>Unique identifier with which to associate to the refresh token series.</td><tr>
<tr class="field"><td>client_name</td><td>character varying</td><td>This column is no longer used and will be deleted once it will no longer be breaking an upgrade scenario</td><tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>Reference to the system user the token is issued to</td><tr>
<tr class="field"><td>expires_at</td><td>timestamp without time zone</td><td>When this token becomes expired. null means that it does not have absolute expiration time</td><tr>
<tr class="field"><td>last_used_at</td><td>timestamp without time zone</td><td>When the token was last redeemed for an access token</td><tr>
<tr class="field"><td>issued_at</td><td>timestamp without time zone</td><td>When this token was issued to the client</td><tr>
<tr class="field"><td>salt</td><td>character varying</td><td>The salt used when hashing the secret</td><tr>
<tr class="field"><td>hashed_secret</td><td>character varying</td><td>Secret portion of the token thats been hashed</td><tr>
<tr class="field"><td>session_id</td><td>character varying</td><td>The most current session that has been redeemed using this refresh token. Null if no sessions have been redeemed</td><tr>
<tr class="field"><td>refresh_token_device_id</td><td>integer</td><td>Reference to the device the token is issued to</td><tr>
<tr class="field"><td>next_hashed_secret</td><td>character varying</td><td>Secret portion of the token thats been hashed for the next refresh token</td><tr>
<tr class="field"><td>next_salt</td><td>character varying</td><td>The salt used when hashing the secret for the next refresh_token</td><tr>
</tbody>
</table>
<a name="public.remote_agents_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.remote_agents</dfn>:  Registry of remote agents (Online). Remote agents are programs installed on customer PC and executing tasks
 on a behalf of a customer. The first example of agent is Tableau Data Sync. It is running in background on
 customer desktop and performing automatic data source refreshes based on schedules defined by customers.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>Foreign key reference to the user who owns this project.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Foreign key reference to the site which contains this remote agent.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>Name of the remote agent. Usually agent computer name. This name must be unique for a specific site/user.
 Different users can have same agent (for example of shared computer).</td><tr>
<tr class="field"><td>time_zone_id</td><td>character varying</td><td>String identifier of agent's time zone. Time zone is specified during registration and can be changed later.
 Time zone ID is full name such as "America/Los_Angeles". It should be accepted by Java method
 java.util.TimeZone.getTimeZone(java.lang.String).</td><tr>
<tr class="field"><td>schedules_synced_at</td><td>timestamp without time zone</td><td>UTC time of last agent synchronization of schedules with the server. Time is the recorded server time.</td><tr>
<tr class="field"><td>device_id</td><td>character varying</td><td>ID generated by client and also given to the Refresh Token Service. Otherwise, one is randomly generated.</td><tr>
<tr class="field"><td>concurrent_live_operations_allowed</td><td>integer</td><td>Number of concurrent live operations allowed on a remote agent.</td><tr>
<tr class="field"><td>capacities</td><td>text</td><td>The capacities that this remote agent exhibits, e.g. LiveQueryAlpha, LiveQueryBeta, LiveQueryV1</td><tr>
<tr class="field"><td>pooled</td><td>boolean</td><td>If part of the site pool to handle shared work.</td><tr>
<tr class="field"><td>version</td><td>character varying</td><td>The version of the remote agent.</td><tr>
<tr class="field"><td>pool_id</td><td>uuid</td><td>Identifies the pool that the agent belongs to</td><tr>
</tbody>
</table>
<a name="public.repository_data_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.repository_data</dfn>:  This table forms the link between other tables that need to store "large object" data, and the large object storage, itself.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from sos_blob_data_id on this table to id on table, <a href="#public.sos_blob_data_anchor">public.sos_blob_data</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>A possibly useful string that is mostly here to make it easier to debug.</td><tr>
<tr class="field"><td>content</td><td>oid</td><td>An oid field that references the corresponding data stored in the pg_largeobject system table. Be aware pg_largeobject is not accessible by the "tableau" or "readonly" users.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>tracking_id</td><td>character varying</td><td>Unique ID used to track the repository data.</td><tr>
<tr class="field"><td>type</td><td>character varying</td><td>Simple Object Storage type.</td><tr>
<tr class="field"><td>kind</td><td>character varying</td><td>Kind of data in content; file or folder.</td><tr>
<tr class="field"><td>sos_blob_data_id</td><td>bigint</td><td>foreign key referencing sos_blob_data.id</td><tr>
</tbody>
</table>
<a name="public.resource_holder_types_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.resource_holder_types</dfn>:  Information about entities which can hold on to resources. For instance workbook is such an entity, it can reference a geocoding database and keep it alive.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>smallint</td><td>Unique numeric id of the type. This value is used as the value of resource_usage.resource_holder_type column.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>Unique name of the type, used in the code to identify the particular resource holder type.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>Description of the type.</td><tr>
</tbody>
</table>
<a name="public.resource_types_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.resource_types</dfn>:  Information about resources which are used by some server entities. For instance geocoding databases are such resources, a workbook can reference a geocoding database and keep it alive.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>smallint</td><td>Unique numeric id of the type. This value is used as the value of resource_usage.resource_type column.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>Unique name of the type, used in the code to identify the particular resource type.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>Description of the type.</td><tr>
</tbody>
</table>
<a name="public.resource_usage_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.resource_usage</dfn>:  Information about resources by tableau server entities, for example which geocoding databases are used by which workbooks.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from resource_holder_type on this table to id on table, <a href="#public.resource_holder_types_anchor">public.resource_holder_types</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from resource_type on this table to id on table, <a href="#public.resource_types_anchor">public.resource_types</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>resource_holder_type</td><td>smallint</td><td>Type of the entity which references the resource. Values correspond to the values in the resource_holder_type.id column.</td><tr>
<tr class="field"><td>resource_holder_id</td><td>integer</td><td>ID of the entity for which this entry was created. The meaning of the ID depends on the resource_holder_type value. For instance, for workbooks it is the workbook ID</td><tr>
<tr class="field"><td>resource_type</td><td>smallint</td><td>Type of the resource, e.g. geocoding database. Values correspond to the values in the resource_type.id column.</td><tr>
<tr class="field"><td>resource_id</td><td>integer</td><td>ID of the resource. The meaning of the ID depends on the resource_type value. For instance, for geocoding databases it is the id from the geocoding table.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Timestamp when this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Same as created_at.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the resource.</td><tr>
<tr class="field"><td>resource_name</td><td>text</td><td>Optional resource name, for debugging and logging.</td><tr>
</tbody>
</table>
<a name="public.roles_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.roles</dfn>:  This table contains records corresponding to various classifications of users. It should really be viewed in conjuction with the capabilities and capability_roles tables. Taken together, these tables associate different roles with different sets of capabilities. The capabilities sets serve as templates when creating content.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>Each role has a name by which it is known to program code. Examples include, viewer, editor, interactor, ds_editor, etc.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time at which this record was last changed.</td><tr>
<tr class="field"><td>creator_id</td><td>integer</td><td>Links to the user who created this record, or is NULL. Not a significant value.</td><tr>
<tr class="field"><td>displayable</td><td>boolean</td><td>Used to distinguish between records that can be displayed in the GUI and those that cannot.</td><tr>
<tr class="field"><td>administrative</td><td>boolean</td><td>Roles are categorized as administrative in nature, or not.  This field is used for filtering.</td><tr>
<tr class="field"><td>display_order</td><td>integer</td><td>Ascending order of this value is the order in which roles are listed, when displayed.</td><tr>
<tr class="field"><td>display_name</td><td>character varying</td><td>This is the name for the role, which will be displayed to the user.</td><tr>
</tbody>
</table>
<a name="public.saml_assertions_metadata_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.saml_assertions_metadata</dfn>:  Records for the saml assertions</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>assertion_id</td><td>character varying</td><td>Saml assertion id.</td><tr>
<tr class="field"><td>idp_entity_id</td><td>character varying</td><td>IdP entity id URI.</td><tr>
<tr class="field"><td>expires_at</td><td>timestamp without time zone</td><td>The time saml assertion expires. Null indicates no expiration time</td><tr>
</tbody>
</table>
<a name="public.schedules_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.schedules</dfn>:  Records in this table define a schedule according to which certain regular tasks may be performed (see tasks table). They also indicate the next time at which the schedule will be triggered.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>A schedule can be given a name, which is stored here.</td><tr>
<tr class="field"><td>active</td><td>boolean</td><td>If set to false, this means that the schedule is inactive, meaning that no tasks will be performed when the schedules triggers.</td><tr>
<tr class="field"><td>priority</td><td>integer</td><td>Priority can range from 1 to 100, with lower values corresponding to higher priority.</td><tr>
<tr class="field"><td>schedule_type</td><td>integer</td><td>One of 0 (Hourly), 1 (Daily), 2 (Weekly), 3 (Monthly).</td><tr>
<tr class="field"><td>day_of_week_mask</td><td>integer</td><td>Indicates which day of the week this schedule will run. The information is encoded in the given integer. To interpret it, convert the integer to binary. The days of the week correspond to Sunday : 1, Monday : 10, Tuesday : 100, Wednesday : 1000, Thursday : 10000, Friday : 100000, Saturday : 1000000.</td><tr>
<tr class="field"><td>day_of_month_mask</td><td>integer</td><td>Indicates which day of the month this schedule will run. The information is encoded in the given integer. To interpret it, convert the integer to binary. The days of the month correspond to 1st : 1, 2nd: 10, 3rd: 100, 4th: 1000, 5th: 10000, etc.</td><tr>
<tr class="field"><td>start_at_minute</td><td>integer</td><td>The minute following the start of the designated time period implied by the schedule_type. For example, for a daily schedule, this would be number of minutes past midnight at the start of the day. For hourly, it would be the number of minutes past the beginning of the hour.</td><tr>
<tr class="field"><td>minute_interval</td><td>integer</td><td>Once the schedule triggers, it will retrigger at this interval during the time period implied by the schedule_type or until end_at_minute, or end_schedule_at.</td><tr>
<tr class="field"><td>end_at_minute</td><td>integer</td><td>The minute following the start of the designated time period implied schedule_type, at which the schedule should stop triggering.</td><tr>
<tr class="field"><td>end_schedule_at</td><td>timestamp without time zone</td><td>Used to indicate a point in time, after which the schedule should never trigger.</td><tr>
<tr class="field"><td>run_next_at</td><td>timestamp without time zone</td><td>When the schedule will next trigger.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The last time any changes were made to this record.</td><tr>
<tr class="field"><td>hidden</td><td>boolean</td><td>If set to true, then this schedule will not be listed in the GUI, otherwise it will be.</td><tr>
<tr class="field"><td>serial_collection_id</td><td>integer</td><td>A foreign key to the serial_collections table. Two jobs with the same serial_collection_id cannot be processed simultaneously. When the job record for a task linked to this schedule is created, it is assigned this serial_collection_id.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking" by JPA/Hibernate. The counter increases each time the record is changed. Not useful for customers.</td><tr>
<tr class="field"><td>scheduled_action</td><td>integer</td><td>Used to classify schedules into categories: 0 (Extracts), 1 (Subscriptions), 2 (Sync AD users and groups), 3 (Auto Refresh Extracts), 4 (Flows)</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>uuid for schedules used in the REST API</td><tr>
<tr class="field"><td>defined_by</td><td>integer</td><td>The mechanism type of how the schedule is created, e.g. 0 for system_admin, 1 for self_service.</td><tr>
<tr class="field"><td>timezoneid</td><td>text</td><td>The IANA timezoneid for the schedule when it is created i.e. America/Los_angeles</td><tr>
<tr class="field"><td>actionable</td><td>boolean</td><td>Flag to indicate whether or not the schedule is actionable.</td><tr>
<tr class="field"><td>linked_task_enabled</td><td>boolean</td><td>Whether users are allowed to create linked tasks on this schedule or not.</td><tr>
</tbody>
</table>
<a name="public.schema_migrations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.schema_migrations</dfn>:  This table tracks which database migrations have been applied to this database.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>version</td><td>character varying</td><td>A string, derived from the name of the migration file, which serves to identify a particular migration that has been applied.</td><tr>
</tbody>
</table>
<a name="public.serial_collections_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.serial_collections</dfn>:  Records in this table represent groups of background jobs that should not be run simultaneously. </th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the record.</td><tr>
<tr class="field"><td>description</td><td>character varying</td><td>Whoever creates the serial collection can decide what they want this description to say.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The last time any changes were made to this record.</td><tr>
</tbody>
</table>
<a name="public.sessions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.sessions</dfn>:  Settings associated with a user's browser session.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from initiating_user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the record.</td><tr>
<tr class="field"><td>session_id</td><td>character varying</td><td>Session identifier.</td><tr>
<tr class="field"><td>data</td><td>text</td><td>Serialized session data.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Time when session was last updated, used to expire inactive sessions.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>Foreign key to users table</td><tr>
<tr class="field"><td>shared_wg_write</td><td>text</td><td>Settings used by wgserver (language/country preference etc).</td><tr>
<tr class="field"><td>shared_vizql_write</td><td>text</td><td>Settings used by vizql server.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key to the sites table.  Indicates the site to which this session belongs.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>A timestamp without timezone indicating how long ago the session was created</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking." Don't set this or mess with it, it's all handled automatically.</td><tr>
<tr class="field"><td>salt</td><td>character varying</td><td>The salt used when hashing the secret.</td><tr>
<tr class="field"><td>hashed_secret</td><td>character varying</td><td>Secret portion of the token thats been hashed.</td><tr>
<tr class="field"><td>oauth_state</td><td>text</td><td>The OAuth request state, will be verified later to prevent CSRF attack.</td><tr>
<tr class="field"><td>initiating_user_id</td><td>integer</td><td>the id of site user initiating logging in. Can be an admin impersonating (acting on behalf of) the other user. Or the site user self in case or regular log in</td><tr>
</tbody>
</table>
<a name="public.share_actions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.share_actions</dfn>:  Table storing share actions.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>sharer_id</td><td>integer</td><td>UserId of the sharer (if not deleted). Backed up id (if deleted). Product spec: sharing action is not cascade deleted with sharer.</td><tr>
<tr class="field"><td>was_sharer_deleted</td><td>boolean</td><td>If sharer was deleted. False (regular user). True (name backed up for historical reason)</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site where content was shared.</td><tr>
<tr class="field"><td>message</td><td>text</td><td>Sharer's message to recipients.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Share action creation timestamp.</td><tr>
</tbody>
</table>
<a name="public.share_contents_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.share_contents</dfn>:  Table storing shared content (view/workboook/etc).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from share_action_id on this table to id on table, <a href="#public.share_actions_anchor">public.share_actions</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>share_action_id</td><td>integer</td><td>Share action ID which was used to share this content.</td><tr>
<tr class="field"><td>content_id</td><td>integer</td><td>Shared content ID. Note: depending on "content_type" can be ID of different content.</td><tr>
<tr class="field"><td>content_type</td><td>character varying</td><td>Shared content type.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site where content was shared.</td><tr>
</tbody>
</table>
<a name="public.share_deleted_sharers_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.share_deleted_sharers</dfn>:  Table storing deleted sharers backed up details (e.g. name). Needed because we do not cascade delete sharing action after sharer was deleted.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>Name for deleted sharer. Backed up from system_users.name.</td><tr>
<tr class="field"><td>friendly_name</td><td>character varying</td><td>Friendly name for deleted sharer. Backed up from system_users.friendly_name.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site where content was shared by sharer.</td><tr>
</tbody>
</table>
<a name="public.share_recipients_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.share_recipients</dfn>:  Table storing share recipients (users/groups/etc).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from share_action_id on this table to id on table, <a href="#public.share_actions_anchor">public.share_actions</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>share_action_id</td><td>integer</td><td>Share action ID which was used to share this content.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site where content was shared.</td><tr>
<tr class="field"><td>recipient_id</td><td>integer</td><td>Recipient ID whom this content was shared with. Note: depending on "recipient_type" can be ID of different recipients.</td><tr>
<tr class="field"><td>recipient_type</td><td>integer</td><td>Recipient type (e.g. "USER", "GROUP").</td><tr>
</tbody>
</table>
<a name="public.share_single_user_options_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.share_single_user_options</dfn>:  Table storing single user options on shared content (does not change the content itself).</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from single_user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>content_id</td><td>integer</td><td>Content ID on which user set a custom option.</td><tr>
<tr class="field"><td>content_type</td><td>character varying</td><td>Content type on which user set a custom option.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site where content was shared.</td><tr>
<tr class="field"><td>single_user_id</td><td>integer</td><td>User ID who set a custom option.</td><tr>
<tr class="field"><td>single_user_option_value</td><td>integer</td><td>Value of some certain option a user has set.</td><tr>
<tr class="field"><td>single_user_option_type</td><td>integer</td><td>Option type a user has set on a shared content.</td><tr>
</tbody>
</table>
<a name="public.sheet_images_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.sheet_images</dfn>:  Serves as a cache for all the sheet images generated by server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from customized_view_id on this table to id on table, <a href="#public.customized_views_anchor">public.customized_views</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from generated_as_user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>width</td><td>integer</td><td>The port size (width) used to generate the image.</td><tr>
<tr class="field"><td>height</td><td>integer</td><td>The port size (height) used to generate the image.</td><tr>
<tr class="field"><td>pixel_ratio</td><td>real</td><td>The pixel ratio used to generate the image.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>A foreign key reference to the view used to generate the image.</td><tr>
<tr class="field"><td>language_id</td><td>character varying</td><td>A code indicating the language used to generate the image.</td><tr>
<tr class="field"><td>locale_id</td><td>character varying</td><td>A code indicating the locale used to generate the image.</td><tr>
<tr class="field"><td>generated_at</td><td>timestamp without time zone</td><td>A timestamp indicating when the image was generated.</td><tr>
<tr class="field"><td>data_storage_id</td><td>bigint</td><td>A reference to an entry in the repository_data table, which, in turn references the PostgreSQL large object that contains the sheet image for this entry.</td><tr>
<tr class="field"><td>generated_as_user_id</td><td>integer</td><td>A foreign key reference to the user the image was generated as. Can be null if the image was not generated as any user in particular.</td><tr>
<tr class="field"><td>customized_view_id</td><td>integer</td><td>A foreign key reference to the customized view that the image was generated as. Can be null if the image was not generated with a customized view.</td><tr>
<tr class="field"><td>cropped_height</td><td>integer</td><td>Indicates how many pixels were vertically cropped off of the generated image.</td><tr>
<tr class="field"><td>cropped_width</td><td>integer</td><td>Indicates how many pixels were horizontally cropped off of the generated image.</td><tr>
<tr class="field"><td>freshness_verified_at</td><td>timestamp without time zone</td><td>This date represents a point in time at which this sheet image is considered to be fresh.</td><tr>
<tr class="field"><td>data_id</td><td>character varying</td><td>Unique ID used to identify the image.</td><tr>
<tr class="field"><td>show_commands_query_str</td><td>text</td><td>Represents hash of the possible show commands to be applied to the viz in the native api code.</td><tr>
<tr class="field"><td>file_type</td><td>integer</td><td>The file type. 0 for Image, 1 for Pdf</td><tr>
<tr class="field"><td>page_orientation</td><td>integer</td><td>PDF page orientation</td><tr>
<tr class="field"><td>page_size_option</td><td>integer</td><td>PDF page size option</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site to which this entry belongs.</td><tr>
</tbody>
</table>
<a name="public.simulations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.simulations</dfn>:  Used to store simulation</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>Luid of the simulation.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>Name of the simulation.</td><tr>
<tr class="field"><td>simulation</td><td>text</td><td>Content of simulation.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>Description of simulation.</td><tr>
<tr class="field"><td>project_id</td><td>integer</td><td>Project id of simulation.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>Owner id of simulation.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site id of simulation.</td><tr>
<tr class="field"><td>site_luid</td><td>character varying</td><td>Site luid of simulation.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the simulation was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The latest time the simulation was updated.</td><tr>
</tbody>
</table>
<a name="public.site_keychains_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.site_keychains</dfn>:  This table stores keychains for site, which is used for credentials service V1</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>UUID for the record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The associated site id.</td><tr>
<tr class="field"><td>target_class</td><td>character varying</td><td>The dsClass this credential belongs to.</td><tr>
<tr class="field"><td>target_auth</td><td>character varying</td><td>The authenticationType of this credential.</td><tr>
<tr class="field"><td>target_endpoint</td><td>character varying</td><td>Part of this credential identifier, usually would be a Database server address.</td><tr>
<tr class="field"><td>target_port</td><td>integer</td><td>Database server port.</td><tr>
<tr class="field"><td>target_user_name</td><td>character varying</td><td>Part of this credential identifier, usually would be a Database username.</td><tr>
<tr class="field"><td>target_db</td><td>character varying</td><td>Part of this credential identifier, can be a database name/project-id.</td><tr>
<tr class="field"><td>target_user_role</td><td>character varying</td><td>Used when the credential has a "role" property such as Snowflake OAuth.</td><tr>
<tr class="field"><td>target_extra_info</td><td>text</td><td>Extra info about the target.</td><tr>
<tr class="field"><td>credential_type</td><td>integer</td><td>Type of the credential</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>Id of asset_key which is used for encrypted entry_xml</td><tr>
<tr class="field"><td>entry_xml</td><td>character varying</td><td>Encrypted keychain xml entry.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the credential was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The latest time the credential was updated.</td><tr>
</tbody>
</table>
<a name="public.site_logos_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.site_logos</dfn>:  custom logo image metadata for sites</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>site_id</td><td>bigint</td><td>the site the logo belongs to</td><tr>
<tr class="field"><td>width</td><td>integer</td><td>the image width in px</td><tr>
<tr class="field"><td>height</td><td>integer</td><td>the image height in px</td><tr>
<tr class="field"><td>storage_id</td><td>character varying</td><td>identifies the logo image on the storage back_end</td><tr>
<tr class="field"><td>url</td><td>text</td><td>the public URL of the logo</td><tr>
<tr class="field"><td>mime_type</td><td>character varying</td><td>the MIME type of the logo</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time when this row was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time when this row was last updated.</td><tr>
<tr class="field"><td>logo_type</td><td>character varying</td><td>type of logo (header or compact)</td><tr>
</tbody>
</table>
<a name="public.site_oidc_configurations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.site_oidc_configurations</dfn>:  Defines the OpenID Connect IdP associated with a site.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Primary key for this table, matches the site.site_luid column.</td><tr>
<tr class="field"><td>is_enabled</td><td>boolean</td><td>Defines if the configration is active.</td><tr>
<tr class="field"><td>known_provider_alias</td><td>text</td><td>Name of the preconfigured provider, which must be defined in SiteSAML application.yml file.</td><tr>
<tr class="field"><td>salesforce_domain</td><td>character varying</td><td>Custom authorization domain for pre-configured Salesforce OIDC (OpenID Connect) provider.</td><tr>
<tr class="field"><td>allow_embedded_authentication</td><td>boolean</td><td>Flag if the site permits the authentication flow to be hosted in an iframe.</td><tr>
</tbody>
</table>
<a name="public.site_roles_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.site_roles</dfn>:  Lists the various possible user site roles.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>User site role ID is unique key correspondent to site_role_id from users table.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>User site role name.</td><tr>
<tr class="field"><td>licensing_rank</td><td>integer</td><td>User license role rank for the purpose of licensing users with the correct priority when the number of available licenses is less that users. 1000-600 Tier Interactor users, down to 500 - Basic Tier users, 300 - Support users, 200 - guest users, 100 and below - Unlicensed.</td><tr>
<tr class="field"><td>display_name</td><td>character varying</td><td>User Friendly value to display on the IBA License Usage Admin View.</td><tr>
</tbody>
</table>
<a name="public.site_saml_configurations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.site_saml_configurations</dfn>:  Defines the SAML IdP associated with a site.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_luid on this table to luid on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Primary key for this table, matches the site.site_luid column.</td><tr>
<tr class="field"><td>idp_entity_descriptor</td><td>text</td><td>XML block of the EntityDescriptor for the Identity Provider.</td><tr>
<tr class="field"><td>attribute_mapping</td><td>text</td><td>Defines mapping for the saml response fields.</td><tr>
<tr class="field"><td>sp_certificate</td><td>text</td><td>PEM encoded certificate.</td><tr>
<tr class="field"><td>sp_private_key</td><td>text</td><td>PEM encoded private key.</td><tr>
<tr class="field"><td>is_enabled</td><td>boolean</td><td>Defines if the configration is active.</td><tr>
<tr class="field"><td>entity_descriptor_validation_result</td><td>text</td><td>JSON Serialized validation result.</td><tr>
<tr class="field"><td>authentication_domain_id</td><td>character varying</td><td>Authentication Domain.</td><tr>
<tr class="field"><td>authentication_type_for_embedded</td><td>character varying</td><td>Authentication type: DEFAULT or SAML.</td><tr>
<tr class="field"><td>allow_embedded_authentication</td><td>boolean</td><td>Flag if the site permits the authentication flow to be hosted in an iframe.</td><tr>
<tr class="field"><td>generation</td><td>character varying</td><td>Describes level of support and/or blocklisting of certain features in the SAML implementation.</td><tr>
</tbody>
</table>
<a name="public.site_saml_events_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.site_saml_events</dfn>:  Log table for all SAML actions.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_luid on this table to luid on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>uuid</td><td>Primary key for this table.</td><tr>
<tr class="field"><td>timestamp</td><td>timestamp without time zone</td><td>Timestamp for the event.</td><tr>
<tr class="field"><td>log_level</td><td>character varying</td><td>String value of the logging level.</td><tr>
<tr class="field"><td>message</td><td>text</td><td>Text of the logged message.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Matches the site.site_luid column and site_saml_configurations.site_luid.</td><tr>
</tbody>
</table>
<a name="public.site_saml_sessions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.site_saml_sessions</dfn>:  Records the user sessions authenticated by the SiteSAML service.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>character varying</td><td>Primary key for this table.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Matches the site.site_luid column and site_saml_configurations.site_luid.</td><tr>
<tr class="field"><td>last_accessed_at</td><td>timestamp without time zone</td><td>Timestamp for the last_accessed_at time of the seesion.</td><tr>
<tr class="field"><td>http_session</td><td>bytea</td><td>HTTP Session representation.</td><tr>
<tr class="field"><td>version</td><td>bigint</td><td>Version value if set.</td><tr>
</tbody>
</table>
<a name="public.site_saml_users_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.site_saml_users</dfn>:  Users that are allowed to use Per Site SAML authentication.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_luid on this table to luid on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>uuid</td><td>Primary key for this table.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>Matches the site.site_luid column and site_saml_configurations.site_luid.</td><tr>
<tr class="field"><td>user_name</td><td>character varying</td><td>User name field.</td><tr>
<tr class="field"><td>auth_user_id</td><td>character varying</td><td>Matches the auth_user_id of the user stored in the system_users table.</td><tr>
<tr class="field"><td>authentication_type</td><td>character varying</td><td>Which type of authentication to use, e.g. SAML or OIDC.</td><tr>
</tbody>
</table>
<a name="public.site_user_prefs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.site_user_prefs</dfn>:  Site user preferences.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id of a site user preference. Primary key.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>A foreign key to users table. Indicates the site user to which this preference belongs.</td><tr>
<tr class="field"><td>refresh_failure_notification_enabled</td><td>boolean</td><td>Whether to send notification on failed extracts for this site user.</td><tr>
<tr class="field"><td>notification_enabled</td><td>boolean</td><td>Setting for enabling system notifications</td><tr>
<tr class="field"><td>show_welcome_screen</td><td>boolean</td><td>Shows the Welcome Screen on the Home space in Vizportalclient</td><tr>
<tr class="field"><td>show_metrics_banner</td><td>boolean</td><td>Shows the metrics banner on the metric detail screen in Vizportalclient</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the site_user_prefs.</td><tr>
</tbody>
</table>
<a name="public.sites_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.sites</dfn>:  Each record represents a site. Each site holds its own workbooks, datasources, users, etc. Strict isolation between the contents of each site is maintained.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the site.</td><tr>
<tr class="field"><td>url_namespace</td><td>character varying</td><td>String used in the construction of URLs that target this site.</td><tr>
<tr class="field"><td>status</td><td>character varying</td><td>One of "active" "suspended" or "locked".</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The last time any changes were made to this record.</td><tr>
<tr class="field"><td>content_admin_mode</td><td>integer</td><td>One of 1 (content only) or 2 (content and users).</td><tr>
<tr class="field"><td>storage_quota</td><td>bigint</td><td>Maximum storage for the site in megabytes.</td><tr>
<tr class="field"><td>status_reason</td><td>character varying</td><td>Holds an explanation for why a site is in a "suspended" status.</td><tr>
<tr class="field"><td>subscriptions_enabled</td><td>boolean</td><td>True if subscriptions are allowed for this site, otherwise false.</td><tr>
<tr class="field"><td>custom_subscription_footer</td><td>text</td><td>Content to be placed as the footer in each subscription email sent.</td><tr>
<tr class="field"><td>custom_subscription_email</td><td>text</td><td>The email from which to send subscriptions.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>An identifier which is unique to this site.</td><tr>
<tr class="field"><td>authoring_disabled</td><td>boolean</td><td>If true, then web authoring is disabled.</td><tr>
<tr class="field"><td>sheet_image_enabled</td><td>boolean</td><td>True if sheet image API is enabled for this site, otherwise false.</td><tr>
<tr class="field"><td>refresh_token_setting</td><td>integer</td><td>If true, oauth is enabled on server, allowing connected clients.</td><tr>
<tr class="field"><td>version_history_enabled</td><td>boolean</td><td>Setting for enabling/disabling version history on a site</td><tr>
<tr class="field"><td>notification_enabled</td><td>boolean</td><td>Setting for enabling/disabling system notification such as email notification on a site</td><tr>
<tr class="field"><td>content_version_limit</td><td>integer</td><td>Maximum number of versions to retain for each content type : workbooks ,datasources </td><tr>
<tr class="field"><td>subscribe_others_enabled</td><td>boolean</td><td>Setting for enabling/disabling the subscribe others functionality on a site</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking." Don't set this or mess with it, it's all handled automatically.</td><tr>
<tr class="field"><td>guest_access_enabled</td><td>boolean</td><td>Setting for enabling/disabling guest account per site</td><tr>
<tr class="field"><td>support_access_enabled</td><td>boolean</td><td>Setting for enabling/disabling access to a Tableau Online site by a Tableau support user</td><tr>
<tr class="field"><td>cache_warmup_enabled</td><td>boolean</td><td>True if cache warmup is enabled for this site.</td><tr>
<tr class="field"><td>cache_warmup_threshold</td><td>smallint</td><td>How recently a view must have been viewed to run warmup for it in days, defaulting to 30.</td><tr>
<tr class="field"><td>data_alerts_enabled</td><td>boolean</td><td>Setting for enabling/disabling data driven alerts on a site</td><tr>
<tr class="field"><td>allow_live_query_sync</td><td>boolean</td><td>Setting for allowing live query sync on a site</td><tr>
<tr class="field"><td>commenting_enabled</td><td>boolean</td><td>Setting for enabling/disabling commenting on a site</td><tr>
<tr class="field"><td>self_service_schedules_enabled</td><td>boolean</td><td>Setting for enabling/disabling self service schedules on a site</td><tr>
<tr class="field"><td>tier_interactor_capacity</td><td>integer</td><td>Max site-wide tier interactor license capacity limit.</td><tr>
<tr class="field"><td>tier_basic_user_capacity</td><td>integer</td><td>Max site-wide tier basic user license capacity limit.</td><tr>
<tr class="field"><td>tier_author_capacity</td><td>integer</td><td>Max site-wide tier author license capacity limit.</td><tr>
<tr class="field"><td>viz_in_tooltip_enabled</td><td>boolean</td><td>Setting for enabling/disabling Viz in Tooltip on a site</td><tr>
<tr class="field"><td>protocol_cache_lifetime</td><td>integer</td><td>Lifetime for native connections, in minutes</td><tr>
<tr class="field"><td>protocol_group_size_limit</td><td>integer</td><td>Limit on connection parallelism</td><tr>
<tr class="field"><td>commenting_mentions_enabled</td><td>boolean</td><td>Setting for enabling/disabling commenting mentions on a site</td><tr>
<tr class="field"><td>mixed_content_enabled</td><td>boolean</td><td>Setting for enabling/disabling mixed content on a site</td><tr>
<tr class="field"><td>site_invite_notification_enabled</td><td>boolean</td><td>Setting for enabling/disabling site invite notification on a site</td><tr>
<tr class="field"><td>extract_encryption_mode</td><td>smallint</td><td>Extract encryption mode: whether it is disabled (null or 0), enabled (1), or enforced (2).</td><tr>
<tr class="field"><td>flows_enabled</td><td>boolean</td><td>Setting for enabling/disabling Tableau Prep flows on a site</td><tr>
<tr class="field"><td>materialized_views_enabled</td><td>boolean</td><td>a flag to indicate whether the feature of materialized views is enabled for this site or not, enabled if true.</td><tr>
<tr class="field"><td>allow_subscriptions_attach_pdf</td><td>boolean</td><td>Whether to allow users to attach PDFs to subscription emails.</td><tr>
<tr class="field"><td>materialized_views_mode</td><td>smallint</td><td>Code representing the materialized views mode for the site.</td><tr>
<tr class="field"><td>start_page_uri</td><td>character varying</td><td>if not set the value from global_settings.start_page_uri is used</td><tr>
<tr class="field"><td>afe_enabled</td><td>boolean</td><td>Alternative Federation Engine (afe) is enabled or not</td><tr>
<tr class="field"><td>sandbox_enabled</td><td>boolean</td><td>Whether to enable sandbox for the site or not</td><tr>
<tr class="field"><td>viz_recs_enabled</td><td>boolean</td><td>Setting for enabling/disabling Viz Recommendations on a site</td><tr>
<tr class="field"><td>biometrics_mobile_enabled</td><td>boolean</td><td>Setting for enabling/disabling biometrics for mobile clients for a site</td><tr>
<tr class="field"><td>iba_enabled</td><td>boolean</td><td>Setting for enabling/disabling Identity Based Activation on a site. Only applicable for Online</td><tr>
<tr class="field"><td>named_sharing_enabled</td><td>boolean</td><td>Whether Named Sharing is enabled on the site</td><tr>
<tr class="field"><td>sandbox_storage_quota</td><td>bigint</td><td>the per user storage quota for sandboxes on a site in bytes. If null is unlimited</td><tr>
<tr class="field"><td>sandbox_datasources_enabled</td><td>boolean</td><td>Whether to enable datasources on sandboxes for the site or not</td><tr>
<tr class="field"><td>sandbox_flows_enabled</td><td>boolean</td><td>Whether to enable flows on sandboxes for the site or not</td><tr>
<tr class="field"><td>cataloging_enabled</td><td>boolean</td><td>Setting for enabling/disabling data cataloging features on a site</td><tr>
<tr class="field"><td>derived_permissions_enabled</td><td>boolean</td><td>Setting for enabling/disabling derived metadata permissions on a site</td><tr>
<tr class="field"><td>viz_recs_username_enabled</td><td>boolean</td><td>Setting for enabling/disabling the display of usernames along with viz recommendations</td><tr>
<tr class="field"><td>user_visibility</td><td>integer</td><td>Whether to user visibility is set to 0 - FULL or 1 - LIMITED</td><tr>
<tr class="field"><td>request_access</td><td>integer</td><td>One of 3 options for request access: on, off, custom_note</td><tr>
<tr class="field"><td>ask_data_mode</td><td>text</td><td>Setting the ask data mode for each site</td><tr>
<tr class="field"><td>run_now_enabled</td><td>boolean</td><td>Setting for allowing run now background jobs.</td><tr>
<tr class="field"><td>web_extraction_enabled</td><td>smallint</td><td>Enable or disable extract creation/live 1: enable, 0: disable the default is 1</td><tr>
<tr class="field"><td>metrics_enabled</td><td>boolean</td><td>Setting for enabling the metrics feature</td><tr>
<tr class="field"><td>web_editing_enabled</td><td>boolean</td><td>One of two options for web editing enabled: on, off</td><tr>
<tr class="field"><td>notify_site_admins_on_throttle</td><td>boolean</td><td>Setting for allowing site admins to opt in on receiving an email when background jobs are throttled.</td><tr>
<tr class="field"><td>obfuscation_enabled</td><td>boolean</td><td>Setting to enable or disable the obfuscation feature for Data Catalog</td><tr>
<tr class="field"><td>flow_auto_save_enabled</td><td>boolean</td><td>Setting to enable or disable auto save feature for flows</td><tr>
<tr class="field"><td>time_zone</td><td>text</td><td>IANA time zone name to be used with Hyper connections on this site. If not set or is empty then the server time zone is used.</td><tr>
<tr class="field"><td>public_collections_enabled</td><td>boolean</td><td>Setting for enabling public collections</td><tr>
<tr class="field"><td>self_service_schedule_for_refresh_enabled</td><td>boolean</td><td>Setting for allowing self service schedule for refresh.</td><tr>
<tr class="field"><td>self_service_schedule_for_flow_enabled</td><td>boolean</td><td>Setting for allowing self service schedule for flow.</td><tr>
<tr class="field"><td>auto_suspend_refresh_enabled</td><td>boolean</td><td>Setting for enabling/disabling Extract Refresh Auto Suspend feature on a site</td><tr>
<tr class="field"><td>auto_suspend_refresh_inactivity_window</td><td>integer</td><td>Number of days after which extract refresh will be suspended for inactive workbooks.</td><tr>
<tr class="field"><td>web_zone_content_enabled</td><td>boolean</td><td>Setting for enabling the Web Page Objects</td><tr>
<tr class="field"><td>personal_space_enabled</td><td>boolean</td><td>Whether to enable personal space for the site or not</td><tr>
<tr class="field"><td>personal_space_storage_quota</td><td>bigint</td><td>the per user storage quota for personal spaces on a site in bytes. If null is unlimited</td><tr>
<tr class="field"><td>tag_limit</td><td>integer</td><td>Setting the max tag limit</td><tr>
<tr class="field"><td>einstein_in_flow_enabled</td><td>boolean</td><td>Whether einstein is enabled for flow on this site or not</td><tr>
<tr class="field"><td>explain_data_enabled</td><td>boolean</td><td>Whether explain data is enabled on this site or not</td><tr>
<tr class="field"><td>linked_tasks_enabled</td><td>boolean</td><td>True if scheduling linked tasks is enabled for this site.</td><tr>
<tr class="field"><td>linked_tasks_run_now_enabled</td><td>boolean</td><td>True if linked tasks run now is enabled for this site.</td><tr>
<tr class="field"><td>dqw_subscriptions_enabled</td><td>boolean</td><td>Whether dqw subscriptions are enabled on this site or not</td><tr>
<tr class="field"><td>flow_output_subscriptions_enabled</td><td>boolean</td><td>Whether flow output subscriptions are enabled on this site or not</td><tr>
<tr class="field"><td>flow_output_subscriptions_data_in_email_body_enabled</td><td>boolean</td><td>Whether data in email body is enabled for flow output subscriptions on this site or not</td><tr>
<tr class="field"><td>flow_output_subscriptions_data_as_email_attachment_enabled</td><td>boolean</td><td>Whether data as email attachment is enabled for flow output subscriptions on this site or not</td><tr>
<tr class="field"><td>flow_parameters_enabled</td><td>boolean</td><td>Whether Flow parameters are enabled on this site or not</td><tr>
<tr class="field"><td>flow_parameters_any_type_enabled</td><td>boolean</td><td>Whether Flow parameters of type ANY are enabled on this site or not</td><tr>
<tr class="field"><td>admin_insights_publish_frequency</td><td>integer</td><td>Publish frequency of admin insights. 0 is daily, 1 is weekly</td><tr>
<tr class="field"><td>backgrounder_governance_default_limit_enabled</td><td>boolean</td><td>For On-Prem Only. True if default govrenance limits are set for backgrounders on this site.</td><tr>
<tr class="field"><td>content_migration_tool_enabled</td><td>boolean</td><td>Setting for enabling/disabling Content Migration Tool on a site. Only applicable for Online.</td><tr>
<tr class="field"><td>cmek_available</td><td>boolean</td><td>Setting for making Customer Managed Encryption Keys available for a site. Only applicable for Online.</td><tr>
<tr class="field"><td>eas_enabled</td><td>boolean</td><td>Setting for enabling/disabling External Authorization Server on a site.</td><tr>
<tr class="field"><td>publish_to_salesforce_enabled</td><td>boolean</td><td>Whether publishing to Salesforce is enabled on this site or not</td><tr>
<tr class="field"><td>unrestricted_embedding_enabled</td><td>boolean</td><td>Settings for enabling/disabling unrestricted embedding</td><tr>
<tr class="field"><td>domain_allowlist</td><td>character varying</td><td>Space separated list of domains which this site is allowed to embed vizzes into.</td><tr>
</tbody>
</table>
<a name="public.slack_version_update_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.slack_version_update</dfn>:  Table which holds flag indicating whether SlackVersionUpdate job has executed. This job is triggered manually before an upcoming Tableau Online release, if it contains new version of Slack app. The trigger will send email to admins of sites, which are connected to Slack. see TFS1302023</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>id column</td><tr>
<tr class="field"><td>has_executed</td><td>boolean</td><td>Singleton boolean value indicating whether the job has executed.</td><tr>
</tbody>
</table>
<a name="public.sos_blob_data_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.sos_blob_data</dfn>:  table to store sos file types as binary data</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>id referenced by repository_data sos_blob_data_id foreign key</td><tr>
<tr class="field"><td>data</td><td>bytea</td><td>SOS content stored as binary data</td><tr>
</tbody>
</table>
<a name="public.sos_blob_data_site_enabled_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.sos_blob_data_site_enabled</dfn>:  table with site_luid column to store sos file types as binary data</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>id referenced by repository_data_site_enabled sos_blob_data_id foreign key</td><tr>
<tr class="field"><td>data</td><td>bytea</td><td>SOS content stored as binary data</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>This is foreign key referencing public.sites.luid table.</td><tr>
</tbody>
</table>
<a name="public.sos_metadata_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.sos_metadata</dfn>:  This table with site_luid column forms the link between other tables that need to store blob data, and the blob storage, itself.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from sos_blob_data_site_enabled_id on this table to id on table, <a href="#public.sos_blob_data_site_enabled_anchor">public.sos_blob_data_site_enabled</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>A possibly useful string that is mostly here to make it easier to debug.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>tracking_id</td><td>character varying</td><td>Unique ID used to track the repository data.</td><tr>
<tr class="field"><td>type</td><td>character varying</td><td>Simple Object Storage type.</td><tr>
<tr class="field"><td>kind</td><td>character varying</td><td>Kind of data in content; file or folder.</td><tr>
<tr class="field"><td>sos_blob_data_site_enabled_id</td><td>bigint</td><td>foreign key referencing sos_blob_data_site_enabled.id</td><tr>
<tr class="field"><td>data_size</td><td>bigint</td><td>The data size of large object.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>This is foreign key  referencing public.sites.luid table.</td><tr>
</tbody>
</table>
<a name="public.sos_virtual_folder_entries_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.sos_virtual_folder_entries</dfn>:  Each record represents a file in a virtual folder currently tracked in Simple Object Storage.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from virtual_folder_id on this table to id on table, <a href="#public.sos_virtual_folders_anchor">public.sos_virtual_folders</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the virtual folder entry record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site containing the virtual folder containing this entry.</td><tr>
<tr class="field"><td>virtual_folder_id</td><td>integer</td><td>ID of the virtual folder containing this entry.</td><tr>
<tr class="field"><td>sos_type</td><td>character varying</td><td>The SOS type name of this virtual folder entry.</td><tr>
<tr class="field"><td>sos_id</td><td>character varying</td><td>The SOS LUID corresponding to this virtual folder entry.</td><tr>
<tr class="field"><td>relative_path</td><td>text</td><td>Relative path to this entry starting from the root of the virtual folder.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the virtual folder entry was created.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>This is the site luid from public.site.luid table.</td><tr>
</tbody>
</table>
<a name="public.sos_virtual_folders_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.sos_virtual_folders</dfn>:  Each record represents a virtual folder currently tracked in Simple Object Storage.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the virtual folder record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site containing this virtual folder.</td><tr>
<tr class="field"><td>sos_id</td><td>character varying</td><td>The SOS LUID corresponding to this virtual folder.</td><tr>
<tr class="field"><td>sos_type</td><td>character varying</td><td>The SOS type name of this virtual folder.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the virtual folder was created.</td><tr>
<tr class="field"><td>last_updated_at</td><td>timestamp without time zone</td><td>The time the virtual folder was last updated.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>This is the site luid from public.site.luid table</td><tr>
</tbody>
</table>
<a name="public.ss_custom_value_concepts_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.ss_custom_value_concepts</dfn>:  The table to hold value concepts used by semantics service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from ontology_id, field_concept_key on this table to ontology_id, key on table, <a href="#public.ss_field_concepts_anchor">public.ss_field_concepts</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>key</td><td>text</td><td>Key of a value concept which is unique within one ontology</td><tr>
<tr class="field"><td>value</td><td>text</td><td>The value of the value concept in string format</td><tr>
<tr class="field"><td>value_type</td><td>text</td><td>The enum that represents the value type</td><tr>
<tr class="field"><td>field_concept_key</td><td>text</td><td>Key of the field concept that this value concept belongs to</td><tr>
<tr class="field"><td>ontology_id</td><td>bigint</td><td>ID of the ontology that this value concept belongs to</td><tr>
<tr class="field"><td>synonyms</td><td>jsonb</td><td>A list of synonyms of this value concept</td><tr>
</tbody>
</table>
<a name="public.ss_field_concepts_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.ss_field_concepts</dfn>:  The table to hold field concepts used by semantics service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from ontology_id, object_concept_key on this table to ontology_id, key on table, <a href="#public.ss_object_concepts_anchor">public.ss_object_concepts</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from vs_datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>key</td><td>text</td><td>Key of a field concept which is unique within one ontology</td><tr>
<tr class="field"><td>names</td><td>jsonb</td><td>A list of synonyms of this field concept</td><tr>
<tr class="field"><td>description</td><td>text</td><td>Description of this field concept</td><tr>
<tr class="field"><td>name_characteristics</td><td>jsonb</td><td>A json blob that contains name characteristics of this field concept</td><tr>
<tr class="field"><td>data_types</td><td>ARRAY</td><td>A list of possible data types of this field concept</td><tr>
<tr class="field"><td>field_roles</td><td>ARRAY</td><td>A list of possible field roles of this field concept</td><tr>
<tr class="field"><td>default_formats</td><td>ARRAY</td><td>A list of possible default formats of this field concept</td><tr>
<tr class="field"><td>value_characteristics</td><td>jsonb</td><td>A json blob that contains value characteristics of this field concept</td><tr>
<tr class="field"><td>ontology_id</td><td>bigint</td><td>ID of ontology that this field concept belongs to</td><tr>
<tr class="field"><td>owner_id</td><td>text</td><td>User that creates this field concept, empty for built-in ones</td><tr>
<tr class="field"><td>object_concept_key</td><td>text</td><td>Key of object concept that this field concept belongs to</td><tr>
<tr class="field"><td>parent_field_concept_key</td><td>text</td><td>Key of field concept that is parent of this field concept</td><tr>
<tr class="field"><td>vs_field_name</td><td>text</td><td>Field in a published datasource that we sync value concepts of this field concept from</td><tr>
<tr class="field"><td>vs_datasource_id</td><td>bigint</td><td>Id of published datasource that we sync value concepts of this field concept from</td><tr>
<tr class="field"><td>user_id</td><td>bigint</td><td>ID of user who creates this field concept, empty for built-in ones</td><tr>
<tr class="field"><td>data_role_id</td><td>bigint</td><td>The ID of the data role that corresponds to the field concept. Data roles are stored in table `data_roles`.</td><tr>
<tr class="field"><td>value_source_kind</td><td>text</td><td>Contains a serialization of the kind of the value source (ie. datasource, builtin, valuelist, etc.)</td><tr>
<tr class="field"><td>site_luid</td><td>text</td><td>site luid of the field concept</td><tr>
</tbody>
</table>
<a name="public.ss_object_concepts_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.ss_object_concepts</dfn>:  The table to hold object concepts used by semantics service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from ontology_id on this table to id on table, <a href="#public.ss_ontologies_anchor">public.ss_ontologies</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>key</td><td>text</td><td>Key of an object concept which is unique within one ontology</td><tr>
<tr class="field"><td>names</td><td>jsonb</td><td>A list of synonyms of this object concept</td><tr>
<tr class="field"><td>description</td><td>text</td><td>Description of this object concept</td><tr>
<tr class="field"><td>ontology_id</td><td>bigint</td><td>ID of ontology that this object concept belongs to</td><tr>
<tr class="field"><td>source_version</td><td>text</td><td>Source data version of built-in object concepts</td><tr>
</tbody>
</table>
<a name="public.ss_ontologies_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.ss_ontologies</dfn>:  The table to hold ontologies used by semantics service</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site that this ontology belongs to, empty for built-in ontology</td><tr>
<tr class="field"><td>description</td><td>text</td><td>Description of this ontology</td><tr>
</tbody>
</table>
<a name="public.subscription_messages_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.subscription_messages</dfn>:  This table represent a subscription email message.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the subscription message.</td><tr>
<tr class="field"><td>message_text</td><td>text</td><td>The text of the message.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the subscription belongs to.</td><tr>
</tbody>
</table>
<a name="public.subscriptions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.subscriptions</dfn>:  Each record represents a subscription.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from subscription_message_id on this table to id on table, <a href="#public.subscription_messages_anchor">public.subscription_messages</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from schedule_id on this table to id on table, <a href="#public.schedules_anchor">public.schedules</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>subject</td><td>character varying</td><td>A string that describes the nature of the subscription.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>A foreign key reference to the user who will receive the subscription.</td><tr>
<tr class="field"><td>schedule_id</td><td>integer</td><td>A foreign key reference to the record in the schedules table that describes exactly when the subscription will be triggered.</td><tr>
<tr class="field"><td>last_sent</td><td>timestamp without time zone</td><td>The last time at which the the subscription was sent.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID for Subscriptions. FK reference to sites.id</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>UUID for subscriptions used in REST APIs</td><tr>
<tr class="field"><td>creator_id</td><td>integer</td><td>User id for user who created the subscription. FK reference to users.id</td><tr>
<tr class="field"><td>data_condition_type</td><td>character varying</td><td>The type of data condition that will cause this subscription to be sent out.  Defaults to "Always", but can also be "DataPresent", "Constant", "Band", etc.</td><tr>
<tr class="field"><td>is_refresh_extract_triggered</td><td>boolean</td><td>Whether or not subscription is triggered by refresh extract</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>subscription_message_id</td><td>integer</td><td>Locator for the subscription message.</td><tr>
<tr class="field"><td>content_has_user_references</td><td>boolean</td><td>Boolean that represents whether the content of the subscription has user references. NULL means subscription has not run yet</td><tr>
<tr class="field"><td>attach_pdf</td><td>boolean</td><td>Boolean that represents whether to attach a PDF to the subscription</td><tr>
<tr class="field"><td>attach_image</td><td>boolean</td><td>Boolean that represents whether to attach images to the subscription</td><tr>
<tr class="field"><td>target_type</td><td>character varying</td><td>String that represents the type of object being subscribed to. Either View or Workbook</td><tr>
<tr class="field"><td>target_id</td><td>integer</td><td>Integer that represents the id of the object being subscribed to.</td><tr>
</tbody>
</table>
<a name="public.subscriptions_customized_views_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.subscriptions_customized_views</dfn>:  This table is used to link various customized views to the subscriptions in which those customized views must be generated and emailed.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from customized_view_id on this table to id on table, <a href="#public.customized_views_anchor">public.customized_views</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from subscription_id on this table to id on table, <a href="#public.subscriptions_anchor">public.subscriptions</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>subscription_id</td><td>integer</td><td>A foreign key reference to a record in the subscriptions table. Emailing the customized view referenced by the customized_view_id is one of the activities of the linked subscription.</td><tr>
<tr class="field"><td>customized_view_id</td><td>integer</td><td>A foreign key reference to a particular customized view.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the subscription belongs to.</td><tr>
</tbody>
</table>
<a name="public.subscriptions_flow_metadata_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.subscriptions_flow_metadata</dfn>:  Stores subscriptions metadata, which allow users to subscribe to flow outputs.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from creator_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from schedule_id on this table to id on table, <a href="#public.schedules_anchor">public.schedules</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this record is associated with.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
<tr class="field"><td>creator_id</td><td>integer</td><td>User id who created this subscription metadata.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>User id who is subscribed to the flow output.</td><tr>
<tr class="field"><td>target_id</td><td>integer</td><td>Target id (content id) of this subscription.</td><tr>
<tr class="field"><td>subject</td><td>text</td><td>Subject of this subscription.</td><tr>
<tr class="field"><td>message</td><td>text</td><td>Message of this subscription.</td><tr>
<tr class="field"><td>schedule_id</td><td>integer</td><td>Schedule id of this subscription.</td><tr>
</tbody>
</table>
<a name="public.subscriptions_flows_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.subscriptions_flows</dfn>:  Stores subscriptions flows, which allow users to subscribe to flow outputs.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from output_id on this table to id on table, <a href="#public.flow_output_steps_anchor">public.flow_output_steps</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from flow_run_spec_id on this table to id on table, <a href="#public.flow_run_specs_anchor">public.flow_run_specs</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from subscription_id on this table to id on table, <a href="#public.subscriptions_anchor">public.subscriptions</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier within a site.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this record is associated with.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
<tr class="field"><td>subscription_flow_metadata_id</td><td>integer</td><td>Subscription metadata id associated with this subscription flow.</td><tr>
<tr class="field"><td>flow_run_spec_id</td><td>integer</td><td>Flow run spec id that this subscription is created for.</td><tr>
<tr class="field"><td>output_id</td><td>integer</td><td>Output id for the content that would be shown in this subscription email.</td><tr>
<tr class="field"><td>include_output_data</td><td>boolean</td><td>If to include output data in this subscription email.</td><tr>
<tr class="field"><td>include_link_to_output_data</td><td>boolean</td><td>If to include a Link to the output data in this subscription email.</td><tr>
<tr class="field"><td>show_rows_in_email_body</td><td>boolean</td><td>If to include the output data in this subscription email body.</td><tr>
<tr class="field"><td>attach_output_data</td><td>boolean</td><td>If to attach the output data to this subscription email.</td><tr>
<tr class="field"><td>attached_output_data_format</td><td>character varying</td><td>Attached output data format of this subscription.</td><tr>
<tr class="field"><td>subscription_id</td><td>integer</td><td>Subscription id of this subscription.</td><tr>
</tbody>
</table>
<a name="public.subscriptions_views_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.subscriptions_views</dfn>:  This table is used to link various views to the subscriptions in which those views must be generated and emailed.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from subscription_id on this table to id on table, <a href="#public.subscriptions_anchor">public.subscriptions</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>subscription_id</td><td>integer</td><td>A foreign key reference to a record in the subscriptions table. Emailing the view referenced by the repository_url is one of the activities of the linked subscription.</td><tr>
<tr class="field"><td>repository_url</td><td>text</td><td>Used as a means to reference the particular view that is to be included in the subscription.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the subscription belongs to.</td><tr>
</tbody>
</table>
<a name="public.subscriptions_workbooks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.subscriptions_workbooks</dfn>:  This table is used to link various workbooks to the subscriptions in which those workbooks must have views generated and emailed.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from subscription_id on this table to id on table, <a href="#public.subscriptions_anchor">public.subscriptions</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>subscription_id</td><td>integer</td><td>A foreign key reference to a record in the subscriptions table. Emailing the views of the workbook referenced by the repository_url is one of the activities of the linked subscription.</td><tr>
<tr class="field"><td>repository_url</td><td>text</td><td>Used as a means to reference the particular workbook that is to be included in the subscription.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to the site that the workbooked referred to by repository_url belongs.</td><tr>
</tbody>
</table>
<a name="public.synonyms_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.synonyms</dfn>:  The table to hold the synonyms for fields of datasources</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#public.lenses_anchor">public.lenses</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from published_datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>site_id</td><td>integer</td><td>The site id of the datasource</td><tr>
<tr class="field"><td>published_datasource_id</td><td>integer</td><td>The published datasource id of the datasource</td><tr>
<tr class="field"><td>field_graph_id</td><td>text</td><td>The graph id corresponding to the field of a datasource</td><tr>
<tr class="field"><td>synonyms</td><td>ARRAY</td><td>The synonyms corresponding to a particular field of a datasource</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>id of the lens for which the synonym is applicable</td><tr>
</tbody>
</table>
<a name="public.system_user_identities_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.system_user_identities</dfn>:  Identity to SystemUser mappings.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from system_user_id on this table to id on table, <a href="#public.system_users_anchor">public.system_users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>identity_uuid</td><td>uuid</td><td>Primary key for identity mapping.</td><tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>SystemUser for identity mapping.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Creation time of record.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Last updated time of record.</td><tr>
</tbody>
</table>
<a name="public.system_user_migration_conflicts_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.system_user_migration_conflicts</dfn>:  Conflicts when migrating system_user identities.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from duplicate_system_user_id on this table to id on table, <a href="#public.system_users_anchor">public.system_users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from system_user_id on this table to id on table, <a href="#public.system_users_anchor">public.system_users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The autoincremental id for this record.</td><tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>SystemUser for which the migration failed.</td><tr>
<tr class="field"><td>failure_type</td><td>character varying</td><td>The type of failure that was registered when migrating this system_user.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Creation time of this record.</td><tr>
<tr class="field"><td>discard_identity</td><td>boolean</td><td>If the admin acknowledge they will not create an identity for this system_user.</td><tr>
<tr class="field"><td>error_message</td><td>character varying</td><td>Information on the exception raised during the migration of this system_user.</td><tr>
<tr class="field"><td>duplicate_system_user_id</td><td>integer</td><td>The id of the system_user for which the original system_user is a duplicate of.</td><tr>
</tbody>
</table>
<a name="public.system_user_migration_conflicts_identity_data_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.system_user_migration_conflicts_identity_data</dfn>:  Identity information related to ambiguous results when migrating system_user identities.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from migration_conflict_id on this table to id on table, <a href="#public.system_user_migration_conflicts_anchor">public.system_user_migration_conflicts</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The autoincremental id for this record.</td><tr>
<tr class="field"><td>migration_conflict_id</td><td>integer</td><td>The id of the ambiguous migration conflict to which this identity information corresponds.</td><tr>
<tr class="field"><td>domain_fqdn</td><td>character varying</td><td>The fqdn from the domain of the active directory user.</td><tr>
<tr class="field"><td>sam_account_name</td><td>character varying</td><td>The sAMAccountName of the active directory user from the query result.</td><tr>
<tr class="field"><td>user_principal_name</td><td>character varying</td><td>The Full-UPN of the active directory user attributes.</td><tr>
<tr class="field"><td>distinguished_name</td><td>character varying</td><td>The DN of the ldap user from the query result.</td><tr>
<tr class="field"><td>display_name</td><td>character varying</td><td>The display name attribute from the query result.</td><tr>
</tbody>
</table>
<a name="public.system_users_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.system_users</dfn>:  Each record represents a user of the server. These records correspond to login identity. A single system_user may potentially be able to login to multiple sites. The linkage between a system_user and their allowed sites is defined through the "users" table.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from domain_id on this table to id on table, <a href="#public.domains_anchor">public.domains</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The username of the user.</td><tr>
<tr class="field"><td>email</td><td>character varying</td><td>The email of the user.</td><tr>
<tr class="field"><td>hashed_password</td><td>character varying</td><td>Hashed password - only used for local authentication.</td><tr>
<tr class="field"><td>salt</td><td>character varying</td><td>The salt used when hashing the password - only used for local authentication.</td><tr>
<tr class="field"><td>keychain</td><td>text</td><td>The encyrpted keychain for the user.</td><tr>
<tr class="field"><td>domain_id</td><td>integer</td><td>The domain for this user.</td><tr>
<tr class="field"><td>friendly_name</td><td>character varying</td><td>A friendly name that might be used in the GUI to refer to the user.</td><tr>
<tr class="field"><td>custom_display_name</td><td>boolean</td><td>If set to true, this prevents the friendly_name from potentially being overwritten by Active Airectory information when the user is read in from Active Directory.  Seldom done.</td><tr>
<tr class="field"><td>admin_level</td><td>integer</td><td>Indicates if the user is a system administrator. 10 : system admin, 0 : not a system admin</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The last time any changes were made to this record.</td><tr>
<tr class="field"><td>auth_user_id</td><td>character varying</td><td>An external, immutable identifier for the user provided by an external authorization system.</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>The id for the asset encryption key used to encrypt the keychain for this user.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking." Don't set this or mess with it, it's all handled automatically.</td><tr>
<tr class="field"><td>last_password_update</td><td>timestamp without time zone</td><td>Date that represents the last time the user updated the password to the current value.</td><tr>
<tr class="field"><td>force_password_update</td><td>boolean</td><td>Boolean that represents if we want to force a password reset on the user the next time it tries to log in.</td><tr>
<tr class="field"><td>protected_password</td><td>character varying</td><td>Protected form of the user password - only used for local authentication.</td><tr>
<tr class="field"><td>last_failed_login</td><td>timestamp without time zone</td><td>Date that represents the last time the user had an unsuccessful login.</td><tr>
<tr class="field"><td>failed_login_attempts</td><td>integer</td><td>Integer that represents the number of failed attempts since the last successful login.</td><tr>
<tr class="field"><td>protected_password_bad_format</td><td>boolean</td><td>Set to true if protected password format unrecognized</td><tr>
</tbody>
</table>
<a name="public.table_asset_events_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.table_asset_events</dfn>:  Used to store table_asset events stream.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>table_asset_id</td><td>integer</td><td>table_asset ID.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID.</td><tr>
<tr class="field"><td>event_created_at</td><td>timestamp without time zone</td><td>Timestamp indicating when the record was inserted.</td><tr>
<tr class="field"><td>event_type</td><td>smallint</td><td>Event type to differentiate between insert, update, delete.</td><tr>
</tbody>
</table>
<a name="public.table_asset_sources_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.table_asset_sources</dfn>:  Used to store mappings between tables and their source.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from table_asset_id on this table to id on table, <a href="#public.table_assets_anchor">public.table_assets</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site id.</td><tr>
<tr class="field"><td>table_asset_id</td><td>integer</td><td>Table Asset ID.</td><tr>
<tr class="field"><td>source_id</td><td>integer</td><td>Source ID.</td><tr>
<tr class="field"><td>source_type</td><td>character varying</td><td>Source type, e.g. Workbook, Datasource, Flow.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Created at.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Updated at.</td><tr>
</tbody>
</table>
<a name="public.table_assets_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.table_assets</dfn>:  Each record represents a table asset that exists on Tableau Server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from grouped_parent_id on this table to id on table, <a href="#public.table_assets_anchor">public.table_assets</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from database_id on this table to id on table, <a href="#public.database_assets_anchor">public.database_assets</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from certifier_user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the table asset record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the table asset.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>A unique, immutable identifier for the table asset.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that this table asset is associated with.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The time the record was updated.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>The description of the table asset.</td><tr>
<tr class="field"><td>database_id</td><td>integer</td><td>The database this table belongs to.</td><tr>
<tr class="field"><td>table_schema</td><td>text</td><td>Schema for this table.</td><tr>
<tr class="field"><td>contact_id</td><td>integer</td><td>The contact for this table.</td><tr>
<tr class="field"><td>contact_type</td><td>character varying</td><td>The contact type (user or group) for this table.</td><tr>
<tr class="field"><td>is_certified</td><td>boolean</td><td>Whether this table is certified.</td><tr>
<tr class="field"><td>certification_note</td><td>text</td><td>Certification note for this table.</td><tr>
<tr class="field"><td>certifier_user_id</td><td>integer</td><td>Certifier user_id for this table.</td><tr>
<tr class="field"><td>certifier_details</td><td>text</td><td>Certifier details for this table.</td><tr>
<tr class="field"><td>full_name</td><td>character varying</td><td>The fully qualified name of the table.</td><tr>
<tr class="field"><td>duplicate_id</td><td>integer</td><td>If not null, id of table that is a duplicate of this one.</td><tr>
<tr class="field"><td>is_tombstoned</td><td>boolean</td><td>Tombstoned tables are "soft deleted" because they are associated with databases that have been grouped with other databases.</td><tr>
<tr class="field"><td>grouped_parent_id</td><td>integer</td><td>ID in table_assets table of table this tombstoned database was grouped into.</td><tr>
</tbody>
</table>
<a name="public.taggings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.taggings</dfn>:  Associates tags with taggable items.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from tag_id on this table to id on table, <a href="#public.tags_anchor">public.tags</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table.</td><tr>
<tr class="field"><td>tag_id</td><td>integer</td><td>The ID of the tag.</td><tr>
<tr class="field"><td>taggable_id</td><td>integer</td><td>The ID of the taggable item.</td><tr>
<tr class="field"><td>taggable_type</td><td>character varying</td><td>The type of the taggable item - this is used to identify which table to join to.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>The ID of the owning user.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the tagging belong to.</td><tr>
</tbody>
</table>
<a name="public.tags_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.tags</dfn>:  Each tag is a string value. A given tag can be associated with many taggable items in a site.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The value of the tag.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The last time any changes were made to this record.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site to which the tag belongs.</td><tr>
</tbody>
</table>
<a name="public.tasks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.tasks</dfn>:  Serves to connect schedules with background tasks that should be run on that schedule. The schedule is defined in the schedules table, while the task is defined by type.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from schedule_id on this table to id on table, <a href="#public.schedules_anchor">public.schedules</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table.</td><tr>
<tr class="field"><td>schedule_id</td><td>integer</td><td>Links to a schedule. When the schedule's "run_next_at" time arrives, any tasks linked to that schedule will run.</td><tr>
<tr class="field"><td>type</td><td>character varying</td><td>Identifies the specific type of task that this is. This is how the system identifies what code to execute when this task is to be run.</td><tr>
<tr class="field"><td>priority</td><td>integer</td><td>An integer where 0 is the highest priority and 10 is the default priority. Other values can be set if desired). Higher priority jobs should be processed earlier.</td><tr>
<tr class="field"><td>obj_id</td><td>integer</td><td>Some tasks are specific to a particular workbook or datasource. In such cases, the object_id is the primary key of the relevant item, in either the workbooks or datasources tables, as indicated by obj_type.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The last time this record was updated.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Some tasks are specific to a particular site.  In such cases, this field links to the relevant site in the sites table.</td><tr>
<tr class="field"><td>obj_type</td><td>character varying</td><td>One of either "Workbook" or "Datasource". Used in conjuction with obj_id, as described there.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>uuid for tasks used in the REST API</td><tr>
<tr class="field"><td>consecutive_failure_count</td><td>integer</td><td>The number of times this task has failed.</td><tr>
<tr class="field"><td>active</td><td>boolean</td><td>If set to false, this means that the task is inactive, implying it won't be run when the schedule triggers</td><tr>
<tr class="field"><td>args</td><td>text</td><td>Used to pass parameters for the task, formatted as yaml.</td><tr>
<tr class="field"><td>title</td><td>text</td><td>Can be used to provide some additional information about the task</td><tr>
<tr class="field"><td>subtitle</td><td>text</td><td>Can be used to provide some additional information about the task</td><tr>
<tr class="field"><td>historical_run_time</td><td>integer</td><td>Stored as the historical run time in seconds for the task, used for sorting background jobs and comparing current run time to the past</td><tr>
<tr class="field"><td>historical_queue_time</td><td>integer</td><td>Stored as the historical queue time in seconds for the task, used for comparing the current queue time to the past</td><tr>
<tr class="field"><td>run_count</td><td>integer</td><td>Number of times this task has run since we created this column. Do not use this value as gospel, as it is will not be accurate for tasks created before this column.</td><tr>
<tr class="field"><td>state</td><td>integer</td><td>One of 3 options for task state: 0 - active, 1 - suspended, 2 - disabled</td><tr>
<tr class="field"><td>last_success_completed_at</td><td>timestamp without time zone</td><td>The last time the task successfully completed.</td><tr>
<tr class="field"><td>creator_id</td><td>integer</td><td>Indicates what user id is the creator of the task</td><tr>
</tbody>
</table>
<a name="public.tde_files_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.tde_files</dfn>:  Information about TDE files.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Id of the site to which the TDE file belongs.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>Unique name of the TDE file.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>Size of the file in bytes.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Timestamp when this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Same as created_at.</td><tr>
</tbody>
</table>
<a name="public.tds_datasource_files_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.tds_datasource_files</dfn>:  The TDS files.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for creating the file.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for updating the file.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Reference to the site to where the datasource exists.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>The unique ID of the datasource.</td><tr>
<tr class="field"><td>tds_xml_sos_id</td><td>text</td><td>The ID of the xml within SOS.</td><tr>
<tr class="field"><td>site_luid</td><td>text</td><td>The luid which uniquely identifies the site.</td><tr>
</tbody>
</table>
<a name="public.tds_datasource_model_fields_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.tds_datasource_model_fields</dfn>:  Fields of datasource models.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from datasource_model_id on this table to id on table, <a href="#public.tds_datasource_models_anchor">public.tds_datasource_models</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for creating the model.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for updating the model.</td><tr>
<tr class="field"><td>luid</td><td>text</td><td>Internally used LUID for the record.</td><tr>
<tr class="field"><td>content_site_id</td><td>integer</td><td>A foreign key reference to the site to where the datasource exisits.</td><tr>
<tr class="field"><td>qualified_name</td><td>text</td><td>The qualified name of the field, the qualified name is represented in JSON style.</td><tr>
<tr class="field"><td>datasource_model_id</td><td>integer</td><td>A foreign key reference to the tds datasource model to where the field exisits.</td><tr>
<tr class="field"><td>caption</td><td>text</td><td>Friendly name for the data source field that is seen in Tableau.</td><tr>
<tr class="field"><td>is_hidden</td><td>boolean</td><td>Determines if the field is hidden or not.</td><tr>
<tr class="field"><td>is_auto_hidden</td><td>boolean</td><td>The visibility of Autohidden fields are not under user control.</td><tr>
<tr class="field"><td>is_layered</td><td>boolean</td><td>The field is layered on top of a field from a remote data source.</td><tr>
<tr class="field"><td>field_type</td><td>integer</td><td>The type of the field.</td><tr>
<tr class="field"><td>field_role</td><td>integer</td><td>The role of the field.</td><tr>
<tr class="field"><td>folder_name</td><td>text</td><td>The optional folder name if this field is in a folder.</td><tr>
<tr class="field"><td>user_caption</td><td>text</td><td>The optional user generated name for the field.</td><tr>
<tr class="field"><td>server_caption</td><td>text</td><td>The optional caption provided by the server.</td><tr>
<tr class="field"><td>user_description</td><td>text</td><td>The optional user description defined by user, the representation type is JSON.</td><tr>
<tr class="field"><td>site_luid</td><td>text</td><td>The luid which uniquely identifies the site.</td><tr>
</tbody>
</table>
<a name="public.tds_datasource_models_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.tds_datasource_models</dfn>:  Model of the datasource.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from tds_file_id on this table to id on table, <a href="#public.tds_datasource_files_anchor">public.tds_datasource_files</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for creating the model.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for updating the model.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>The name of the datasource.</td><tr>
<tr class="field"><td>caption</td><td>text</td><td>The caption of the datasource.</td><tr>
<tr class="field"><td>schema_version</td><td>integer</td><td>The schema version number of this data source model</td><tr>
<tr class="field"><td>tds_file_id</td><td>bigint</td><td>Reference to tds file associated with this model</td><tr>
</tbody>
</table>
<a name="public.trusted_tickets_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.trusted_tickets</dfn>:  This table lists trusted tickets that have been created.  Tickets that are redeemed are deleted once used, hence can only be used once.  Tickets that are never redeemed become invalid after the time given by "expires_at" and are eventually deleted from the table automatically.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>username</td><td>character varying</td><td>The name of the user, under whose authority, the ticket is created. Access to content is provided as if the ticket redeemer were this user.</td><tr>
<tr class="field"><td>ticket</td><td>character varying</td><td>The unique ticket string, i.e. the "value" of the trusted ticket.</td><tr>
<tr class="field"><td>client_ip</td><td>character varying</td><td>If you have configured wgserver.extended_trusted_ip_checking to true, then the IP address of the client that is authorized to redeem the ticket will be recorded here.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created, i.e. the time of creation of the ticket.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>Links to the user that has the given username, and is associated with the current site.</td><tr>
<tr class="field"><td>expires_at</td><td>timestamp without time zone</td><td>Tickets can be redeemed no more than one time, but if it gets any later than this time, then the ticket cannot be redeemed at all. Unless configured differently, this time will be 3 minutes after the ticket is created.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site of the user.</td><tr>
<tr class="field"><td>originating_session_id</td><td>character varying</td><td>The user session which created the ticket. Null if the ticket was not created by an authenticated user.</td><tr>
<tr class="field"><td>guid</td><td>character varying</td><td>Uniquely identifies a trusted ticket when ticket hashing is enabled.</td><tr>
<tr class="field"><td>salt</td><td>character varying</td><td>Combined with ticket to form the hash.</td><tr>
<tr class="field"><td>hashed_ticket</td><td>character varying</td><td>The hash of the salt and the ticket.</td><tr>
</tbody>
</table>
<a name="public.usage_statistics_partition_past_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.usage_statistics_partition_past</dfn>:  Each record represents a partial aggregation of analytics for content in a given time interval. It is often necessary to sum across multiple rows to find a total for a given time interval.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>content_id</td><td>integer</td><td>A foreign key reference to the content.</td><tr>
<tr class="field"><td>content_type</td><td>text</td><td>The type of content.</td><tr>
<tr class="field"><td>year_index</td><td>integer</td><td>Records what year the analytics are aggregated over.</td><tr>
<tr class="field"><td>month_index</td><td>integer</td><td>Records what month of the year the analytics are aggregated over. When 0, the aggregation is for the year as designated by year_index.</td><tr>
<tr class="field"><td>day_index</td><td>integer</td><td>Records what day of the month the analytics are aggregated over. When 0, the aggregation is for the month and year as designated by month_index and year_index.</td><tr>
<tr class="field"><td>access_count</td><td>bigint</td><td>Records the number of times the content was accessed in the given time interval.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the metrics aggregation belongs to.</td><tr>
<tr class="field"><td>partition_name</td><td>text</td><td>Records which partition the analytics belongs to</td><tr>
</tbody>
</table>
<a name="public.usage_statistics_partition_today_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.usage_statistics_partition_today</dfn>:  Each record represents a partial aggregation of analytics for content in a given time interval. It is often necessary to sum across multiple rows to find a total for a given time interval.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>content_id</td><td>integer</td><td>A foreign key reference to the content.</td><tr>
<tr class="field"><td>content_type</td><td>text</td><td>The type of content.</td><tr>
<tr class="field"><td>year_index</td><td>integer</td><td>Records what year the analytics are aggregated over.</td><tr>
<tr class="field"><td>month_index</td><td>integer</td><td>Records what month of the year the analytics are aggregated over. When 0, the aggregation is for the year as designated by year_index.</td><tr>
<tr class="field"><td>day_index</td><td>integer</td><td>Records what day of the month the analytics are aggregated over. When 0, the aggregation is for the month and year as designated by month_index and year_index.</td><tr>
<tr class="field"><td>access_count</td><td>bigint</td><td>Records the number of times the content was accessed in the given time interval.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the metrics aggregation belongs to.</td><tr>
<tr class="field"><td>partition_name</td><td>text</td><td>Records which partition the analytics belongs to</td><tr>
</tbody>
</table>
<a name="public.user_default_customized_views_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.user_default_customized_views</dfn>:  Defines what customized view a user should see for a given view, by default.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from customized_view_id on this table to id on table, <a href="#public.customized_views_anchor">public.customized_views</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>A foreign key reference to the user.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>A foreign key reference to the view.</td><tr>
<tr class="field"><td>customized_view_id</td><td>integer</td><td>A foreign key reference to the customized view.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this record was last updated.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site to which this entry belongs.</td><tr>
</tbody>
</table>
<a name="public.user_images_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.user_images</dfn>:  Represents images for each associated system user.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from system_user_id on this table to id on table, <a href="#public.system_users_anchor">public.system_users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>repository_data_id</td><td>bigint</td><td>A reference to an entry in the repository_data table.</td><tr>
<tr class="field"><td>image_id</td><td>character varying</td><td>The id of the image in storage.</td><tr>
<tr class="field"><td>image_type</td><td>character varying</td><td>A string representing the size of the image.</td><tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>The id of the user this image is associated with.</td><tr>
</tbody>
</table>
<a name="public.user_notification_content_reference_list_items_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.user_notification_content_reference_list_items</dfn>:  Lists of references to other DB records in user notification content.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from notification_id on this table to id on table, <a href="#public.user_notifications_anchor">public.user_notifications</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The identifier of the record.</td><tr>
<tr class="field"><td>notification_id</td><td>integer</td><td>The identifier of the notification this record belongs to.</td><tr>
<tr class="field"><td>field_name</td><td>text</td><td>The name of the content field.</td><tr>
<tr class="field"><td>list_index</td><td>integer</td><td>The 0-based index of the item in the list.</td><tr>
<tr class="field"><td>reference_type</td><td>integer</td><td>The type of the referenced object.</td><tr>
<tr class="field"><td>reference_id</td><td>integer</td><td>The identifier of the referenced object.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The identifier of the site the record belongs to.</td><tr>
</tbody>
</table>
<a name="public.user_notification_content_references_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.user_notification_content_references</dfn>:  References to other DB records in user notification content.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from notification_id on this table to id on table, <a href="#public.user_notifications_anchor">public.user_notifications</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The identifier of the record.</td><tr>
<tr class="field"><td>notification_id</td><td>integer</td><td>The identifier of the notification this record belongs to.</td><tr>
<tr class="field"><td>field_name</td><td>text</td><td>The name of the content field.</td><tr>
<tr class="field"><td>reference_type</td><td>integer</td><td>The type of the referenced object.</td><tr>
<tr class="field"><td>reference_id</td><td>integer</td><td>The identifier of the referenced object.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The identifier of the site the record belongs to.</td><tr>
</tbody>
</table>
<a name="public.user_notification_recipients_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.user_notification_recipients</dfn>:  Holds metadata for all user notification recipients on the server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from notification_id on this table to id on table, <a href="#public.user_notifications_anchor">public.user_notifications</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the user notification recipient.</td><tr>
<tr class="field"><td>recipient_user_id</td><td>integer</td><td>The identifier for the recipient of the user notification.</td><tr>
<tr class="field"><td>notification_id</td><td>integer</td><td>The identifier of the notification for the recipient.</td><tr>
<tr class="field"><td>read_state</td><td>boolean</td><td>True if the notification has been read, false if it is unread.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The identifier of the site the recipient belongs to.</td><tr>
<tr class="field"><td>recipient_type</td><td>integer</td><td>The (enum internal value of the) recipient type.</td><tr>
</tbody>
</table>
<a name="public.user_notifications_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.user_notifications</dfn>:  Holds metadata for all user notifications on the server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the user notification.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>The identifier for the user notification.</td><tr>
<tr class="field"><td>notification_type</td><td>text</td><td>The type of the user notification.</td><tr>
<tr class="field"><td>event_time</td><td>timestamp without time zone</td><td>The time at which the event that triggered this notification occurred.</td><tr>
<tr class="field"><td>subject_type</td><td>integer</td><td>The subject type of the user notification.</td><tr>
<tr class="field"><td>subject_id</td><td>integer</td><td>The identifier for the subject of the user notification.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The identifier for the site that the user notification belongs to.</td><tr>
<tr class="field"><td>content</td><td>text</td><td>The text content of the user notification.</td><tr>
<tr class="field"><td>sender_user_id</td><td>integer</td><td>The identifier for the (optional) sender of the user notification.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which the user notification was persisted.</td><tr>
</tbody>
</table>
<a name="public.user_notifications_server_settings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.user_notifications_server_settings</dfn>:  A key-value store for user notifications server settings.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key.</td><tr>
<tr class="field"><td>key</td><td>text</td><td>String key for the setting.</td><tr>
<tr class="field"><td>value</td><td>text</td><td>String value for the setting. Can be parsed into other formats by clients.</td><tr>
</tbody>
</table>
<a name="public.user_notifications_site_settings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.user_notifications_site_settings</dfn>:  A key-value store for user notifications site settings.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site id that setting applies to.</td><tr>
<tr class="field"><td>key</td><td>text</td><td>String key for the setting.</td><tr>
<tr class="field"><td>value</td><td>text</td><td>String value for the setting. Can be parsed into other formats by clients.</td><tr>
</tbody>
</table>
<a name="public.user_notifications_user_settings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.user_notifications_user_settings</dfn>:  A key-value store for user notifications user settings.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>User id that setting applies to.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site id that user belongs to.</td><tr>
<tr class="field"><td>key</td><td>text</td><td>String key for the setting.</td><tr>
<tr class="field"><td>value</td><td>text</td><td>String value for the setting. Can be parsed into other formats by clients.</td><tr>
</tbody>
</table>
<a name="public.user_onboardings_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.user_onboardings</dfn>:  This table stores onboarding information for tableau features based on system user ids</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from system_user_id on this table to id on table, <a href="#public.system_users_anchor">public.system_users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>The id of the user this onboarding info is associated with.</td><tr>
<tr class="field"><td>nlp_onboarding_stage</td><td>character varying</td><td>The nlp onboarding stage of this user.</td><tr>
<tr class="field"><td>nlp_help_center_stage</td><td>character varying</td><td>Ask data help center onboarding stage</td><tr>
</tbody>
</table>
<a name="public.user_prefs_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.user_prefs</dfn>:  Contains a variety of preferences for the various system users.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from system_user_id on this table to id on table, <a href="#public.system_users_anchor">public.system_users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>Foreign key reference to the system_users table.  This tells us which system user these preferences apply to.</td><tr>
<tr class="field"><td>version</td><td>integer</td><td>Used to indicate how to interpret the prefs information.</td><tr>
<tr class="field"><td>prefs</td><td>bytea</td><td>A serialized object containing the various preferences.</td><tr>
<tr class="field"><td>language_id</td><td>character varying</td><td>A code indicating the desired language for this system_user</td><tr>
<tr class="field"><td>locale_id</td><td>character varying</td><td>A code indicating the locale (country and language) for this system_user.</td><tr>
<tr class="field"><td>start_page</td><td>character varying</td><td>if not set the value from global_settings.start_page_uri is used</td><tr>
<tr class="field"><td>suppress_getting_started_notifications</td><td>boolean</td><td>Flag which indicates if user has selected to suppress getting started notifications (used in online case only so far).</td><tr>
<tr class="field"><td>display_mode</td><td>character varying</td><td>A display mode "thumbnail" or "list" that the user last selected for viewing contents.</td><tr>
<tr class="field"><td>local_timezone_offset</td><td>integer</td><td>local user timezone offset (in minutes) from utc from last login location</td><tr>
<tr class="field"><td>local_timezone_name</td><td>character varying</td><td>best guess of local user timezone name from last login location</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking." Don't set this or mess with it, it's all handled automatically.</td><tr>
<tr class="field"><td>is_user_set_timezone</td><td>boolean</td><td>Indicating whether user explicitly set the timezone or inferred by system</td><tr>
<tr class="field"><td>suspended_subscription_notification</td><td>boolean</td><td>Site and System admins only. When true admins receive notification about suspended subscriptions</td><tr>
<tr class="field"><td>suspended_data_alert_notification</td><td>boolean</td><td>Site and System admins only. When true admins receive notification about suspended alerts</td><tr>
<tr class="field"><td>mark_animation_enabled</td><td>boolean</td><td>When true, users will see mark animations on sheets</td><tr>
<tr class="field"><td>should_auto_show_data_orientation_pane</td><td>boolean</td><td>When true, the Data Orientation pane will be shown the next time this user opens a workbook</td><tr>
</tbody>
</table>
<a name="public.users_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.users</dfn>:  Each record links a system_users record to a site. The user's site specific settings are captured here.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from system_user_id on this table to id on table, <a href="#public.system_users_anchor">public.system_users</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>login_at</td><td>timestamp without time zone</td><td>The time of the most recent login for this user.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When the record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When the record was last updated.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key reference to the site that the user belongs to.</td><tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>A foreign key reference to the system user that this user is identified with.</td><tr>
<tr class="field"><td>system_admin_auto</td><td>boolean</td><td>A flag indicating if the user is a system_admin that is not explicitly a member of the site.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>An immutable identifier for the record.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking." Don't set this or mess with it, it's all handled automatically.</td><tr>
<tr class="field"><td>site_role_id</td><td>integer</td><td>The ID of the site role for this user. The mapping is below.
0 = SiteAdministrator
1 = SupportUser
2 = Publisher
3 = Interactor
4 = ViewerWithPublish
5 = Viewer
6 = UnlicensedWithPublish
7 = Guest
8 = Unlicensed
9 = BasicUser</td><tr>
</tbody>
</table>
<a name="public.value_synonyms_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.value_synonyms</dfn>:  The user defined synonyms associated with values of fields in datasources</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from lens_id on this table to id on table, <a href="#public.lenses_anchor">public.lenses</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from published_datasource_id on this table to id on table, <a href="#public.datasources_anchor">public.datasources</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>The unique identifier for this row that is automatically generated on insert</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site on which the datasource is published</td><tr>
<tr class="field"><td>published_datasource_id</td><td>integer</td><td>The id of the published datasource on the site</td><tr>
<tr class="field"><td>field_graph_id</td><td>text</td><td>The graph id of the field in the datasource</td><tr>
<tr class="field"><td>field_value</td><td>text</td><td>The name of the value in the field</td><tr>
<tr class="field"><td>user_defined_synonyms</td><td>ARRAY</td><td>The user defined synonyms associated with the value</td><tr>
<tr class="field"><td>lens_id</td><td>integer</td><td>id of the lens for which the value synonym is applicable</td><tr>
</tbody>
</table>
<a name="public.view_metrics_aggregations_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.view_metrics_aggregations</dfn>:  Each record represents a partial aggregation of analytics for a given view in a given time interval.  It is often necessary to sum across multiple rows to find a total for a given time interval.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>A foreign key reference to the view.</td><tr>
<tr class="field"><td>day_index</td><td>integer</td><td>Records what day of the month the analytics are aggregated over.  When 0, the aggregation is for the month and year as designated by month_index and year_index.</td><tr>
<tr class="field"><td>month_index</td><td>integer</td><td>Records what month of the year the analytics are aggregated over.  When 0, the aggregation is for the year as designated by year_index.</td><tr>
<tr class="field"><td>year_index</td><td>integer</td><td>Records what year the analytics are aggregated over</td><tr>
<tr class="field"><td>view_count</td><td>integer</td><td>Records the number of time a view was viewed in the given time interval.</td><tr>
<tr class="field"><td>device_type</td><td>text</td><td>DSD device type detected (non-null only if view is dashboard in non-authoring mode)</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the view metrics aggregation belong to.</td><tr>
</tbody>
</table>
<a name="public.view_refreshed_timestamps_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.view_refreshed_timestamps</dfn>:  This table stores timestamps at which users click on the refresh button.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Auto-generated id from postgres; also the primary key for the table.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the site. This id is same as the id (primary key) of the public.sites table.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>ID of the view. This id is same as the id (primary key) of the public.views table.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>ID of the user. This id is same as the id (primary key) of the public.users table.</td><tr>
<tr class="field"><td>refreshed_at</td><td>timestamp without time zone</td><td>The timestamp when the view is refreshed by the user.</td><tr>
</tbody>
</table>
<a name="public.views_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.views</dfn>:  Each records represents a view in a workbook.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from workbook_id on this table to id on table, <a href="#public.workbooks_anchor">public.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the view.</td><tr>
<tr class="field"><td>repository_url</td><td>text</td><td>Uniquely identifies a view. More or less composed of workbook and sheet names, but not totally obviously, especially in the presence of non-ASCII characters. Used in URLs meant to access this view.</td><tr>
<tr class="field"><td>description</td><td>text</td><td>Can hold a description of the view, but not normally populated.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>A foreign key reference to the workbook the view is part of.</td><tr>
<tr class="field"><td>index</td><td>integer</td><td>Each view has an index that is unique among views belonging to that workbook.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The last time any changes were made to this record</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>A foreign key reference to the user who owns this view.</td><tr>
<tr class="field"><td>fields</td><td>text</td><td>A list of fields extracted from the workbook's twb file.</td><tr>
<tr class="field"><td>title</td><td>text</td><td>A title for the worksheet extracted from the workbook's twb file.</td><tr>
<tr class="field"><td>caption</td><td>text</td><td>A descriptive phrase constructed for the worksheet, based on the workbook definition.</td><tr>
<tr class="field"><td>sheet_id</td><td>character varying</td><td>An identifier for the sheet. Based on the name of the sheet.</td><tr>
<tr class="field"><td>state</td><td>character varying</td><td>One of either "active" or "disabled".</td><tr>
<tr class="field"><td>sheettype</td><td>character varying</td><td>One of "story" "dashboard" and "view".</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key link to the site to which this view belongs.</td><tr>
<tr class="field"><td>first_published_at</td><td>timestamp without time zone</td><td>Records the timestamp for the first time this view was published. This value will not change is the workbook containing this view is later republished.</td><tr>
<tr class="field"><td>revision</td><td>character varying</td><td>Starts with 1.0 and increments by 0.1 with each republication.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>An immutable identifier for the record.</td><tr>
<tr class="field"><td>thumbnail_id</td><td>character varying</td><td>Unique ID used to identify the thumbnail data.</td><tr>
<tr class="field"><td>is_deleted</td><td>boolean</td><td>Whether a view has been soft deleted and is now in the recycle bin</td><tr>
</tbody>
</table>
<a name="public.views_stats_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.views_stats</dfn>:  This table is used to track how many times each user has accessed different views.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>A foreign key reference to a particular user.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>A foreign key reference to the view that was accessed. This field must be populated.</td><tr>
<tr class="field"><td>nviews</td><td>integer</td><td>Keeps a cumulative count of the number of times the view was accessed by this user.</td><tr>
<tr class="field"><td>time</td><td>timestamp without time zone</td><td>The time of the most recent access of the specified view by the specified user.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site to which the view and the user belong.</td><tr>
<tr class="field"><td>device_type</td><td>text</td><td>Device type detected for Device Designer (non-null only if view is dashboard in non-authoring mode)</td><tr>
</tbody>
</table>
<a name="public.viz_snapshots_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.viz_snapshots</dfn>:  This table represents a snapshots of viz.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the viz snapshot.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>Primary key id for view associated with the viz snapshot.</td><tr>
<tr class="field"><td>image_id</td><td>character varying</td><td>Locator for the full image of the viz snapshot.</td><tr>
<tr class="field"><td>thumbnail_id</td><td>character varying</td><td>Locator for the thumbnail image of the viz snapshot.</td><tr>
<tr class="field"><td>data_id</td><td>character varying</td><td>Locator for the data of the viz snapshot.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>reference_count</td><td>integer</td><td>The number of objects that reference a viz snapshot.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site the viz_snapshots belong to.</td><tr>
</tbody>
</table>
<a name="public.viz_states_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.viz_states</dfn>:  This table represents a snapshot of the state of a viz.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from view_id on this table to id on table, <a href="#public.views_anchor">public.views</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the viz state entity.</td><tr>
<tr class="field"><td>view_id</td><td>integer</td><td>Foreign key reference to the view associated with this viz state.</td><tr>
<tr class="field"><td>image_id</td><td>character varying</td><td>Locator for the full image of the viz state.</td><tr>
<tr class="field"><td>thumbnail_id</td><td>character varying</td><td>Locator for the thumbnail image of the viz state.</td><tr>
<tr class="field"><td>data_id</td><td>character varying</td><td>A reference to an entry in SOS which references a tcv file of the viz state.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this recorded was created</td><tr>
</tbody>
</table>
<a name="public.webhooks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.webhooks</dfn>:  Holds metadata for all registered webhooks on the server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the webhook.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>Identifier for webhook.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The site that the webhook belongs to.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that the webhook belongs to.</td><tr>
<tr class="field"><td>version</td><td>integer</td><td>The version of this webhook. 1 on create, monotonically increasing with each update of the webhook.</td><tr>
<tr class="field"><td>owner_luid</td><td>uuid</td><td>The user who is the current owner of the webhook.</td><tr>
<tr class="field"><td>url</td><td>text</td><td>The fully specified URL for the webhook to POST to when triggered.</td><tr>
<tr class="field"><td>body_template</td><td>text</td><td>JSON template for the body of the request to send when the webhook is triggered.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>Human readable name for the webhook, defaults to the value Unnamed Webhook.</td><tr>
<tr class="field"><td>event_type</td><td>text</td><td>The type of event on the server that will trigger this webhook e.g datasource refresh.</td><tr>
<tr class="field"><td>isenabled</td><td>boolean</td><td>Whether the webhook is currently run on trigger events</td><tr>
<tr class="field"><td>statuschangereason</td><td>text</td><td>Record the reason for any automated disabling/enabling of a webhook</td><tr>
<tr class="field"><td>failedattempts</td><td>integer</td><td>Number of consecutive failed delivery attempts</td><tr>
</tbody>
</table>
<a name="public.workbook_checksums_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.workbook_checksums</dfn>:  This table provides a set of checksums associated with a workbook which can be used to validate existence of a workbook based on its checksum.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from workbook_id on this table to id on table, <a href="#public.workbooks_anchor">public.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>Identifies the workbook for which this checksum applies.</td><tr>
<tr class="field"><td>checksum</td><td>character varying</td><td>The computed checksum of the workbook during download.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this checksum entry was created and will be valid only if associated workbook update timestamp is earlier than this.</td><tr>
<tr class="field"><td>expires_at</td><td>timestamp without time zone</td><td>When this checksum entry expires and became eligible for cleanup by background task.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID of the workbook_checksums.</td><tr>
</tbody>
</table>
<a name="public.workbook_events_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.workbook_events</dfn>:  Used to store workbook events stream.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Primary key for this record.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>Workbook ID.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site ID.</td><tr>
<tr class="field"><td>event_time</td><td>timestamp without time zone</td><td>Timestamp indicating when the record was inserted.</td><tr>
<tr class="field"><td>event_type</td><td>integer</td><td>Event type to differentiate between insert, update, delete.</td><tr>
</tbody>
</table>
<a name="public.workbook_exports_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.workbook_exports</dfn>:  Each row in the table corresponds to a cached pdf file.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from generated_as_user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from workbook_id on this table to id on table, <a href="#public.workbooks_anchor">public.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record.</td><tr>
<tr class="field"><td>language_id</td><td>character varying</td><td>The language ID the pdf was generated with.</td><tr>
<tr class="field"><td>locale_id</td><td>character varying</td><td>The locale ID the pdf was generated with.</td><tr>
<tr class="field"><td>generated_as_user_id</td><td>integer</td><td>The user ID iff the pdf was generated with user references. Otherwise NULL.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>The workbook id this pdf is generated from.</td><tr>
<tr class="field"><td>generated_at</td><td>timestamp without time zone</td><td>The timestamp at which the pdf was generated.</td><tr>
<tr class="field"><td>freshness_verified_at</td><td>timestamp without time zone</td><td>The timestamp at which the cached file was last verified as fresh.</td><tr>
<tr class="field"><td>data_storage_id</td><td>bigint</td><td>A reference to an entry in the repository_data table, which, in turn references the PostgreSQL large object that contains the sheet image for this entry.</td><tr>
<tr class="field"><td>data_id</td><td>character varying</td><td>Unique ID used to identify the pdf.</td><tr>
<tr class="field"><td>show_commands_query_str</td><td>text</td><td>Represents hash of the possible show commands to be applied to the viz in the native api code.</td><tr>
<tr class="field"><td>page_orientation</td><td>character varying</td><td>PDF page orientation</td><tr>
<tr class="field"><td>page_size_option</td><td>character varying</td><td>PDF page size option</td><tr>
<tr class="field"><td>file_type</td><td>integer</td><td>The file type (PDF = 0, PPT = 1). Enum to be defined in WorkbookExportOptions</td><tr>
<tr class="field"><td>customized_views</td><td>character varying</td><td>Comma separated list of custom view IDs associated with the workbook export, sorted in ascending order. NULL if not applicable</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The ID of the site to which this entry belongs.</td><tr>
</tbody>
</table>
<a name="public.workbook_extension_connections_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.workbook_extension_connections</dfn>:  Associate a workbook with an analytics extension connection.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from connection_id on this table to id on table, <a href="#public.external_service_connections_anchor">public.external_service_connections</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from workbook_id on this table to id on table, <a href="#public.workbooks_anchor">public.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>ID of association.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>ID of the analytics extension connection.</td><tr>
<tr class="field"><td>connection_id</td><td>integer</td><td>ID of the workbook.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID of the corresponding site.</td><tr>
</tbody>
</table>
<a name="public.workbook_versions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.workbook_versions</dfn>:  Workbook versions saved on server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from workbook_id on this table to id on table, <a href="#public.workbooks_anchor">public.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The id of a version. Primary key.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Reference to entry in sites table. Indicates the site to which this workbook version belongs to.</td><tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>A foreign key to the workbooks table. Reference to workbook.</td><tr>
<tr class="field"><td>publisher_id</td><td>integer</td><td>Reference to user in site users table. User who published this version. Can point to deleted user.</td><tr>
<tr class="field"><td>version_number</td><td>integer</td><td>The version number.</td><tr>
<tr class="field"><td>published_at</td><td>timestamp without time zone</td><td>The time when this version was initially published. Copied from workbook record last_updated field at the time of being overwritten.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>The size, in bytes, of this version of workbook.</td><tr>
<tr class="field"><td>content_key</td><td>character varying</td><td>Key of the workbook as string</td><tr>
<tr class="field"><td>publish_metadata</td><td>text</td><td>Metadata about how this version was published on server, such as visiblity of views.  Metadata is stored as a serialized JSON object.</td><tr>
<tr class="field"><td>sos_type</td><td>character varying</td><td>The SOS data type under which this version document is stored, or null if it is not stored in SOS.</td><tr>
<tr class="field"><td>is_revision_file_reduced</td><td>boolean</td><td>Boolean flag indicating if the stored workbook version has an extract that is not stored in the workbook document, since extracts are not versioned.</td><tr>
</tbody>
</table>
<a name="public.workbooks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.workbooks</dfn>:  Each record represents a workbook that exists on the server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from modified_by_user_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from owner_id on this table to id on table, <a href="#public.users_anchor">public.users</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from project_id on this table to id on table, <a href="#public.projects_anchor">public.projects</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from site_id on this table to id on table, <a href="#public.sites_anchor">public.sites</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the record.</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the workbook.</td><tr>
<tr class="field"><td>repository_url</td><td>text</td><td>A unique name for the workbook, derived from the ASCII characters in the name, which can be used in URLs to refer to this workbook.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The last time any changes were made to this record.</td><tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>A foreign key reference to the user that owns this workbook.</td><tr>
<tr class="field"><td>project_id</td><td>integer</td><td>A foreign key reference to the project in which this workbook exists.</td><tr>
<tr class="field"><td>view_count</td><td>integer</td><td>Keeps count of the number of views that are associated with this workbook.</td><tr>
<tr class="field"><td>size</td><td>bigint</td><td>The number of bytes used in storing the workbook information.</td><tr>
<tr class="field"><td>embedded</td><td>text</td><td>An encrypted keychain holding any credentials stored with the workbook.</td><tr>
<tr class="field"><td>thumb_user</td><td>integer</td><td>The user to be used when generating the thumbnail image. Null unless specified.</td><tr>
<tr class="field"><td>refreshable_extracts</td><td>boolean</td><td>Whether the extracts in the workbook can be refreshed.</td><tr>
<tr class="field"><td>extracts_refreshed_at</td><td>timestamp without time zone</td><td>The time at which the last extract refresh occurred.</td><tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking." Don't set this or mess with it, it's all handled automatically.</td><tr>
<tr class="field"><td>display_tabs</td><td>boolean</td><td>If true, then the sheets of the workbook are displayed on tabs.</td><tr>
<tr class="field"><td>data_engine_extracts</td><td>boolean</td><td>Indicates if this workbook has associated data engine extracts.</td><tr>
<tr class="field"><td>incrementable_extracts</td><td>boolean</td><td>Indicates if it is possible to perform an incrementable extract refresh for this workbook.</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site to which the workbook was published.</td><tr>
<tr class="field"><td>revision</td><td>character varying</td><td>Starts with 1.0 and increments by 0.1 with each republication.</td><tr>
<tr class="field"><td>first_published_at</td><td>timestamp without time zone</td><td>Records the timestamp for the first time this view was published. This value will not change is the workbook containing this view is later republished.</td><tr>
<tr class="field"><td>extracts_incremented_at</td><td>timestamp without time zone</td><td>The time of the last incremental extract refresh for extracts in this workbook.</td><tr>
<tr class="field"><td>default_view_index</td><td>integer</td><td>Indicates which view will be shown by default.</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>An immutable identifier for the record.</td><tr>
<tr class="field"><td>asset_key_id</td><td>integer</td><td>The asset encryption key used to encrypt the keychain in the embedded column.</td><tr>
<tr class="field"><td>document_version</td><td>character varying</td><td>A string that indicates the version of the document description that was used when saving this workbook.</td><tr>
<tr class="field"><td>content_version</td><td>integer</td><td>Version number of the workbook. updated on each publish</td><tr>
<tr class="field"><td>last_published_at</td><td>timestamp without time zone</td><td>Time that the user last published this workbook to server or saved the workbook during web edit. For workbooks that were last published before this column existed, the value will be null.</td><tr>
<tr class="field"><td>data_id</td><td>character varying</td><td>Unique ID used to identify the workbook data.</td><tr>
<tr class="field"><td>reduced_data_id</td><td>character varying</td><td>Unique ID used to identify the reduced workbook data.</td><tr>
<tr class="field"><td>published_all_sheets</td><td>boolean</td><td>True if user previously published all sheets in the workbook, false if they chose to not publish a sheet</td><tr>
<tr class="field"><td>extract_encryption_state</td><td>smallint</td><td>If not null, encryption state of the extracts. null or 0 - unencrypted, 1 - encrypted, 2 - pending encryption, 3 - pending decryption, 5 - pending rekey</td><tr>
<tr class="field"><td>extract_creation_pending</td><td>smallint</td><td>null or 0 - there is not extract creation in progress, 1 - there is an extract creation in progress</td><tr>
<tr class="field"><td>is_deleted</td><td>boolean</td><td>When is_deleted is true then workbook is deleted, no active job or user request can see it. It is considered to reside in Recycle Bin until either restored or permanently deleted.</td><tr>
<tr class="field"><td>parent_workbook_id</td><td>integer</td><td>null - there is no parenet workbook; if not null, it stores the id of the original workbook from which this private workbook is derived</td><tr>
<tr class="field"><td>is_private</td><td>boolean</td><td>null or false - this is not a private workbook, true - this is a private workbook</td><tr>
<tr class="field"><td>modified_by_user_id</td><td>integer</td><td>The user who last modified and published this workbook to server or saved the workbook during web edit. For workbooks that were last published before this column existed, the value will be same as owner_id.</td><tr>
<tr class="field"><td>extract_storage_format</td><td>smallint</td><td>How extracts for this data source are stored. NULL means no extracts or old-style extract folder. 0 means no extracts. 1 means old-style extract folder. 2 means new-style individual Hyper and TDE files in file store.</td><tr>
</tbody>
</table>
<a name="public.wps_extracts_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.wps_extracts</dfn>:  Each record represents an extract.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from workbook_persistence_luid on this table to workbook_persistence_luid on table, <a href="#public.wps_workbooks_anchor">public.wps_workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record, auto increment.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>LUID of the site where parent workbook belongs.</td><tr>
<tr class="field"><td>workbook_persistence_luid</td><td>uuid</td><td>Foreign key for the record. ID of the workbook.</td><tr>
<tr class="field"><td>extract_type</td><td>integer</td><td>Type of extract.</td><tr>
<tr class="field"><td>extract_guid</td><td>text</td><td>Extract identifier.</td><tr>
</tbody>
</table>
<a name="public.wps_workbooks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.wps_workbooks</dfn>:  Each record represents a versioned, per-user, per-site workbook.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>workbook_persistence_luid</td><td>uuid</td><td>Primary key for the record. ID of the workbook.</td><tr>
<tr class="field"><td>revision</td><td>integer</td><td>Starts from zero, increments by one each time a new checkpoint is stored to this workbook</td><tr>
<tr class="field"><td>author_luid</td><td>uuid</td><td>LUID of the user who created this workbook.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>LUID of the site where parent workbook belongs.</td><tr>
<tr class="field"><td>parent_content_luid</td><td>uuid</td><td>LUID of the parent published workbook.</td><tr>
<tr class="field"><td>parent_content_revision</td><td>integer</td><td>Parent published workbook version number.</td><tr>
<tr class="field"><td>checkpoint_produced_at_time</td><td>timestamp without time zone</td><td>Timestamp when the checkpoint was made.</td><tr>
<tr class="field"><td>checkpoint_producer_id</td><td>character varying</td><td>Client-provided, identifies who produced the checkpoint.</td><tr>
<tr class="field"><td>checkpoint_metadata</td><td>character varying</td><td>Client-provided, versions the checkpoint from the client perspective</td><tr>
<tr class="field"><td>checkpoint_size</td><td>integer</td><td>Checkpoint size (KB)</td><tr>
<tr class="field"><td>checkpoint_storage_key</td><td>character varying</td><td>Lookup key of the checkpoint in the storage provider</td><tr>
<tr class="field"><td>checkpoint_format</td><td>integer</td><td>Specifies binary format of checkpoint payload</td><tr>
</tbody>
</table>
<a name="recommendations.connection_fields_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.connection_fields</dfn>:  fields used in joins (extracted for the joins recommender)</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from rec_connection_tables_id on this table to id on table, <a href="#recommendations.connection_tables_anchor">recommendations.connection_tables</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table</td><tr>
<tr class="field"><td>column_name</td><td>character varying</td><td>field column name</td><tr>
<tr class="field"><td>rec_connection_tables_id</td><td>integer</td><td>ID of the table in connection_tables</td><tr>
</tbody>
</table>
<a name="recommendations.connection_tables_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.connection_tables</dfn>:  tables used in a connection in a published or embedded data source</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from rec_connections_id on this table to id on table, <a href="#recommendations.connections_anchor">recommendations.connections</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>displayed table name</td><tr>
<tr class="field"><td>custom_sql</td><td>bytea</td><td>Stores the custom sql used to generate this table if it exists</td><tr>
<tr class="field"><td>table_value</td><td>character varying</td><td>internal expanded table name</td><tr>
<tr class="field"><td>type</td><td>character varying</td><td>TABLE or CUSTOM_SQL</td><tr>
<tr class="field"><td>rec_connections_id</td><td>integer</td><td>ID of the connection</td><tr>
</tbody>
</table>
<a name="recommendations.connections_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.connections</dfn>:  a connection used by a Datasource to connect to an underlying database or data file</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from rec_datasources_id on this table to id on table, <a href="#recommendations.datasources_anchor">recommendations.datasources</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table</td><tr>
<tr class="field"><td>class</td><td>character varying</td><td>class of connection (hyper, postgresql, etc)</td><tr>
<tr class="field"><td>data_connection_id</td><td>integer</td><td>id of data connection in public schema</td><tr>
<tr class="field"><td>database</td><td>character varying</td><td>database name</td><tr>
<tr class="field"><td>port</td><td>integer</td><td>port</td><tr>
<tr class="field"><td>raw_server</td><td>character varying</td><td>raw server name as passed to the entity builder</td><tr>
<tr class="field"><td>server</td><td>character varying</td><td>canonicalized version of raw_server</td><tr>
<tr class="field"><td>rec_datasources_id</td><td>integer</td><td>datasource id the connection is used in, local to the recs tables</td><tr>
<tr class="field"><td>schema</td><td>character varying</td><td>Stores the value the schema for the connection if applicable to this driver</td><tr>
<tr class="field"><td>catalog</td><td>character varying</td><td>Stores the value the catalog for the connection if applicable to this driver (eg. Google BigQuery)</td><tr>
<tr class="field"><td>exec_catalog</td><td>character varying</td><td>Stores the value the schema for the connection if applicable to this driver (eg. Google BigQuery where it is also known as Billing Project)</td><tr>
<tr class="field"><td>project</td><td>character varying</td><td>Stores the value the project for the connection if applicable to this driver (eg. Google BigQuery)</td><tr>
<tr class="field"><td>service</td><td>character varying</td><td>Stores the value the service for the connection if applicable to this driver (eg. Snowflake)</td><tr>
<tr class="field"><td>warehouse</td><td>character varying</td><td>Stores the value the warehouse for the connection if applicable to this driver (eg. Snowflake)</td><tr>
</tbody>
</table>
<a name="recommendations.datasources_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.datasources</dfn>:  stores published datasource metadata for datasource recs trainer</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from rec_workbooks_id on this table to id on table, <a href="#recommendations.workbooks_anchor">recommendations.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>datasource name</td><tr>
<tr class="field"><td>name_in_twb</td><td>character varying</td><td>datasource name in twb</td><tr>
<tr class="field"><td>datasources_id</td><td>integer</td><td>datasource id of the datasource in the public schema</td><tr>
<tr class="field"><td>repository_url</td><td>text</td><td>repository url</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>reference to the site id in public schema</td><tr>
<tr class="field"><td>rec_workbooks_id</td><td>integer</td><td>rec workbooks id the data source is used in</td><tr>
<tr class="field"><td>last_published_at</td><td>timestamp without time zone</td><td>The UTC time at which the content was published.</td><tr>
<tr class="field"><td>is_certified</td><td>boolean</td><td>Flag that indicates whether or not this datasource is certified</td><tr>
</tbody>
</table>
<a name="recommendations.fields_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.fields</dfn>:  field in a data source</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from rec_datasources_id on this table to id on table, <a href="#recommendations.datasources_anchor">recommendations.datasources</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table</td><tr>
<tr class="field"><td>caption</td><td>text</td><td>displayed name</td><tr>
<tr class="field"><td>name</td><td>text</td><td>internal name</td><tr>
<tr class="field"><td>rec_datasources_id</td><td>integer</td><td>rec datasources id</td><tr>
</tbody>
</table>
<a name="recommendations.join_expressions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.join_expressions</dfn>:  join expressions for TableJoinTrainer</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from rec_joins_id on this table to id on table, <a href="#recommendations.joins_anchor">recommendations.joins</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from left_rec_connection_fields_id on this table to id on table, <a href="#recommendations.connection_fields_anchor">recommendations.connection_fields</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from right_rec_connection_fields_id on this table to id on table, <a href="#recommendations.connection_fields_anchor">recommendations.connection_fields</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table</td><tr>
<tr class="field"><td>operation</td><td>character varying</td><td>operation</td><tr>
<tr class="field"><td>rec_joins_id</td><td>integer</td><td>rec joins id</td><tr>
<tr class="field"><td>left_rec_connection_fields_id</td><td>integer</td><td>left rec connection fields id</td><tr>
<tr class="field"><td>right_rec_connection_fields_id</td><td>integer</td><td>right rec connection fields id</td><tr>
</tbody>
</table>
<a name="recommendations.joins_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.joins</dfn>:  stores joins in data sources for the TableJoinTrainer</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from rec_connections_id on this table to id on table, <a href="#recommendations.connections_anchor">recommendations.connections</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table</td><tr>
<tr class="field"><td>join_type</td><td>character varying</td><td>join type</td><tr>
<tr class="field"><td>rec_connections_id</td><td>integer</td><td>connection where the join was found</td><tr>
</tbody>
</table>
<a name="recommendations.ml_association_rules_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.ml_association_rules</dfn>:  the association rules used by the table recommender</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table</td><tr>
<tr class="field"><td>group_name</td><td>text</td><td>canonicalized identifier for the connection</td><tr>
<tr class="field"><td>json_indexer</td><td>text</td><td>In combination, the indexer, item_sets, and joins represent the trained model for datasource recommendations</td><tr>
<tr class="field"><td>json_item_sets</td><td>text</td><td>In combination, the indexer, item_sets, and joins represent the trained model for datasource recommendations</td><tr>
<tr class="field"><td>json_joins</td><td>text</td><td>In combination, the indexer, item_sets, and joins represent the trained model for datasource recommendations</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>when the rule was created</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Stores the site ID the model was trained on</td><tr>
</tbody>
</table>
<a name="recommendations.ml_factorization_models_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.ml_factorization_models</dfn>:  the collaborative filter model used for data source recommendations</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table</td><tr>
<tr class="field"><td>contents</td><td>bytea</td><td>Store a factorization model used in table recommendations</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Stores the site ID the model was trained on</td><tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this model was created.</td><tr>
</tbody>
</table>
<a name="recommendations.ml_last_trained_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.ml_last_trained</dfn>:  Track model loading and training on a per-site basis so it can be resumed if interrupted</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>the primary key for the table</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>ID for the site the model is trained on</td><tr>
<tr class="field"><td>started_at</td><td>timestamp without time zone</td><td>Time at which loading and training began</td><tr>
<tr class="field"><td>completed_at</td><td>timestamp without time zone</td><td>Time at which loading and training successfully completed</td><tr>
<tr class="field"><td>training_result</td><td>integer</td><td>Result code for training on site (1: In progress, 2: Failed, 3: Interrupted, 4: Crashed, 5: Success )</td><tr>
<tr class="field"><td>trainer_type</td><td>integer</td><td>Type of trainer that was used to produce this result: 1=datasource, 2=viz</td><tr>
</tbody>
</table>
<a name="recommendations.ml_ranked_datasource_fields_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.ml_ranked_datasource_fields</dfn>:  Selected top fields per datasource and their usage statistics (for published datasources)</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>datasource_remote_id</td><td>integer</td><td>Corresponds to the field datasources.datasources_id (in recommendations schema), and the primary key field datasources.id (in public schema)</td><tr>
<tr class="field"><td>field_name</td><td>text</td><td>Corresponds to the field fields.caption (in recommendations schema)</td><tr>
<tr class="field"><td>usage</td><td>integer</td><td>Stores the count of the workbooks referencing the field name</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Stores the site ID the model was trained on</td><tr>
<tr class="field"><td>id</td><td>bigint</td><td>The primary key for the table</td><tr>
</tbody>
</table>
<a name="recommendations.ml_related_view_predictions_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.ml_related_view_predictions</dfn>:  view predictions generated by the trainer</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>primary key</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>reference to the site id in public schema</td><tr>
<tr class="field"><td>view_remote_id</td><td>integer</td><td>reference to the view id in public schema</td><tr>
<tr class="field"><td>view_remote_luid</td><td>uuid</td><td>reference to the view luid in public schema</td><tr>
<tr class="field"><td>predictions_json</td><td>json</td><td>view predictions info stored as json</td><tr>
</tbody>
</table>
<a name="recommendations.ml_viz_recommendations_models_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.ml_viz_recommendations_models</dfn>:  Viz recommendations models. Stores a model per user, site pair.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>primary key</td><tr>
<tr class="field"><td>contents</td><td>bytea</td><td>binarized json string containing the viz recommendations model</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>reference to the site which the recommendations belong to</td><tr>
<tr class="field"><td>user_id</td><td>integer</td><td>reference to the user which the recommendations belong to. This id refers back to the table users in the public schema</td><tr>
</tbody>
</table>
<a name="recommendations.views_json_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.views_json</dfn>:  Views info stored as json</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>primary key</td><tr>
<tr class="field"><td>luid</td><td>uuid</td><td>reference to the view luid in public schema</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>reference to the site id in public schema</td><tr>
<tr class="field"><td>content</td><td>json</td><td>content of the view info stored as json</td><tr>
<tr class="field"><td>last_published_at</td><td>timestamp without time zone</td><td>The UTC time at which the content was published.</td><tr>
<tr class="field"><td>query_version</td><td>smallint</td><td>version of the data catalog query the data originated from</td><tr>
</tbody>
</table>
<a name="recommendations.workbooks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.workbooks</dfn>:  workbook metadata extracted for view and data source recommenders</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the workbook as extracted from workgroup.workbooks.name</td><tr>
<tr class="field"><td>workbooks_id</td><td>integer</td><td>The id of the workbook as extracted from workgroup.workbooks.id</td><tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the workbook as extracted from workgroup.workbooks.id</td><tr>
<tr class="field"><td>last_published_at</td><td>timestamp without time zone</td><td>Used to determine if this extracted record is out of date</td><tr>
</tbody>
</table>
<a name="recommendations.worksheet_fields_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.worksheet_fields</dfn>:  map from extracted worksheet id to field ids</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from rec_fields_id on this table to id on table, <a href="#recommendations.fields_anchor">recommendations.fields</a></td></tr>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from rec_worksheets_id on this table to id on table, <a href="#recommendations.worksheets_anchor">recommendations.worksheets</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table</td><tr>
<tr class="field"><td>rec_worksheets_id</td><td>integer</td><td>rec worksheets id</td><tr>
<tr class="field"><td>rec_fields_id</td><td>integer</td><td>rec fields id</td><tr>
</tbody>
</table>
<a name="recommendations.worksheets_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>recommendations.worksheets</dfn>:  worksheets, used to map user access counts to datasource access in the datasource trainer</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from rec_workbooks_id on this table to id on table, <a href="#recommendations.workbooks_anchor">recommendations.workbooks</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the table</td><tr>
<tr class="field"><td>name</td><td>character varying</td><td>name</td><tr>
<tr class="field"><td>rec_workbooks_id</td><td>integer</td><td>rec workbooks id</td><tr>
</tbody>
</table>
<a name="semantics.indexing_status_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>semantics.indexing_status</dfn>:  This table holds indexing status of field concepts.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
<tr class="fk"><td colspan="3">Foreign key/Primary key relation from field_concept_key, ontology_id on this table to key, ontology_id on table, <a href="#semantics.ss_field_concepts_anchor">semantics.ss_field_concepts</a></td></tr>
</tfoot>
<tbody>
<tr class="field"><td>id</td><td>bigint</td><td>Unique id for each row of indexing_status.</td><tr>
<tr class="field"><td>created_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was created.</td><tr>
<tr class="field"><td>updated_at</td><td>timestamp with time zone</td><td>The timestamp for when this row entry was updated.</td><tr>
<tr class="field"><td>field_concept_key</td><td>text</td><td>field_concept_key referencing to ss_field_concepts.</td><tr>
<tr class="field"><td>ontology_id</td><td>bigint</td><td>Ontology id referencing to ontology_id in ss_field_concepts.</td><tr>
<tr class="field"><td>indexing_status</td><td>integer</td><td>References to current indexing status for a field_concept.</td><tr>
<tr class="field"><td>error_code</td><td>integer</td><td>References to error_code for error occurred while indexing.</td><tr>
<tr class="field"><td>indexed_value_concept_version</td><td>text</td><td>Version of the field concept index.</td><tr>
</tbody>
</table>
<a name="webhooks.webhooks_anchor"></a>
<table id="table">
<thead>
<tr class="field"><th colspan="3"><dfn>webhooks.webhooks</dfn>:  Holds metadata for all registered webhooks on the server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr>
</thead>
<tfoot>
</tfoot>
<tbody>
<tr class="field"><td>luid</td><td>uuid</td><td>Primary key for the webhook.</td><tr>
<tr class="field"><td>site_luid</td><td>uuid</td><td>The site that the webhook belongs to.</td><tr>
<tr class="field"><td>version</td><td>integer</td><td>The version of this webhook. 1 on create, monotonically increasing with each update of the webhook.</td><tr>
<tr class="field"><td>owner_luid</td><td>uuid</td><td>The user who is the current owner of the webhook.</td><tr>
<tr class="field"><td>url</td><td>text</td><td>The fully specified URL for the webhook to POST to when triggered.</td><tr>
<tr class="field"><td>body_template</td><td>text</td><td>JSON template for the body of the request to send when the webhook is triggered.</td><tr>
<tr class="field"><td>event_type</td><td>text</td><td>The type of event on the server that will trigger this webhook e.g datasource refresh.</td><tr>
<tr class="field"><td>name</td><td>text</td><td>Human readable name for the webhook, defaults to the value Unnamed Webhook.</td><tr>
<tr class="field"><td>isenabled</td><td>boolean</td><td>Whether the webhook is currently run on trigger events</td><tr>
<tr class="field"><td>statuschangereason</td><td>text</td><td>Record the reason for any automated disabling/enabling of a webhook</td><tr>
<tr class="field"><td>failedattempts</td><td>integer</td><td>Number of consecutive failed delivery attempts</td><tr>
</tbody>
</table>
<a name="public._background_tasks_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._background_tasks</dfn>:  This view combines the important contents of both the background_jobs table and the async_jobs table to give an overall picture of jobs that were given to a backgrounder process.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>backgrounder_id</td><td>character varying</td><td>The id of the backgrounder process that did the work.</td></tr>
<tr class="field"><td>id</td><td>integer</td><td>The primary key of either the background_jobs record or the async_jobs record, depending on where this record is coming from.</td></tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td></tr>
<tr class="field"><td>completed_at</td><td>timestamp without time zone</td><td>When the job finished execution. When set, this should generally agree with the updated_at field.</td></tr>
<tr class="field"><td>finish_code</td><td>integer</td><td>Completion status for the job. Will be 0 for success, 1 for failure, and 2 for cancelled.</td></tr>
<tr class="field"><td>job_type</td><td>character varying</td><td>The type of job being run.  This looks a bit odd because it comes from a serialized symbol.</td></tr>
<tr class="field"><td>progress</td><td>integer</td><td>Can be used to indicate percent complete for the job, but in most cases simply gets set to 100 when the job is completed.</td></tr>
<tr class="field"><td>args</td><td>text</td><td>Used as a means of passing parameters about the background job.  This information is stored in a special serialized format, and thus is not easily readable.</td></tr>
<tr class="field"><td>notes</td><td>text</td><td>Can be used to store additional information about the running of the job.</td></tr>
<tr class="field"><td>started_at</td><td>timestamp without time zone</td><td>When the execution of the job was started.  This is not generally the same as created_at, because it may take some time before a backgrounder "notices" the newly created record and begins to process it.</td></tr>
<tr class="field"><td>job_name</td><td>character varying</td><td>A nice readable name for this type of job.</td></tr>
<tr class="field"><td>priority</td><td>integer</td><td>Controls which background_jobs records are processed first.  The highest priority is 0, and the lowest is 100.  Integer values in between are also valid.</td></tr>
<tr class="field"><td>title</td><td>character varying</td><td>Can be used to provide some additional information about the job.</td></tr>
<tr class="field"><td>processed_on_worker</td><td>character varying</td><td>Identifies the machine on which the job is run.</td></tr>
<tr class="field"><td>subtitle</td><td>character varying</td><td>Can be used to provide some additional information about the job.</td></tr>
<tr class="field"><td>language</td><td>character varying</td><td>The language for the job is listed here.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Links to a site, if one is relevant, otherwise it is left NULL.</td></tr>
<tr class="field"><td>locale</td><td>character varying</td><td>The locale for the job is listed here.</td></tr>
<tr class="field"><td>subscriptions_attach_image</td><td>boolean</td><td>Boolean that represents whether to attach images to a subscription background_job. Will be NULL if the background_job is not a subscription.</td></tr>
<tr class="field"><td>subscriptions_attach_pdf</td><td>boolean</td><td>Boolean that represents whether to attach a PDF to a subscription background_job. Will be NULL if the background_job is not a subscription.</td></tr>
</tbody>
</table>
<a name="public._comments_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._comments</dfn>:  Comments users made on views.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the underlying comments record.</td></tr>
<tr class="field"><td>title</td><td>text</td><td>Not used.</td></tr>
<tr class="field"><td>comment</td><td>text</td><td>Comment text.</td></tr>
<tr class="field"><td>commentable_type</td><td>character varying</td><td>View.</td></tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>Date when comment was created.</td></tr>
<tr class="field"><td>drawing</td><td>text</td><td>Not used.</td></tr>
<tr class="field"><td>commentable_id</td><td>integer</td><td>Corresponding view id.</td></tr>
<tr class="field"><td>user_id</td><td>integer</td><td>Id of the user who made the comment.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Links to the site that the user and this comment belong to.</td></tr>
</tbody>
</table>
<a name="public._customized_views_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._customized_views</dfn>:  When a user creates a customized view, the data that supports that goes in the customized_views table, and is reflected in this view.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>name</td><td>character varying</td><td>A combination of the site name and the customized_view name.</td></tr>
<tr class="field"><td>repository_url</td><td>character varying</td><td>URL text created from workbook, sheet domain, and url_id.</td></tr>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the underlying customized_views record.</td></tr>
<tr class="field"><td>size</td><td>integer</td><td>The number of bytes it took to describe the changes from the base view to the customized view.</td></tr>
<tr class="field"><td>view_name</td><td>character varying</td><td>The name of the view that this customized view is based on.</td></tr>
<tr class="field"><td>sheet_id</td><td>character varying</td><td>An identifier for the sheet.  Based on the name of the sheet.</td></tr>
<tr class="field"><td>workbook_url</td><td>text</td><td>A unique name for the workbook, that contains the base view, derived from the ASCII characters in the name, which can be used in URLs to refer to this workbook.</td></tr>
<tr class="field"><td>workbook_name</td><td>character varying</td><td>The actual name of the workbook, that contains the base view, derived from the ASCII characters in the name, which can be used in URLs to refer to this workbook.</td></tr>
<tr class="field"><td>email</td><td>character varying</td><td>The email of the system_user associated with this customized view.</td></tr>
<tr class="field"><td>user_name</td><td>character varying</td><td>The name of the system_user associated with this customized view.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key to the site that this customized view is associated with (the site of the user who created it).</td></tr>
</tbody>
</table>
<a name="public._datasources_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._datasources</dfn>:  Shows all Published datasources on server, along with some associated information.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the underlying datasources record.</td></tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the published datasource.</td></tr>
<tr class="field"><td>datasource_url</td><td>text</td><td>Uniquely identifies a datasource.  More or less consists of a slightly modified name, but not totally obviously, especially in the presence of non-ASCII characters.  Used in URLs meant to access this datasource.</td></tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The user ID of the owner/uploader of the datasource.</td></tr>
<tr class="field"><td>owner_name</td><td>character varying</td><td>The name of the system_user linked to owner_id</td></tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td></tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>When this record was last updated.</td></tr>
<tr class="field"><td>size</td><td>bigint</td><td>The size in bytes of the datasource.</td></tr>
<tr class="field"><td>project_id</td><td>integer</td><td>The associated project ID where the datasource was published.</td></tr>
<tr class="field"><td>project_name</td><td>character varying</td><td>The name of the project linked via project_id.</td></tr>
<tr class="field"><td>server</td><td>text</td><td>DNS server name to connect to (for the associated data_connection record).</td></tr>
<tr class="field"><td>dbclass</td><td>character varying</td><td>Type of data connection (ie mysql, postgres, sqlproxy etc) (for the associated data_connection record).</td></tr>
<tr class="field"><td>port</td><td>integer</td><td>TCP port number of the connect (eg. 5432 for postgres) (for the associated data_connection record).</td></tr>
<tr class="field"><td>username</td><td>text</td><td>Username to use when connecting.</td></tr>
<tr class="field"><td>dbname</td><td>character varying</td><td>The database name associated with the linked data_connection record.</td></tr>
<tr class="field"><td>owner_type</td><td>character varying</td><td>"Datasource"</td></tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>The system_user linked to the user whose id is owner_id.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site that contains this datasource.</td></tr>
<tr class="field"><td>domain_id</td><td>integer</td><td>A foreign key reference to the domain of the owner.</td></tr>
<tr class="field"><td>domain_name</td><td>character varying</td><td>The name is either "local" or the name of some Active Directory group.</td></tr>
</tbody>
</table>
<a name="public._datasources_stats_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._datasources_stats</dfn>:  Some historical useage information about datasources.  Based on the records that exist in the historical events tables.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>nviews</td><td>bigint</td><td>The number of times that the datasource has been accessed.</td></tr>
<tr class="field"><td>last_access_time</td><td>timestamp without time zone</td><td>The most recent access of the datasource</td></tr>
<tr class="field"><td>datasource_id</td><td>integer</td><td>Links to the datasource whose usage is being described.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site in which this datasource exists.</td></tr>
</tbody>
</table>
<a name="public._groups_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._groups</dfn>:  A grouping of users. Can be locally created or imported from Active Directory.  Reflects the contents of the groups table and associated tables.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key of the underlying groups record.</td></tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name that was given to the group.</td></tr>
<tr class="field"><td>site_name</td><td>character varying</td><td>The name of the site that this group belongs in.</td></tr>
<tr class="field"><td>domain_name</td><td>character varying</td><td>The name of the domain that this group is linked to.</td></tr>
<tr class="field"><td>domain_short_name</td><td>character varying</td><td>A short version of the domain that this group is linked to.</td></tr>
<tr class="field"><td>domain_family</td><td>character varying</td><td>Either local or ActiveDirectory.</td></tr>
</tbody>
</table>
<a name="public._http_requests_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._http_requests</dfn>:  Each record represents a request received by Tableau Server.  Reflects data in the http_requests table.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>controller</td><td>character varying</td><td>The part of the application that received the request.</td></tr>
<tr class="field"><td>action</td><td>character varying</td><td>The action requested.</td></tr>
<tr class="field"><td>http_referer</td><td>character varying</td><td>The referrer.</td></tr>
<tr class="field"><td>http_user_agent</td><td>character varying</td><td>The agent string supplied by the client.</td></tr>
<tr class="field"><td>http_request_uri</td><td>text</td><td>The requested URI.</td></tr>
<tr class="field"><td>remote_ip</td><td>character varying</td><td>The client's IP address (from the perspective of the server).</td></tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>When this record was created.</td></tr>
<tr class="field"><td>session_id</td><td>character varying</td><td>The session with which the request is associated.</td></tr>
<tr class="field"><td>completed_at</td><td>timestamp without time zone</td><td>When the request was completed.</td></tr>
<tr class="field"><td>port</td><td>integer</td><td>The port on which the request was received.</td></tr>
<tr class="field"><td>user_id</td><td>integer</td><td>The user associated with the request.</td></tr>
<tr class="field"><td>worker</td><td>character varying</td><td>Which worker machine received the request.</td></tr>
<tr class="field"><td>vizql_session</td><td>text</td><td>The vizql session associated with this request.</td></tr>
<tr class="field"><td>user_ip</td><td>character varying</td><td>The IP address of the originator of the request.</td></tr>
<tr class="field"><td>currentsheet</td><td>character varying</td><td>Which sheet was being viewed.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site associated with the request.</td></tr>
</tbody>
</table>
<a name="public._projects_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._projects</dfn>:  Each row of the table corresponds to a project on Tableau Server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the underlying record in the projects table.</td></tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the project.</td></tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td></tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>The id of the user who owns this project.</td></tr>
<tr class="field"><td>owner_name</td><td>character varying</td><td>The name of the system_user who owns this project.</td></tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>The id of the system_user who owns this project.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Refers to the site which contains this project.</td></tr>
</tbody>
</table>
<a name="public._schedules_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._schedules</dfn>:  Records define a schedule according to which certain regular tasks may be performed (see tasks table). They also indicate the next time at which the schedule will be triggered.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the record in the underlying schedules table.</td></tr>
<tr class="field"><td>name</td><td>character varying</td><td>A schedule can be given a name, which is stored here.</td></tr>
<tr class="field"><td>active</td><td>boolean</td><td>If set to false, this means that the schedule is inactive, meaning that no tasks will be performed when the schedules triggers.</td></tr>
<tr class="field"><td>priority</td><td>integer</td><td>Priority can range from 1 to 100, with lower values corresponding to higher priority.</td></tr>
<tr class="field"><td>schedule_type</td><td>integer</td><td>One of 0 (Hourly), 1 (Daily), 2 (Weekly), 3 (Monthly).</td></tr>
<tr class="field"><td>day_of_week_mask</td><td>integer</td><td>Indicates which day of the week this schedule will run.  The information is encoded in the given integer.  To interpret it, convert the integer to binary.  The days of the week correspond to Sunday : 1, Monday : 10, Tuesday : 100, Wednesday : 1000, Thursday : 10000, Friday : 100000, Saturday : 1000000.</td></tr>
<tr class="field"><td>day_of_month_mask</td><td>integer</td><td>Indicates which day of the month this schedule will run.  The information is encoded in the given integer.  To interpret it, convert the integer to binary.  The days of the month correspond to 1st : 1, 2nd: 10, 3rd: 100, 4th: 1000, 5th: 10000, etc.</td></tr>
<tr class="field"><td>start_at_minute</td><td>integer</td><td>The minute following the start of the designated time period implied by the schedule_type.  For example, for a daily schedule, this would be number of minutes past midnight at the start of the day.  For hourly, it would be the number of minutes past the beginning of the hour.</td></tr>
<tr class="field"><td>minute_interval</td><td>integer</td><td>Once the schedule triggers, it will retrigger at this interval during the time period implied by the schedule_type or until end_at_minute, or end_schedule_at.</td></tr>
<tr class="field"><td>end_at_minute</td><td>integer</td><td>The minute following the start of the designated time period implied schedule_type, at which the schedule should stop triggering.</td></tr>
<tr class="field"><td>end_schedule_at</td><td>timestamp without time zone</td><td>Used to indicate a point in time, after which the schedule should never trigger.</td></tr>
<tr class="field"><td>run_next_at</td><td>timestamp without time zone</td><td>When the schedule will next trigger.</td></tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which this record was created.</td></tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The last time any changes were made to this record.</td></tr>
<tr class="field"><td>hidden</td><td>boolean</td><td>If set to true, then this schedule will not be listed in the GUI, otherwise it will be.</td></tr>
<tr class="field"><td>serial_collection_id</td><td>integer</td><td>A foreign key to the serial_collections table.  Two jobs with the same serial_collection_id cannot be processed simultaneously.  When the job record for a task linked to this schedule is created, it is assigned this serial_collection_id.</td></tr>
<tr class="field"><td>lock_version</td><td>integer</td><td>Used to implement "optimistic locking" by JPA/Hibernate.  The counter increases each time the record is changed.  Not useful for customers.</td></tr>
<tr class="field"><td>scheduled_action</td><td>integer</td><td>Used to classify schedules into one of two categories: 0 (Extract related) 1 (Subscription related)</td></tr>
<tr class="field"><td>scheduled_action_type</td><td>text</td><td>A friendly string representation of the type of scheduled action.</td></tr>
<tr class="field"><td>defined_by</td><td>integer</td><td>The mechanism type of how the schedule is created, e.g. 0 for system_admin, 1 for self_service.</td></tr>
</tbody>
</table>
<a name="public._sessions_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._sessions</dfn>:  Settings associated with a user's browser session.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>session_id</td><td>character varying</td><td>Session identifier.</td></tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>Time when session was last updated, used to expire inactive sessions.</td></tr>
<tr class="field"><td>user_id</td><td>integer</td><td>Foreign key to users table.  Tells the user whose session this is.</td></tr>
<tr class="field"><td>user_name</td><td>character varying</td><td>The name of the system_user linked to the user whose session this is.</td></tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>The id of the system_user linked to the user whose session this is.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site that this session belongs to.</td></tr>
</tbody>
</table>
<a name="public._sites_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._sites</dfn>:  Each record represents a site. Each site holds its own workbooks, datasources, users, etc.  Strict isolation between the contents of each site is maintained.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the underlying sites record.</td></tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the site.</td></tr>
<tr class="field"><td>url_namespace</td><td>character varying</td><td>String used in the construction of URLs that target this site.</td></tr>
<tr class="field"><td>status</td><td>character varying</td><td>One of "active" "suspended" or "locked".</td></tr>
</tbody>
</table>
<a name="public._subscriptions_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._subscriptions</dfn>:  Each record provides information about subscriptions that are scheduled.  Subscriptions are a mechanism for receiving specified content by email on some schedule.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the underlying subscriptions record.</td></tr>
<tr class="field"><td>subject</td><td>character varying</td><td>A string that describes the nature of the subscription.</td></tr>
<tr class="field"><td>content_type</td><td>text</td><td>Describes what type of content is being delivered by this subscription. One of: "Customized View - Single View", "Workbook", "Single View", or "Customized View - Workbook".</td></tr>
<tr class="field"><td>view_url</td><td>text</td><td>A URL string that describes the view to be delivered, when the subscription is for a view.</td></tr>
<tr class="field"><td>workbook_url</td><td>text</td><td>A URL string that describes the workbook to be delivered, when the subscription is for a workbook.</td></tr>
<tr class="field"><td>customized_view_id</td><td>integer</td><td>A foreign key reference to the customized view, if the subscription is for a customized view.</td></tr>
<tr class="field"><td>last_sent</td><td>timestamp without time zone</td><td>The last time at which the the subscription was sent.</td></tr>
<tr class="field"><td>user_id</td><td>integer</td><td>A foreign key reference to the user who will receive the subscription.</td></tr>
<tr class="field"><td>user_name</td><td>character varying</td><td>The name of the system_user who will receive the subscription.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site that the subscription (and the user) belongs to.</td></tr>
<tr class="field"><td>site_name</td><td>character varying</td><td>The name of the site that the subscription (and the user) belongs to.</td></tr>
<tr class="field"><td>schedule_name</td><td>character varying</td><td>The name of the schedule that this subscription runs under.</td></tr>
<tr class="field"><td>schedule_active</td><td>boolean</td><td>If set to false, this means that the subscription is inactive.</td></tr>
<tr class="field"><td>schedule_run_next_at</td><td>timestamp without time zone</td><td>The next time the subscription should be sent.</td></tr>
<tr class="field"><td>schedule_priority</td><td>integer</td><td>Priority can range from 1 to 100, with lower values corresponding to higher priority.</td></tr>
</tbody>
</table>
<a name="public._system_users_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._system_users</dfn>:  Each record represents a user of the server. These records correspond to login identity. A single system_user may potentially be able to login to multiple sites. The linkage between a system_user and their allowed sites is defined through the "users" table.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the underlying system_user record.</td></tr>
<tr class="field"><td>name</td><td>character varying</td><td>The username of the user.</td></tr>
<tr class="field"><td>email</td><td>character varying</td><td>The email of the user.</td></tr>
<tr class="field"><td>friendly_name</td><td>character varying</td><td>A friendly name that might be used in the GUI to refer to the user.</td></tr>
<tr class="field"><td>custom_display_name</td><td>boolean</td><td>If set to true, this prevents the friendly_name from potentially being overwritten by Active Airectory information when the user is read in from Active Directory.  Seldom done.</td></tr>
<tr class="field"><td>admin_level</td><td>integer</td><td>Indicates if the user is a system administrator. 10 : system admin, 0 : not a system admin</td></tr>
<tr class="field"><td>domain_name</td><td>character varying</td><td>The name of the domain that the user belongs to. The name is either "local" or the name of some Active Directory group.</td></tr>
<tr class="field"><td>domain_short_name</td><td>character varying</td><td>An alternate shorter form of the name</td></tr>
<tr class="field"><td>domain_family</td><td>character varying</td><td>Either local or ActiveDirectory.</td></tr>
</tbody>
</table>
<a name="public._tags_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._tags</dfn>:  Each tag is a string value. A given tag can be associated with many taggable items in a site.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>tag_id</td><td>integer</td><td>The primary key for the underlying tags table.</td></tr>
<tr class="field"><td>tag_name</td><td>character varying</td><td>The value of the tag.</td></tr>
<tr class="field"><td>object_type</td><td>character varying</td><td>The type of the taggable item - this is used to identify which table to join to.</td></tr>
<tr class="field"><td>taggable_id</td><td>integer</td><td>The ID of the taggable item.</td></tr>
<tr class="field"><td>object_id</td><td>integer</td><td>The same as taggable_id.</td></tr>
<tr class="field"><td>object_name</td><td>character varying</td><td>The name of the view, workbook, or datasource that is being tagged.</td></tr>
<tr class="field"><td>user_id</td><td>integer</td><td>The ID of the user that owns the tagging.</td></tr>
<tr class="field"><td>user_name</td><td>character varying</td><td>The name of the system_user that owns the tagging.</td></tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>The id of the system_user that owns the tagging.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The site in which the tagged object exists (likewise the user, etc.).</td></tr>
</tbody>
</table>
<a name="public._users_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._users</dfn>:  Information relating to users.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the underlying user record.</td></tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the system_user linked to the user record.</td></tr>
<tr class="field"><td>login_at</td><td>timestamp without time zone</td><td>The time of the most recent login for this user.</td></tr>
<tr class="field"><td>friendly_name</td><td>character varying</td><td>The friendly name of the system_user linked to the user record.</td></tr>
<tr class="field"><td>licensing_role_id</td><td>integer</td><td>Foreign key reference to the licensing_roles table. Indicates the licensing role that is assigned to this user.</td></tr>
<tr class="field"><td>licensing_role_name</td><td>character varying</td><td>The name of the licensing role that is assigned to this user.</td></tr>
<tr class="field"><td>domain_id</td><td>integer</td><td>The domain_id of the system_user linked to the user record.</td></tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>The id of the system_user linked to the user record.</td></tr>
<tr class="field"><td>domain_name</td><td>character varying</td><td>The domain_name of the system_user linked to the user record.</td></tr>
<tr class="field"><td>domain_short_name</td><td>character varying</td><td>The a shorter version of the domain_name of the system_user linked to the user record.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>The id of the site that the user belongs to.</td></tr>
</tbody>
</table>
<a name="public._views_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._views</dfn>:  Each records represents a view in a workbook.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>Primary key for the underlying views record.</td></tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the view.</td></tr>
<tr class="field"><td>view_url</td><td>text</td><td>Uniquely identifies a view.  More or less composed of workbook and sheet names, but not totally obviously, especially in the presence of non-ASCII characters.  Used in URLs meant to access this view.</td></tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which the underlying views record was created.</td></tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>A foreign key reference to the user who owns this view.</td></tr>
<tr class="field"><td>owner_name</td><td>character varying</td><td>The name of the user who owns this view.</td></tr>
<tr class="field"><td>workbook_id</td><td>integer</td><td>A foreign key reference to the workbook the view is part of.</td></tr>
<tr class="field"><td>index</td><td>integer</td><td>Each view has an index that is unique among views belonging to that workbook.</td></tr>
<tr class="field"><td>title</td><td>text</td><td>A title for the worksheet extracted from the workbook's twb file.</td></tr>
<tr class="field"><td>caption</td><td>text</td><td>A descriptive phrase constructed for the worksheet, based on the workbook definition.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>A foreign key link to the site to which this view belongs.</td></tr>
</tbody>
</table>
<a name="public._views_stats_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._views_stats</dfn>:  Used to track how many times each user has accessed different views.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>users_id</td><td>integer</td><td>A foreign key reference to a particular user.</td></tr>
<tr class="field"><td>system_users_name</td><td>character varying</td><td>The name of the system_user that corresponds to the user.</td></tr>
<tr class="field"><td>users_login_at</td><td>timestamp without time zone</td><td>The time of the most recent login for this user.</td></tr>
<tr class="field"><td>system_users_friendly_name</td><td>character varying</td><td>The friendly_name of the system_user that corresponds to the user.</td></tr>
<tr class="field"><td>views_id</td><td>integer</td><td>A foreign key reference to the view that was accessed. This field must be populated.</td></tr>
<tr class="field"><td>system_users_id</td><td>integer</td><td>The id of the system_user that corresponds to the user.</td></tr>
<tr class="field"><td>views_name</td><td>character varying</td><td>The name of the view that was accessed.</td></tr>
<tr class="field"><td>views_url</td><td>text</td><td>Uniquely identifies a view.  More or less composed of workbook and sheet names, but not totally obviously, especially in the presence of non-ASCII characters.  Used in URLs meant to access this view.</td></tr>
<tr class="field"><td>views_workbook_id</td><td>integer</td><td>A foreign key reference to the workbook the view is part of.</td></tr>
<tr class="field"><td>views_created_at</td><td>timestamp without time zone</td><td>The time at which the view was created.</td></tr>
<tr class="field"><td>views_owner_id</td><td>integer</td><td>A foreign key reference to the user who owns the view.</td></tr>
<tr class="field"><td>views_index</td><td>integer</td><td>Each view has an index that is unique among views belonging to that workbook.</td></tr>
<tr class="field"><td>views_title</td><td>text</td><td>A title for the worksheet extracted from the workbook's twb file.</td></tr>
<tr class="field"><td>views_caption</td><td>text</td><td>A descriptive phrase constructed for the worksheet, based on the workbook definition.</td></tr>
<tr class="field"><td>device_type</td><td>text</td><td>DSD device type detected (non-null only if view is dashboard in non-authoring mode)</td></tr>
<tr class="field"><td>nviews</td><td>integer</td><td>Keeps a cumulative count of the number of times the view was accessed by this user.</td></tr>
<tr class="field"><td>last_view_time</td><td>timestamp without time zone</td><td>The time of the most recent access of the specified view by the specified user.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Links to the site that contains the view.</td></tr>
</tbody>
</table>
<a name="public._workbooks_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public._workbooks</dfn>:  Each record represents a workbook that exists on the server.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>id</td><td>integer</td><td>The primary key for the underlying workbook record.</td></tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the workbook.</td></tr>
<tr class="field"><td>workbook_url</td><td>text</td><td>A unique name for the workbook, derived from the ASCII characters in the name, which can be used in URLs to refer to this workbook.</td></tr>
<tr class="field"><td>created_at</td><td>timestamp without time zone</td><td>The time at which the workbook record was created.</td></tr>
<tr class="field"><td>updated_at</td><td>timestamp without time zone</td><td>The last time any changes were made to this workbook record.</td></tr>
<tr class="field"><td>owner_id</td><td>integer</td><td>A foreign key reference to the user that owns this workbook.</td></tr>
<tr class="field"><td>project_id</td><td>integer</td><td>A foreign key reference to the project in which this workbook exists.</td></tr>
<tr class="field"><td>size</td><td>bigint</td><td>The number of bytes used in storing the workbook information.</td></tr>
<tr class="field"><td>view_count</td><td>integer</td><td>Keeps count of the number of views that are associated with this workbook.</td></tr>
<tr class="field"><td>owner_name</td><td>character varying</td><td>The name of the system_user who is the owner.</td></tr>
<tr class="field"><td>project_name</td><td>character varying</td><td>The name of the project that this workbook is part of.</td></tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>The id of the system_user who is the owner.</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Links to the site that contains this workbook.</td></tr>
<tr class="field"><td>domain_id</td><td>integer</td><td>A foreign key reference to the domain of the owner.</td></tr>
<tr class="field"><td>domain_name</td><td>character varying</td><td>The name is either "local" or the name of some Active Directory group.</td></tr>
</tbody>
</table>
<a name="public.identity_based_activation_admin_view_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.identity_based_activation_admin_view</dfn>:  Login-based License Management (LBLM) -  Database view to faciliate Admin Server and Site Views for Login-based License Usage Reporting.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>iba_user_id</td><td>character varying</td><td>Generated Id for user for IBA Reporting</td></tr>
<tr class="field"><td>site_id</td><td>integer</td><td>Site being used.</td></tr>
<tr class="field"><td>device_fingerprint</td><td>character varying</td><td>Uniquely identifies device. Built/generated from umn.</td></tr>
<tr class="field"><td>product_type</td><td>character varying</td><td>Product being used at the client level.</td></tr>
<tr class="field"><td>user_role</td><td>character varying</td><td>Values: CREATOR, SITE_ADMINISTRATOR, SERVER_ADMINISTRATOR</td></tr>
<tr class="field"><td>host_name</td><td>character varying</td><td>Computer host name.</td></tr>
<tr class="field"><td>product_version</td><td>character varying</td><td>application/product version being used at the client level.</td></tr>
<tr class="field"><td>registration_first_name</td><td>character varying</td><td>Registered user first name</td></tr>
<tr class="field"><td>registration_last_name</td><td>character varying</td><td>Registered user last name</td></tr>
<tr class="field"><td>registration_email</td><td>character varying</td><td>Registered user email address</td></tr>
<tr class="field"><td>registration_date</td><td>timestamp without time zone</td><td>Date active key was registered.</td></tr>
<tr class="field"><td>client_user_name</td><td>character varying</td><td>Login/User name from the client level.</td></tr>
<tr class="field"><td>atr_expiration_date</td><td>timestamp without time zone</td><td>Expiration date of active key.  This date will remain NULL until first reporting event is sent.</td></tr>
<tr class="field"><td>hardware_serial_number</td><td>character varying</td><td>Uniquely identifies company's hardware asset.</td></tr>
<tr class="field"><td>registration_custom_field</td><td>character varying</td><td>custom field from registration</td></tr>
<tr class="field"><td>machine_os</td><td>character varying</td><td>os_architecture</td></tr>
<tr class="field"><td>virtual_machine</td><td>boolean</td><td>is the machine virtual</td></tr>
<tr class="field"><td>atr_chain_id</td><td>character varying</td><td>ATR Chain Id</td></tr>
<tr class="field"><td>domain_information</td><td>character varying</td><td>Computer Active Directory domain.</td></tr>
<tr class="field"><td>date_atr_issued</td><td>timestamp without time zone</td><td>The date-time the ATR was successfully issued by the ATR Service. This gets filled in when the Server successfully receives an ATR from the ATR Service, but before the Server returns the ATR to Desktop.</td></tr>
<tr class="field"><td>date_atr_failed</td><td>timestamp without time zone</td><td>date-time when the ATR successfully returned from the server for this user, device, product and site.</td></tr>
<tr class="field"><td>date_last_updated</td><td>timestamp without time zone</td><td>This field is updated anytime any of date_atr_issued, date_atr_failed, date_activated, date_last_used is updated. This field makes it easy to determine when the user last attempted any action against a given productType, device, site combination.</td></tr>
<tr class="field"><td>server_user_name</td><td>character varying</td><td>User friendly name on the server level.</td></tr>
<tr class="field"><td>server_email</td><td>character varying</td><td>Email for user on the server level.</td></tr>
<tr class="field"><td>site_luid</td><td>character varying</td><td>LUID from sites table.</td></tr>
<tr class="field"><td>date_activated</td><td>timestamp without time zone</td><td>date-time is set upon first activation by the client (e.g. Tableau Desktop), after which it is never updated. The intent of this field is to allow the admin to understand when a user first began utilizing their Tableau license.</td></tr>
<tr class="field"><td>date_last_used</td><td>timestamp without time zone</td><td>date-time the last time the user used this product from this device for this site. NOTE: 1) The server used for activation will be updated, even if the user works and publishes on a different server. 2) This field is updated every time Desktop activates with LBLM and also every time an LBLM reporting event is sent.</td></tr>
<tr class="field"><td>date_creator_role_assigned</td><td>timestamp without time zone</td><td>Datetime user was assigned a creator role. Triggered by site role change in the users table.</td></tr>
<tr class="field"><td>date_creator_role_unassigned</td><td>timestamp without time zone</td><td>Datetime user was unassigned a creator role. Triggered by site role change in the users table.</td></tr>
<tr class="field"><td>site_name</td><td>character varying</td><td>The name of the site sourced from the name column in the sites table.</td></tr>
</tbody>
</table>
<a name="public.users_view_anchor"></a>
<table id="table" summary="Some database table">
<thead>
<tr class="field"><th colspan="3"><dfn>public.users_view</dfn>:  Each record corresponds to a user on the system.  The data presented is a combination of user data and data from the linked system_user.</th></tr>
<tr class="field"><th scope="col">Name</th><th scope="col">Type<th scope="col">Description</th><tr>
</thead>
<tbody>
<tr class="field"><td>email</td><td>character varying</td><td>The email of the system_user.</td></tr>
<tr class="field"><td>login_at</td><td>timestamp without time zone</td><td>The last time the system_user logged in.</td></tr>
<tr class="field"><td>name</td><td>character varying</td><td>The name of the system_user.</td></tr>
<tr class="field"><td>id</td><td>integer</td><td>The id of the underlying users record.</td></tr>
<tr class="field"><td>system_user_id</td><td>integer</td><td>The id of the linked system_users record.</td></tr>
</tbody>
</table>
            </body>
          </html>
